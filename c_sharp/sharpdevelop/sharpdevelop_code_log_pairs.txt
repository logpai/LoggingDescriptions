protected void bugclickedhandler(object sender, eventargs e) {	try {	copyinfotoclipboard();	string uritext = "http: uri uri = new uri(uritext);	utils.invokebrowser(uri, !utils.show_window);	} catch (exception ex) {	
error sending bug report 

========================= sharpdevelop sample_83 =========================

_typelib = typelib;	if (name == null) {	comclassinfo clsinfo = typelib.getclassinfofromclsid(_guid);	name = clsinfo.name;	}	type type = typelib.findtypebyname(name, typelibrary.find_class);	if (type == null) {	_typefailedexception = new exception("clr type not found in " + _container + " for activex type " + this + ".\n\nthis is likely caused by " + "the assembly corresponding to " + "this type library not being " + "available.");	throw _typefailedexception;	}	
comclassinfo type 

protected type gettypeforclass() {	type type = null;	if (_typelibstring != null) {	return gettypefromtypelib (typelibrary.gettypelib(new guid(_typelibstring), _typelibversion));	}	if (traceutil.if(this, tracelevel.info)) {	
attempting to create obj for 

_typefailedexception = new exception("unable to determine clr type for " + getname(), ex);	throw _typefailedexception;	}	finally {	try {	if (objinfo != null) {	object o = objinfo.obj;	objectinfo.removeobjectinfo(o);	while (true) {	int count = marshal.releasecomobject(o);	
final marshal releasecomobject count 

if (objinfo != null) {	object o = objinfo.obj;	objectinfo.removeobjectinfo(o);	while (true) {	int count = marshal.releasecomobject(o);	if (count <= 0) break;	}	}	while (true) {	int count = marshal.release(comobj);	
final marshal release count 

int count = marshal.releasecomobject(o);	if (count <= 0) break;	}	}	while (true) {	int count = marshal.release(comobj);	if (count <= 0) break;	}	}	catch (exception ex) {	
error on cleanup 

========================= sharpdevelop sample_70 =========================

public static void dopaste(isolutionfoldernode foldernode) {	system.windows.idataobject dataobject = sd.clipboard.getdataobject();	if (!doenablepaste(foldernode.folder, dataobject)) {	
solutionfoldernode dopaste pasting was not enabled 

========================= sharpdevelop sample_5178 =========================

methoddeclaration extensionmethod = new methoddeclaration();	extensionmethod.modifier = modifiers.public | modifiers.static;	extensionmethod.typereference = method.typereference;	extensionmethod.isextensionmethod = true;	if (string.isnullorempty(methodprefix)) {	extensionmethod.name = method.name;	} else if (method.name.startswith(methodprefix)) {	extensionmethod.name = method.name.substring(methodprefix.length);	} else {	extensionmethod.name = method.name;	
warning is missing prefix 

}	}	}	csharpoutputvisitor csout = new csharpoutputvisitor();	csout.visitcompilationunit(generated, null);	string output = csout.text;	if (outputfile != null) {	file.writealltext(outputfile, output);	}	if (haswarnings) {	
press any key to continue 

========================= sharpdevelop sample_371 =========================

public iviewcontent createcontentforfile(openedfile file) {	var viewcmd = new createdesignercommand(file);	viewcmd.run();	
designerbinding designer started 

========================= sharpdevelop sample_1545 =========================

public tocentry(string id) {	this.id = id;	client.downloadstringcompleted += (_, e) => {	try {	
helpviewer tocentry found 

========================= sharpdevelop sample_1726 =========================

public void setup(string title, string bodytext, int maxvalue, bool hasprogresstext, bool final) {	
progress setup max 

public void setup(string title, string bodytext, int maxvalue, bool hasprogresstext, bool final) {	if (maxvalue == 0 && final) {	
setup final close 

_bodytext = bodytext;	_maxvalue = maxvalue;	_hasprogresstext = hasprogresstext;	_final = final;	if (controls.count > 0) {	_done = false;	_textbox.text = _bodytext;	_progress.value = 0;	_progress.maximum = _maxvalue;	if (_label != null) _label.text = "";	
using existing controls 

========================= sharpdevelop sample_184 =========================

combobox.sorted = false;	combobox.drawitem += new drawitemeventhandler(comboboxdrawitem);	combobox.measureitem += new measureitemeventhandler(comboboxmeasureitem);	combobox.selectedindexchanged += new eventhandler(comboboxselectedindexchanged);	panel.controls.add(grid);	panel.controls.add(combobox);	sd.winforms.setcontent(contentcontrol, panel);	sd.projectservice.solutionclosed += solutionclosedevent;	grid.propertyvaluechanged += new propertyvaluechangedeventhandler(propertychanged);	grid.contextmenustrip = sd.winforms.menuservice.createcontextmenu(this, "/sharpdevelop/views/propertypad/contextmenu");	
propertypad created 

public void showhelp() {	
show help on property pad 

========================= sharpdevelop sample_5168 =========================

public helpservice() {	
create helpservice 

========================= sharpdevelop sample_1561 =========================

}	}	var appxamlxml = xmlreader.create(new stringreader(node.innerxml));	var appxamlcontext = new xamldesigncontext(appxamlxml, settings);	var dict = (resourcedictionary) appxamlcontext.rootitem.component;	designer.designpanel.resources.mergeddictionaries.add(dict);	}	}	}	catch (exception ex) {	
error in loading app xaml 

========================= sharpdevelop sample_2708 =========================

dlgmsgservice.dialogsynchronizeinvoke = sd.mainthread.synchronizingobject;	dlgmsgservice.dialogowner = workbench.mainwin32window;	}	var applicationstateinfoservice = sd.getservice<applicationstateinfoservice>();	if (applicationstateinfoservice != null) {	applicationstateinfoservice.registerstategetter(activecontentstate, delegate { return sd.workbench.activecontent; });	}	workbenchsingleton.onworkbenchcreated();	navigationservice.initializeservice();	workbench.activecontentchanged += delegate {	
activecontentchanged to 

dlgmsgservice.dialogsynchronizeinvoke = sd.mainthread.synchronizingobject;	dlgmsgservice.dialogowner = workbench.mainwin32window;	}	var applicationstateinfoservice = sd.getservice<applicationstateinfoservice>();	if (applicationstateinfoservice != null) {	applicationstateinfoservice.registerstategetter(activecontentstate, delegate { return sd.workbench.activecontent; });	}	workbenchsingleton.onworkbenchcreated();	navigationservice.initializeservice();	workbench.activecontentchanged += delegate {	
activecontentchanged to 

}	var applicationstateinfoservice = sd.getservice<applicationstateinfoservice>();	if (applicationstateinfoservice != null) {	applicationstateinfoservice.registerstategetter(activecontentstate, delegate { return sd.workbench.activecontent; });	}	workbenchsingleton.onworkbenchcreated();	navigationservice.initializeservice();	workbench.activecontentchanged += delegate {	};	workbench.activeviewcontentchanged += delegate {	
activeviewcontentchanged to 

}	var applicationstateinfoservice = sd.getservice<applicationstateinfoservice>();	if (applicationstateinfoservice != null) {	applicationstateinfoservice.registerstategetter(activecontentstate, delegate { return sd.workbench.activecontent; });	}	workbenchsingleton.onworkbenchcreated();	navigationservice.initializeservice();	workbench.activecontentchanged += delegate {	};	workbench.activeviewcontentchanged += delegate {	
activeviewcontentchanged to 

if (applicationstateinfoservice != null) {	applicationstateinfoservice.registerstategetter(activecontentstate, delegate { return sd.workbench.activecontent; });	}	workbenchsingleton.onworkbenchcreated();	navigationservice.initializeservice();	workbench.activecontentchanged += delegate {	};	workbench.activeviewcontentchanged += delegate {	};	workbench.activeworkbenchwindowchanged += delegate {	
activeworkbenchwindowchanged to 

if (applicationstateinfoservice != null) {	applicationstateinfoservice.registerstategetter(activecontentstate, delegate { return sd.workbench.activecontent; });	}	workbenchsingleton.onworkbenchcreated();	navigationservice.initializeservice();	workbench.activecontentchanged += delegate {	};	workbench.activeviewcontentchanged += delegate {	};	workbench.activeworkbenchwindowchanged += delegate {	
activeworkbenchwindowchanged to 

public void run(ilist<string> filelist) {	bool didloadsolutionorfile = false;	navigationservice.suspendlogging();	foreach (string file in filelist) {	
open file 

========================= sharpdevelop sample_4628 =========================

}	}	if (is64bit) logstring("using 64-bit hook.");	logstring("starting process, waiting for profiler hook...");	profilee = new process();	profilee.enableraisingevents = true;	profilee.startinfo = psi;	profilee.exited += new eventhandler(profileeexited);	enabledc = profileroptions.enabledcatstart;	isfirstdc = true;	
launching profiler for 

========================= sharpdevelop sample_2072 =========================

rettype = elemdesc.tdesc;	limit--;	}	}	adddomparams(funcdesc, meth, limit);	}	if ((varenum)rettype.vt != varenum.vt_hresult) {	string typename = typelibutil.typedesctostring (_typelib, _typeinfo, rettype, !typelibutil.comtype);	if (typename.startswith("ref ")) typename = typename.substring(4);	if (traceutil.if(this, tracelevel.info)) {	
cg return 

========================= sharpdevelop sample_60 =========================

public static void addcurrentassemblies() {	foreach (assembly assembly in appdomain.currentdomain.getassemblies()) {	if (!(localprefs.get(localprefs.dev) != null)) {	if (assembly.equals(assembly.getcallingassembly())) continue;	}	if (assembly.getname().name.equals(assemblysupport.dummy_assy_name)) continue;	try {	assemblytreenode node = addassy(assembly, null);	node.noclose = true;	} catch (exception ex) {	
error adding local assembly 

public static void restoreassemblies() {	appdomain.currentdomain.assemblyload += new assemblyloadeventhandler(assemblyloadhandler);	if (_assemblies.count == 0) return;	progressdialog progressdialog = new progressdialog();	progressdialog.setup(stringparser.parse("${res:componentinspector.progressdialog.loadingpreviouslyopenedassembliesdialogtitle}"), stringparser.parse("${res:componentinspector.progressdialog.loadingpreviouslyopenedassembliesmessage}"), _assemblies.count, progressdialog.has_progress_text, progressdialog.final);	progressdialog.showifnotdone();	
assembly restore start 

if (_assemblies.count == 0) return;	progressdialog progressdialog = new progressdialog();	progressdialog.setup(stringparser.parse("${res:componentinspector.progressdialog.loadingpreviouslyopenedassembliesdialogtitle}"), stringparser.parse("${res:componentinspector.progressdialog.loadingpreviouslyopenedassembliesmessage}"), _assemblies.count, progressdialog.has_progress_text, progressdialog.final);	progressdialog.showifnotdone();	try {	for (int i = _assemblies.count - 1; i >= 0; --i) {	previouslyopenedassembly assembly = _assemblies[i];	try {	assemblyname aname = new assemblyname();	aname.codebase = assembly.codebase;	
restore assy 

try {	assemblyname aname = new assemblyname();	aname.codebase = assembly.codebase;	progressdialog.updateprogresstext(assembly.codebase);	guid guid = guid.empty;	if (assembly.typelibguid.length > 0) {	guid = new guid(assembly.typelibguid);	typelibrary lib = typelibrary.gettypelibopened(guid, assembly.typelibversion);	string assyfilename = new uri(assembly.codebase).localpath;	if (lib == null || !typelibrary.isassycurrent(assyfilename, lib.filename)) {	
skipped assy typelib not opened or current 

typelibrary lib = typelibrary.gettypelibopened(guid, assembly.typelibversion);	string assyfilename = new uri(assembly.codebase).localpath;	if (lib == null || !typelibrary.isassycurrent(assyfilename, lib.filename)) {	_assemblies.remove(assembly);	progressdialog.updateprogress(1);	continue;	}	}	assembly assy = assembly.load(aname);	if (assembly.typelibguid.length > 0) typelibrary.restoreassembly(assy, guid, assembly.typelibversion);	
loaded assy 

if (lib == null || !typelibrary.isassycurrent(assyfilename, lib.filename)) {	_assemblies.remove(assembly);	progressdialog.updateprogress(1);	continue;	}	}	assembly assy = assembly.load(aname);	if (assembly.typelibguid.length > 0) typelibrary.restoreassembly(assy, guid, assembly.typelibversion);	progressdialog.updateprogress(1);	} catch (exception ex) {	
assemblies deleting bad assemblies entry 

}	}	assembly assy = assembly.load(aname);	if (assembly.typelibguid.length > 0) typelibrary.restoreassembly(assy, guid, assembly.typelibversion);	progressdialog.updateprogress(1);	} catch (exception ex) {	_assemblies.remove(assembly);	progressdialog.updateprogress(1);	}	}	
assembly restore end 

assembly assy = assembly.load(aname);	if (assembly.typelibguid.length > 0) typelibrary.restoreassembly(assy, guid, assembly.typelibversion);	progressdialog.updateprogress(1);	} catch (exception ex) {	_assemblies.remove(assembly);	progressdialog.updateprogress(1);	}	}	_assyrootnode.expand();	} catch (exception ex) {	
unexpected exception restoring assemblies 

public static void assemblyloadhandler(object sender, assemblyloadeventargs args) {	try {	lock (_assytree) {	
assembly loaded 

module[] mods = args.loadedassembly.getmodules();	if (mods[0].name.equals("<unknown>")) return;	if (findassemblytreenode(args.loadedassembly) == null) {	assemblytreenode node = addassy(args.loadedassembly, null);	rememberassembly(args.loadedassembly, null, null);	_assyloadednode = node;	comsupport.assemblyloadhandler(args.loadedassembly, node);	}	}	} catch (exception ex) {	
exception processing assy load event 

========================= sharpdevelop sample_93 =========================

private void events_packagemessagelogged(object sender, packagemessageloggedeventargs e) {	
nugetpackagemanager 

========================= sharpdevelop sample_1681 =========================

public void attach(uint processid) {	if (_debug == null) init();	_activeprocess = _debug.debugactiveprocess(processid, 0);	icordebugthreadenum threads = _activeprocess.enumeratethreads();	uint count = 0;	count = threads.getcount();	
thread count 

public void attach(uint processid) {	if (_debug == null) init();	_activeprocess = _debug.debugactiveprocess(processid, 0);	icordebugthreadenum threads = _activeprocess.enumeratethreads();	uint count = 0;	count = threads.getcount();	type type = threads.gettype();	methodinfo mi = type.getmethod("getcount");	count = (uint)mi.invoke(threads, new object[] { });	
thread count 

public void attachdebuggedprocess(int processid) {	
debug process 

========================= sharpdevelop sample_201 =========================

if (!string.isnullorempty(filename)) {	iproject p;	if (files.trygetvalue(filename, out p)) {	return p;	}	if ((p = getprojectforfileinternal(filename)) != null) {	files[filename] = p;	return p;	}	}	
resourcetoolkit projectfiledictionary could not determine project for file null 

========================= sharpdevelop sample_1575 =========================

public void dodisplayvalue() {	columndata[0] = _objinfo.getstringvalue();	
displayval 

protected virtual void objectvaluechanged() {	
objectvaluechanged 

objecttreenode node = (objecttreenode)treenode;	object obj = node.obj;	if (type != null) {	if (obj != null && !typeof(valuetype).isassignablefrom(obj.gettype()) && type.isassignablefrom(obj.gettype())) {	outputnodes.add(node);	}	}	else {	if (obj == lookobj) {	if (traceutil.if(null, tracelevel.verbose)) {	
searchfor obj found 

protected override browsertreenode allocatechildnode(object obj) {	if (_typehandler != null && _typehandler.enabled) return _typehandler.allocatechildnode((objectinfo)obj);	memberinfo member = (memberinfo)obj;	objectinfo objinfo = objectinfofactory.getobjectinfo(_comnode, member, objtype);	
allocatechild member 

========================= sharpdevelop sample_157 =========================

public object builditem(builditemargs args) {	type providertype = args.addin.findtype(args.codon.properties["class"]);	if (providertype == null) return null;	var attributes = providertype.getcustomattributes(typeof(contextactionattribute), true);	if (attributes.length == 0) {	
contextaction attribute is missing on 

public object builditem(builditemargs args) {	type providertype = args.addin.findtype(args.codon.properties["class"]);	if (providertype == null) return null;	var attributes = providertype.getcustomattributes(typeof(contextactionattribute), true);	if (attributes.length == 0) {	return null;	}	if (!typeof(codeactionprovider).isassignablefrom(providertype)) {	
does not implement codeactionprovider 

========================= sharpdevelop sample_4063 =========================

lock (syncroot) {	foreach (fileitem item in items) {	item.savechanges();	if (item.xmlelement.parentnode != null) item.xmlelement.parentnode.removechild(item.xmlelement);	}	foreach (fileitem item in items) {	filegroup group = groups.find(fg => fg.itemtype == item.projectitem.itemtype);	if (group != null) {	group.xmlelement.appendchild(item.xmlelement);	} else {	
couldn t find filter for item type the item was not saved 

========================= sharpdevelop sample_334 =========================

helplibraryagent.start();	thread.sleep(0x3e8);	}	string helpurl = string.concat(arguments, projectlanguages.currentlanguageashttpparam, (embedded)?"&embedded=true":string.empty);	if (help3service.config.externalhelp) {	displayhelpwithshellexecute(helpurl);	return;	}	browserpane browser = activehelp3browser();	if (browser != null) {	
helpviewer displaylocalhelp calls 

}	processstartinfo psi = new processstartinfo();	psi.filename = arguments;	psi.useshellexecute = true;	psi.windowstyle = processwindowstyle.normal;	try {	process p = process.start(psi);	p.waitforinputidle();	}	catch (exception ex) {	
helpviewer 

static void displayhelponmsdn(string keyword) {	if (string.isnullorempty(keyword)) {	throw new argumentnullexception("keyword");	}	string msdnurl = string.concat("http: if (help3service.config.externalhelp) {	displayhelpwithshellexecute(msdnurl);	return;	}	browserpane browser = activehelp3browser();	if (browser != null) {	
helpviewer displayhelponmsdn calls 

static void displaysearchonmsdn(string searchwords) {	if (string.isnullorempty(searchwords)) {	throw new argumentnullexception("searchwords");	}	string msdnurl = string.concat("http: browserpane browser = activehelp3browser();	if (browser != null) {	
helpviewer displaysearchonmsdn calls 

========================= sharpdevelop sample_1716 =========================

public static void initializelocalestore(string productcode, string productversion, string locale, string brandingpackage) {	if (help3environment.islocalstoreinitialized) { return; }	if (string.isnullorempty(productcode)) { throw new argumentnullexception("productcode"); }	if (string.isnullorempty(productversion)) { throw new argumentnullexception("productversion"); }	if (string.isnullorempty(locale)) { throw new argumentnullexception("locale"); }	if (!regex.ismatch(productversion, @"^\d{3}$", regexoptions.cultureinvariant | regexoptions.ignorecase)) { throw new argumentoutofrangeexception("productversion"); }	if (!regex.ismatch(locale, @"^\w{2}-\w{2}", regexoptions.cultureinvariant | regexoptions.ignorecase)) { throw new argumentoutofrangeexception("locale"); }	string brandingswitch = (!string.isnullorempty(brandingpackage)) ? string.format("/brandingpackage \"{0}\"", brandingpackage):"";	string arguments = string.format("/product {0} /version {1} /locale {2} /content \"{3}\" {4}", productcode, productversion, locale, help3environment.buildlocalstorefolder, brandingswitch);	
helpviewer initializing local store with 

if (string.isnullorempty(productcode)) { throw new argumentnullexception("productcode"); }	if (string.isnullorempty(productversion)) { throw new argumentnullexception("productversion"); }	if (string.isnullorempty(locale)) { throw new argumentnullexception("locale"); }	if (string.isnullorempty(sourcemedia)) { throw new argumentnullexception("sourcemedia"); }	if (!file.exists(sourcemedia)) { throw new filenotfoundexception(); }	if (!regex.ismatch(productversion, @"^\d{3}$", regexoptions.cultureinvariant | regexoptions.ignorecase)) { throw new argumentoutofrangeexception("productversion"); }	if (!regex.ismatch(locale, @"^\w{2}-\w{2}", regexoptions.cultureinvariant | regexoptions.ignorecase)) { throw new argumentoutofrangeexception("locale"); }	string initls = (!help3environment.islocalstoreinitialized) ? string.format("/content \"{0}\"", help3environment.buildlocalstorefolder):"";	string brandingswitch = (!string.isnullorempty(brandingpackage)) ? string.format("/brandingpackage \"{0}\"", brandingpackage):"";	string arguments = string.format("/product {0} /version {1} /locale {2} /sourcemedia \"{3}\" {4} {5}", productcode, productversion, locale, sourcemedia, initls, brandingswitch);	
helpviewer installing local help documents with 

public static void installhelpdocumentsfromwebsource(string productcode, string productversion, string locale, string sourceweb, string brandingpackage) {	if (string.isnullorempty(productcode)) { throw new argumentnullexception("productcode"); }	if (string.isnullorempty(productversion)) { throw new argumentnullexception("productversion"); }	if (string.isnullorempty(locale)) { throw new argumentnullexception("locale"); }	if (string.isnullorempty(sourceweb)) { throw new argumentnullexception("sourceweb"); }	if (!regex.ismatch(productversion, @"^\d{3}$", regexoptions.cultureinvariant | regexoptions.ignorecase)) { throw new argumentoutofrangeexception("productversion"); }	if (!regex.ismatch(locale, @"^\w{2}-\w{2}", regexoptions.cultureinvariant | regexoptions.ignorecase)) { throw new argumentoutofrangeexception("locale"); }	string initls = (!help3environment.islocalstoreinitialized) ? string.format("/content \"{0}\"", help3environment.buildlocalstorefolder):"";	string brandingswitch = (!string.isnullorempty(brandingpackage)) ? string.format("/brandingpackage \"{0}\"", brandingpackage):"";	string arguments = string.format("/product {0} /version {1} /locale {2} /sourceweb \"{3}\" {4} {5}", productcode, productversion, locale, sourceweb, initls, brandingswitch);	
helpviewer installing help documents from web with 

if (!help3environment.islocalstoreinitialized) { return; }	if (string.isnullorempty(productcode)) { throw new argumentnullexception("productcode"); }	if (string.isnullorempty(productversion)) { throw new argumentnullexception("productversion"); }	if (string.isnullorempty(locale)) { throw new argumentnullexception("locale"); }	if (string.isnullorempty(vendor)) { throw new argumentnullexception("vendor"); }	if (string.isnullorempty(productname)) { throw new argumentnullexception("productname"); }	if (string.isnullorempty(mediabooklist)) { throw new argumentnullexception("mediabooklist"); }	if (!regex.ismatch(productversion, @"^\d{3}$", regexoptions.cultureinvariant | regexoptions.ignorecase)) { throw new argumentoutofrangeexception("productversion"); }	if (!regex.ismatch(locale, @"^\w{2}-\w{2}", regexoptions.cultureinvariant | regexoptions.ignorecase)) { throw new argumentoutofrangeexception("locale"); }	string arguments = string.format("/product {0} /version {1} /locale {2} /vendor \"{3}\" /productname \"{4}\" /mediabooklist {5} /uninstall", productcode, productversion, locale, vendor, productname, mediabooklist);	
helpviewer uninstalling help documents with 

psi.arguments = string.format("{0} {1}", arguments, (silent)?"/silent":string.empty);	psi.useshellexecute = true;	psi.verb = "runas";	psi.windowstyle = processwindowstyle.normal;	try {	process p = process.start(psi);	p.waitforexit();	return p.exitcode;	}	catch (exception ex) {	
helpviewer 

processstartinfo psi = new processstartinfo();	psi.filename = manager;	psi.workingdirectory = help3environment.approot;	psi.arguments = help3service.activecatalog.ascmdlineparam;	psi.useshellexecute = true;	if (runprivileged) psi.verb = "runas";	psi.windowstyle = processwindowstyle.normal;	try {	process p = process.start(psi);	p.waitforinputidle();	
helpviewer helplibrarymanager started 

psi.arguments = help3service.activecatalog.ascmdlineparam;	psi.useshellexecute = true;	if (runprivileged) psi.verb = "runas";	psi.windowstyle = processwindowstyle.normal;	try {	process p = process.start(psi);	p.waitforinputidle();	return isrunning;	}	catch (exception ex) {	
helpviewer 

public static bool stop(bool waitforexit) {	try {	process[] managers = process.getprocessesbyname("helplibmanager");	foreach (process manager in managers) {	manager.kill();	if (waitforexit) manager.waitforexit();	}	loggingservice.debug(string.format("helpviewer: {0} helplibrarymanager {1} stopped", managers.length, (managers.length == 1)?"process":"processes"));	}	catch (exception ex) {	
helpviewer 

========================= sharpdevelop sample_1722 =========================

public void navigate(uri url) {	try {	webbrowser.navigate(url);	} catch (exception ex) {	
error navigating to 

========================= sharpdevelop sample_5158 =========================

for (int i = savedcasts.count - 1; i >= 0; --i) {	savedcastinfo savedcastinfo = savedcasts[i];	try {	type casttype = reflectionhelper.gettype(savedcastinfo.casttypename);	if (casttype == null) {	throw new exception ("cast type: " + savedcastinfo.casttypename + " not found");	}	castinfo ci = new castinfo(savedcastinfo.membersignature, savedcastinfo.typename, casttype, true);	_casts.add(ci.key, ci);	} catch (exception ex) {	
warning invalid cast information in registry for deleting exception 

========================= sharpdevelop sample_97 =========================

public static void go(inavigationpoint target) {	if (target==null) {	return;	}	linkedlistnode<inavigationpoint> targetnode;	targetnode = history.find(target);	if (targetnode!=null) {	currentnode = targetnode;	} else {	
logging additional point 

public static void suspendlogging() {	
navigationservice suspend logging 

public static void resumelogging() {	
navigationservice resume logging 

public static void resumelogging() {	if (system.threading.interlocked.decrement(ref loggingsuspendedcount) < 0) {	system.threading.interlocked.increment(ref loggingsuspendedcount);	
navigationservice resumelogging called without corresponding suspendlogging 

static void activeviewcontentchanged(object sender, eventargs e) {	iviewcontent vc = sd.workbench.activeviewcontent;	if (vc == null) return;	
navigationservice activeviewcontent subview 

========================= sharpdevelop sample_5400 =========================

public override void visit(exporttext exportcolumn){	if (exportcolumn.text.equals("basetextitem2147483637")) {	
stop 

========================= sharpdevelop sample_1389 =========================

public const int help_context = 0x0001;	[dllimport("user32.dll")]	public static extern int winhelp(intptr hwnd, string helpfile, int command, int data);	public static string getlasterrortext() {	stringbuilder sb = new stringbuilder(2000);	int error = getlasterror();	if (formatmessage(format_message_from_system, 0, error, 0, sb, sb.capacity, 0) != 0) {	return "error: " + error + " - " + sb.tostring();	}	else {	
error getting message text 

========================= sharpdevelop sample_86 =========================

public void fixvbcasingandaddmethodcallparenthesis2() {	
console writeline appdomain getcurrentthreadid console writeline appdomain getcurrentthreadid 

public void fixvbcasingandaddmethodcallparenthesis3() {	
console writeline t console writeline t 

========================= sharpdevelop sample_4749 =========================

protected void makeaccessorclass(string key, type objtype, fieldinfo[] structfields) {	typebuilder tb;	_key = key;	_structfields = structfields;	int structfieldslast = structfields.length - 1;	fieldinfo memberfield = structfields[structfieldslast];	if (traceutil.if(this, tracelevel.info)) {	
makeaccessor 

protected static void setvalue(fieldinfo[] structfields, object obj, object value, int index) {	if (traceutil.if(typeof(structaccessor), tracelevel.verbose)) {	
struct setting field 

========================= sharpdevelop sample_75 =========================

public assemblydefinition tryresolve(assemblynamereference reference) {	try {	return resolve(reference);	} catch (assemblyresolutionexception are) {	
cqa skipping assembly reference exception 

========================= sharpdevelop sample_1983 =========================

}	} else {	methodgroupresolveresult methrr = resolveresult as methodgroupresolveresult;	if (methrr != null) {	if (chartyped == '(') {	member = methrr.getmethodifsingleoverload();	}	}	}	if (member is imethod && languageproperties.csharp.namecomparer.equals(member.fullyqualifiedname, "icsharpcode.core.resourceservice.getstring") ) {	
resourcetoolkit icsharpcodecorenrefactoryresourceresolver resourceservice resource access detected 

static string getkeyfromexpression(expression expr) {	
resourcetoolkit icsharpcodecorenrefactoryresourceresolver trying to get key from expression 

#endif invocationexpression invocation = expr as invocationexpression;	if (invocation != null) {	memberreferenceexpression fre = invocation.targetobject as memberreferenceexpression;	if (fre != null) {	if (fre.membername == "getstring") {	if (invocation.arguments.count > 0) {	primitiveexpression p = invocation.arguments[0] as primitiveexpression;	if (p != null) {	string key = p.value as string;	if (key != null) {	
resourcetoolkit icsharpcodecorenrefactoryresourceresolver found key 

========================= sharpdevelop sample_1622 =========================

protected override icollection getchildren() {	lock (_allclasses) {	if (_allclasses.count > 0) return _allclasses.values;	try {	intptr comobj;	int result = nogoop.win32.activex.cocreateinstance (ref nogoop.win32.activex.categoriesmgrclsid, (intptr)0, nogoop.win32.activex.clsctx_inproc_server, ref nogoop.win32.activex.iunknowniid, out comobj);	
com create x 

enumclsids.next(1, out clsid, out numret);	if (numret == 0) break;	basicinfo info = comclassinfo.getclassinfo(clsid);	if (info != null) _allclasses.add(info, info);	}	marshal.releasecomobject(enumclsids);	marshal.releasecomobject(catinfo);	}	}	catch (exception ex) {	
categories failure to read 

========================= sharpdevelop sample_156 =========================

public static bool start() {	if (isrunning) return true;	if (!help3environment.islocalhelp) return false;	try {	process p = process.start(agent);	p.waitforinputidle();	
helpviewer helplibraryagent started 

public static bool start() {	if (isrunning) return true;	if (!help3environment.islocalhelp) return false;	try {	process p = process.start(agent);	p.waitforinputidle();	return isrunning;	}	catch (exception ex) {	
helpviewer 

public static bool stop(bool waitforexit) {	try {	process[] agents = process.getprocessesbyname("helplibagent");	foreach (process agent in agents) {	agent.kill();	if (waitforexit) agent.waitforexit();	}	loggingservice.debug(string.format("helpviewer: {0} helplibraryagent {1} stopped", agents.length, (agents.length == 1)?"process":"processes"));	}	catch (exception ex) {	
helpviewer 

========================= sharpdevelop sample_1717 =========================

testresultwriter = new streamwriter ( namedpipe, encoding.utf8 );	((streamwriter)testresultwriter).autoflush = true;	}	testpackage package = maketestpackage(options);	processmodel processmodel = package.settings.contains("processmodel") ? (processmodel)package.settings["processmodel"]	: processmodel.default;	domainusage domainusage = package.settings.contains("domainusage") ? (domainusage)package.settings["domainusage"]	: domainusage.default;	runtimeframework framework = package.settings.contains("runtimeframework") ? (runtimeframework)package.settings["runtimeframework"]	: runtimeframework.currentframework;	
processmodel domainusage 

testresultwriter = new streamwriter ( namedpipe, encoding.utf8 );	((streamwriter)testresultwriter).autoflush = true;	}	testpackage package = maketestpackage(options);	processmodel processmodel = package.settings.contains("processmodel") ? (processmodel)package.settings["processmodel"]	: processmodel.default;	domainusage domainusage = package.settings.contains("domainusage") ? (domainusage)package.settings["domainusage"]	: domainusage.default;	runtimeframework framework = package.settings.contains("runtimeframework") ? (runtimeframework)package.settings["runtimeframework"]	: runtimeframework.currentframework;	
execution runtime 

testresultwriter = new streamwriter ( namedpipe, encoding.utf8 );	((streamwriter)testresultwriter).autoflush = true;	}	testpackage package = maketestpackage(options);	processmodel processmodel = package.settings.contains("processmodel") ? (processmodel)package.settings["processmodel"]	: processmodel.default;	domainusage domainusage = package.settings.contains("domainusage") ? (domainusage)package.settings["domainusage"]	: domainusage.default;	runtimeframework framework = package.settings.contains("runtimeframework") ? (runtimeframework)package.settings["runtimeframework"]	: runtimeframework.currentframework;	
domainusage 

domainusage domainusage = package.settings.contains("domainusage") ? (domainusage)package.settings["domainusage"]	: domainusage.default;	runtimeframework framework = package.settings.contains("runtimeframework") ? (runtimeframework)package.settings["runtimeframework"]	: runtimeframework.currentframework;	if (processmodel != processmodel.default && processmodel != processmodel.single) console.writeline("warning: ignoring project setting 'processmodel={0}'", processmodel);	if (!runtimeframework.currentframework.supports(framework)) console.writeline("warning: ignoring project setting 'runtimeframework={0}'", framework);	#endif using (testrunner testrunner = new defaulttestrunnerfactory().maketestrunner(package)) {	testrunner.load(package);	if (testrunner.test == null) {	testrunner.unload();	
unable to locate fixture 

if (result != null) {	string xmloutput = createxmloutput(result);	resultsummarizer summary = new resultsummarizer(result);	if (options.xmlconsole) {	console.writeline(xmloutput);	}	else {	writesummaryreport(summary);	bool haserrors = summary.errors > 0 || summary.failures > 0 || result.iserror || result.isfailure;	if (options.stoponerror && (haserrors || summary.notrunnable > 0)) {	
test run was stopped after first error as requested 

private static void writesummaryreport( resultsummarizer summary ) {	
tests run errors failures inconclusive time seconds 

private static void writesummaryreport( resultsummarizer summary ) {	
not run invalid ignored skipped 

private void writeerrorsandfailuresreport(testresult result) {	reportindex = 0;	
errors and failures 

private void writenotrunreport(testresult result) {	reportindex = 0;	
tests not run 

========================= sharpdevelop sample_364 =========================

public designergenerator() {	
create designergenerator 

public void attach(designerview viewcontent) {	if (viewcontent == null) throw new argumentnullexception("viewcontent");	
designergenerator attach 

========================= sharpdevelop sample_1550 =========================

public static void main(string[] args) {	processstartinfo benchmarkstartinfo = new processstartinfo("benchmark.exe", "/automated");	benchmarkstartinfo.useshellexecute = false;	processstartinfo benchmark32startinfo = new processstartinfo("benchmark32.exe", "/automated");	benchmark32startinfo.useshellexecute = false;	list<testseries> testseries = new list<testseries>();	if (file.exists(benchmark32startinfo.filename)) {	testseries.add(new testseries("without profiler (32-bit)", () => withoutprofiler(benchmark32startinfo)));	testseries.add(new testseries("with profiler (32-bit)", () => withprofiler(benchmark32startinfo)));	} else {	
bit tests not executed could not find exe 

if (file.exists(benchmark32startinfo.filename)) {	testseries.add(new testseries("without profiler (32-bit)", () => withoutprofiler(benchmark32startinfo)));	testseries.add(new testseries("with profiler (32-bit)", () => withprofiler(benchmark32startinfo)));	} else {	}	if (intptr.size == 8) {	if (file.exists(benchmarkstartinfo.filename)) {	testseries.add(new testseries("without profiler (64-bit)", () => withoutprofiler(benchmarkstartinfo)));	testseries.add(new testseries("with profiler (64-bit)", () => withprofiler(benchmarkstartinfo)));	} else {	
bit tests not executed could not find benchmark exe 

public void executerun() {	thread.sleep(100);	
testset run 

console.writeline();	console.writeline(resultsets[0].results[i].name);	var averagestrings = resultsets.select(s => s.results[i].average.tostring("f4")).toarray();	var sdstrings = resultsets.select(s => s.results[i].standarddeviation.tostring("f4")).toarray();	int maxaveragelength = averagestrings.max(s => s.length);	int maxsdlength = sdstrings.max(s => s.length);	var bestresult = resultsets.min(s => s.results[i].average);	var factorstrings = resultsets.select(s => (s.results[i].average / bestresult).tostring("f2")).toarray();	int maxfactorlength = factorstrings.max(s => s.length);	for (int j = 0; j < resultsets.length; j++) {	
x 

========================= sharpdevelop sample_1993 =========================

ucomimoniker moniker = monikers[0];	object obj;	rot.getobject(moniker, out obj);	string monikername;	moniker.getdisplayname(bc, null, out monikername);	comobjectinfo comobjinfo;	object runobj = runninghash[obj];	if (runobj != null) {	comobjinfo = (comobjectinfo) objectinfo.getobjectinfo(obj);	if (monikername.equals(comobjinfo._monikername)) {	
rot skipping duplicate 

}	}	else {	runninghash.add(obj, obj);	}	comobjinfo = (comobjectinfo) objectinfofactory.getobjectinfo(true, obj);	comobjinfo.calcrunningobjname(rot, bc, moniker, monikername);	progress.updateprogresstext(comobjinfo.getmonikername());	progress.updateprogress(1);	runningobjects.add(comobjinfo);	
rot added 

else {	runninghash.add(obj, obj);	}	comobjinfo = (comobjectinfo) objectinfofactory.getobjectinfo(true, obj);	comobjinfo.calcrunningobjname(rot, bc, moniker, monikername);	progress.updateprogresstext(comobjinfo.getmonikername());	progress.updateprogress(1);	runningobjects.add(comobjinfo);	}	catch (exception ex) {	
rot exception processing rot entry 

marshal.addref(dispptr);	retval = gettypelib(dispptr);	}	finally {	if (dispptr != intptr.zero) marshal.release(dispptr);	}	return retval;	}	protected int gettypelib(intptr dispptr) {	if (traceutil.if(this, tracelevel.info)) {	
comobjinfo gettypelib type 

if (traceutil.if(this, tracelevel.info)) {	}	if (_typelib != null) return -1;	ucomitypelib itypelib;	int index = -1;	try {	idispatch idisp = (idispatch) marshal.getobjectforiunknown(dispptr);	int count;	int result = idisp.gettypeinfocount(out count);	if (result != 0) {	
comobjinfo gettypeinfocount failed x obj 

int result = idisp.gettypeinfocount(out count);	if (result != 0) {	throw new comexception("(probably a bug, please report) " + "failed on gettypeinfocount", result);	}	if (count == 0) {	traceutil.writelinewarning (typeof(comobjectinfo), "comobjinfo - " + " typeinfo count = 0: " + _obj);	throw new exception("this object has no type information " + "(gettypeinfocount returned 0).  ");	}	result = idisp.gettypeinfo(0, 0, out _typeinfo);	if (result != 0) {	
comobjinfo typeinfo not found 

}	if (count == 0) {	traceutil.writelinewarning (typeof(comobjectinfo), "comobjinfo - " + " typeinfo count = 0: " + _obj);	throw new exception("this object has no type information " + "(gettypeinfocount returned 0).  ");	}	result = idisp.gettypeinfo(0, 0, out _typeinfo);	if (result != 0) {	throw new comexception("(probably a bug, please report) " + "failed to get itypeinfo", result);	}	if (_typeinfo == null) {	
comobjinfo typeinfo not found 

}	if (_typeinfo == null) {	throw new exception("(probably a bug, please report) " + "null typeinfo pointer returned");	}	_typeinfo.getcontainingtypelib(out itypelib, out index);	_typelib = typelibrary.gettypelib(itypelib);	}	catch (exception ex) {	if (_typeinfo != null) {	guid guid = basicinfo.guidfromtypeinfo(_typeinfo);	
comobjinfo type 

if (_typeinfo == null) {	throw new exception("(probably a bug, please report) " + "null typeinfo pointer returned");	}	_typeinfo.getcontainingtypelib(out itypelib, out index);	_typelib = typelibrary.gettypelib(itypelib);	}	catch (exception ex) {	if (_typeinfo != null) {	guid guid = basicinfo.guidfromtypeinfo(_typeinfo);	}	
containing typelib not found 

_typeinfo.getcontainingtypelib(out itypelib, out index);	_typelib = typelibrary.gettypelib(itypelib);	}	catch (exception ex) {	if (_typeinfo != null) {	guid guid = basicinfo.guidfromtypeinfo(_typeinfo);	}	throw new exception("cannot get typelib for object.  " + "getting the typelib information for " + "an object is required as this contains " + "the type information used to display " + "the object. ", ex);	}	if (traceutil.if(this, tracelevel.info)) {	
comobjinfo containing typelib index 

if (traceutil.if(this, tracelevel.info)) {	}	return index;	}	protected bool typeisgoodenough(type type) {	bool isgood = false;	if (type != null) {	if (!activex.typeequalscomroot(type) && !reflectionhelper.typeequalsobject(type)) isgood = true;	}	if (traceutil.if(this, tracelevel.info)) {	
comobjinfo good enough 

bool isgood = false;	if (type != null) {	if (!activex.typeequalscomroot(type) && !reflectionhelper.typeequalsobject(type)) isgood = true;	}	if (traceutil.if(this, tracelevel.info)) {	}	return isgood;	}	protected override void settype() {	if (traceutil.if(this, tracelevel.info)) {	
comobjinfo settype 

marshal.addref(dispptr);	gettypelib(dispptr);	}	finally {	marshal.release(dispptr);	}	}	if (_typelib != null) {	string typename = comclassinfo.gettypename(_typeinfo);	_comtypename = _typelib.name + "." + typename;	
typename 

if (_objtype == null) base.settype();	}	protected cominterfaceinfo pickbestinterface() {	cominterfaceinfo bestif = null;	foreach (cominterfaceinfo ifinfo in _interfaces) {	if (bestif == null || ifinfo.parentcount > bestif.parentcount) bestif = ifinfo;	}	return bestif;	}	protected void assigntype(type newtype) {	
com newtype 

protected cominterfaceinfo pickbestinterface() {	cominterfaceinfo bestif = null;	foreach (cominterfaceinfo ifinfo in _interfaces) {	if (bestif == null || ifinfo.parentcount > bestif.parentcount) bestif = ifinfo;	}	return bestif;	}	protected void assigntype(type newtype) {	if (windows.com_root_type.isassignablefrom(newtype)) {	object wrapper = marshal.createwrapperoftype(_obj, newtype);	
com create wrapper 

internal type figureoutclass() {	_interfaces = new arraylist();	intptr unkptr = marshal.getiunknownforobject(_obj);	marshal.addref(unkptr);	foreach (cominterfaceinfo intinfo in _typelib.interfaces) {	guid tempguid = intinfo._guid;	intptr implptr;	marshal.queryinterface(unkptr, ref tempguid, out implptr);	if (implptr != intptr.zero) {	if (traceutil.if(this, tracelevel.info)) {	
comobjectinfo impl iid 

if (traceutil.if(this, tracelevel.info)) {	}	_interfaces.add(intinfo);	}	}	marshal.release(unkptr);	_classesdefaultinterfaces = new arraylist();	_classesinterfaces = new arraylist();	foreach (cominterfaceinfo intinfo in _interfaces) {	if (traceutil.if(this, tracelevel.info)) {	
comobjectinfo checking iid 

}	}	marshal.release(unkptr);	_classesdefaultinterfaces = new arraylist();	_classesinterfaces = new arraylist();	foreach (cominterfaceinfo intinfo in _interfaces) {	if (traceutil.if(this, tracelevel.info)) {	}	foreach (comclassinfo classinfo in comclassinfo.getclassinfos(intinfo)) {	if (traceutil.if(this, tracelevel.info)) {	
typelib checking class 

}	foreach (cominterfaceinfo impliface in classinfo._interfaces) {	if (impliface.equals(intinfo)) _classesinterfaces.add(classinfo);	}	}	}	fixme - stuff to do to finish this: 1) make a hash table that has all classes that implement a given interface. probably make a class/interface into structure that is a list from this hash table.  this has an indication if its the classes default interface or not.  sometimes you will get an interface in one typelib and the class is in another type lib.  this will help that, and it will also make the resolution of the classes faster. 2) deal with inherited interfaces.  after we have exhausted all possbilities with the actual interfaces, when we should do checking using the inherited interfaces so at least we will find something. of course, the inherited interfaces will show up on the query interface, so we need to make sure we prefer the lower level interfaces.  maybe they will always show up first, but we need to see about this. basicinfo chosenclass;	if (_classesdefaultinterfaces.count > 0) {	chosenclass = (basicinfo)_classesdefaultinterfaces[0];	if (traceutil.if(this, tracelevel.info)) {	
comobjectinfo found default i f 

}	fixme - stuff to do to finish this: 1) make a hash table that has all classes that implement a given interface. probably make a class/interface into structure that is a list from this hash table.  this has an indication if its the classes default interface or not.  sometimes you will get an interface in one typelib and the class is in another type lib.  this will help that, and it will also make the resolution of the classes faster. 2) deal with inherited interfaces.  after we have exhausted all possbilities with the actual interfaces, when we should do checking using the inherited interfaces so at least we will find something. of course, the inherited interfaces will show up on the query interface, so we need to make sure we prefer the lower level interfaces.  maybe they will always show up first, but we need to see about this. basicinfo chosenclass;	if (_classesdefaultinterfaces.count > 0) {	chosenclass = (basicinfo)_classesdefaultinterfaces[0];	if (traceutil.if(this, tracelevel.info)) {	}	}	else if (_classesinterfaces.count > 0) {	chosenclass = (basicinfo)_classesinterfaces[0];	if (traceutil.if(this, tracelevel.info)) {	
comobjectinfo found non default i f 

}	}	else if (_classesinterfaces.count > 0) {	chosenclass = (basicinfo)_classesinterfaces[0];	if (traceutil.if(this, tracelevel.info)) {	}	}	else if (_interfaces.count == 1) {	chosenclass = (basicinfo)_interfaces[0];	if (traceutil.if(this, tracelevel.info)) {	
comobjectinfo found only one interface 

if (traceutil.if(this, tracelevel.info)) {	}	}	else if (_interfaces.count == 1) {	chosenclass = (basicinfo)_interfaces[0];	if (traceutil.if(this, tracelevel.info)) {	}	}	else {	if (traceutil.if(this, tracelevel.info)) {	
comobjectinfo no class found using static 

else {	if (traceutil.if(this, tracelevel.info)) {	}	setstatictype();	return _objtypestatic;	}	string classname = chosenclass._container.name + "." + chosenclass.name;	if (chosenclass is comclassinfo) classname += "class";	type t = type.gettype(classname + "," + _typelib.name, true, true);	if (traceutil.if(this, tracelevel.info)) {	
comobjectinfo found type 

========================= sharpdevelop sample_65 =========================

return sd.projectservice.loadproject(projectinfo);	} catch (filenotfoundexception) {	return new missingproject(projectinfo);	} catch (projectloadexception ex) {	exception = ex;	} catch (ioexception ex) {	exception = ex;	} catch (unauthorizedaccessexception ex) {	exception = ex;	}	
project load error 

========================= sharpdevelop sample_4588 =========================

protected override object createtext() {	var location = anchor.location;	
creating text for search result 

========================= sharpdevelop sample_608 =========================

public static object ensuretype(object value,type targettype,object nullvalue) {	if (value == null) return nullvalue;	if (targettype == typeof(object)) return value;	if (value.gettype() == targettype) return value;	try {	return convert.changetype(value, targettype,cultureinfo.currentculture);	} catch (exception e) {	
typenormalizer 

========================= sharpdevelop sample_1399 =========================

public override void dispose() {	
xmltreeview dispose 

========================= sharpdevelop sample_2659 =========================

protected override void initialize() {	if (removeme != null) {	nodes.remove(removeme);	removeme = null;	}	
initialize directorynode 

public override void dodragdrop(idataobject dataobject, dragdropeffects effect) {	performinitialization();	expand();	try {	if (dataobject.getdatapresent(typeof(filenode))) {	filenode filenode = (filenode)dataobject.getdata(typeof(filenode));	
projectbrowser dragging file onto directory 

public override void dodragdrop(idataobject dataobject, dragdropeffects effect) {	performinitialization();	expand();	try {	if (dataobject.getdatapresent(typeof(filenode))) {	filenode filenode = (filenode)dataobject.getdata(typeof(filenode));	if (!fileutility.isequalfilename(directory, filenode.filename) && !fileutility.isequalfilename(directory, path.getdirectoryname(filenode.filename)) && !(filenode.projectitem is fileprojectitem && fileutility.isequalfilename(directory, path.getdirectoryname(getfullvirtualname((fileprojectitem)filenode.projectitem))))) {	
not in same directory performing 

public override void dodragdrop(idataobject dataobject, dragdropeffects effect) {	performinitialization();	expand();	try {	if (dataobject.getdatapresent(typeof(filenode))) {	filenode filenode = (filenode)dataobject.getdata(typeof(filenode));	if (!fileutility.isequalfilename(directory, filenode.filename) && !fileutility.isequalfilename(directory, path.getdirectoryname(filenode.filename)) && !(filenode.projectitem is fileprojectitem && fileutility.isequalfilename(directory, path.getdirectoryname(getfullvirtualname((fileprojectitem)filenode.projectitem))))) {	copyfilehere(filenode, effect == dragdropeffects.move);	} else {	
in same directory removing dependency 

========================= sharpdevelop sample_5179 =========================

public wpfpreview(reportdesignerloader loader,iviewcontent content):base(content) {	
create wpfpreview 

protected override void loadfromprimary() {	
loadfrompromary 

protected override void savetoprimary() {	
wpfpreview savetoprimary is not implemented 

========================= sharpdevelop sample_1544 =========================

basepath.append(uri.segments[uri.segments.length - 1]);	basepath.replace("%20", " ");	basepath.replace("%00", "");	uri seconduri = new uri(basepath.tostring());	if (!file.exists(seconduri.localpath)) {	errordialog.show("unable to open help file " + uri.localpath + " (also tried " + seconduri.localpath + ")", "unable to open help file", messageboxicon.error);	return;	}	uri = seconduri;	}	
help 

uri = seconduri;	}	int helpwindow;	if (item._helpcontext != 0) {	helpwindow = windows.htmlhelp(objectbrowserform.instance.handle, uri.localpath, windows.hh_help_context , item._helpcontext);	this seems to be broken, workaround is above help.showhelp(objectbrowser.objbrowser, uri.localpath, helpnavigator.topic, item._helpcontext);	}	else {	helpwindow = windows.htmlhelp(objectbrowserform.instance.handle, uri.localpath, windows.hh_display_topic, 0);	}	
help window 

protected void checkposition(int helpwindow) {	
setting position 

========================= sharpdevelop sample_195 =========================

static void createsnippetfile() {	string filename = snippetfilename;	if (!file.exists(filename)) {	
creating snippet cs file 

========================= sharpdevelop sample_315 =========================

public void showpad(paddescriptor content) {	
workbenchlayout showpad not implemented 

public void loadconfiguration() {	
workbenchlayout loadconfiguration not implemented 

public void storeconfiguration() {	
workbenchlayout storeconfiguration not implemented 

========================= sharpdevelop sample_305 =========================

public override void showcontextmenu(commandid menuid, int x, int y) {	string contextmenupath = "/sharpdevelop/reportdesigner/contextmenus/";	var selectionservice = (iselectionservice)base.getservice(typeof(iselectionservice));	if (selectionservice != null) {	if (menuid == menucommands.trayselectionmenu) {	contextmenupath += "trayselectionmenu";	}	else if (selectionservice.primaryselection is rootreportmodel) {	
found root 

string contextmenupath = "/sharpdevelop/reportdesigner/contextmenus/";	var selectionservice = (iselectionservice)base.getservice(typeof(iselectionservice));	if (selectionservice != null) {	if (menuid == menucommands.trayselectionmenu) {	contextmenupath += "trayselectionmenu";	}	else if (selectionservice.primaryselection is rootreportmodel) {	contextmenupath += "containermenu";	}	else if (selectionservice.primaryselection is basesection) {	
found basesection 

========================= sharpdevelop sample_1554 =========================

public override void run() {	var view = (system.windows.controls.listview)owner;	foreach (var t in view.selecteditems.oftype<sdtask>().toarray()) {	if (t.builderror == null) continue;	string code = t.builderror.errorcode;	if (string.isnullorempty(code)) return;	if (help3environment.ishelp3protocolregistered) {	
helpviewer getting description of 

public override void run() {	var view = (system.windows.controls.listview)owner;	foreach (var t in view.selecteditems.oftype<sdtask>().toarray()) {	if (t.builderror == null) continue;	string code = t.builderror.errorcode;	if (string.isnullorempty(code)) return;	if (help3environment.ishelp3protocolregistered) {	if (help3environment.islocalhelp) displayhelp.keywords(code);	else displayhelp.contextualhelp(code);	} else {	
helpviewer help system ist not initialized 

========================= sharpdevelop sample_1713 =========================

public idictionary<string, iresourcefilecontent> getlocalizedcontents(string filename) {	
resourcetoolkit defaultfilelocalizedresourcesfinder getlocalizedcontents called filename 

public idictionary<string, iresourcefilecontent> getlocalizedcontents(string filename) {	#endif string filenamewithoutextension = path.combine(path.getdirectoryname(filename), path.getfilenamewithoutextension(filename));	string culture = path.getextension(filenamewithoutextension);	if (!string.isnullorempty(culture)) {	try {	cultureinfo.getcultureinfo(culture);	
resourcetoolkit defaultfilelocalizedresourcesfinder getlocalizedcontents returning null for file because it has been detected as being a localized resource file itself 

public static idictionary<string, iresourcefilecontent> findlocalizedresourcefiles(string filenamewithoutextension, string extension) {	dictionary<string, iresourcefilecontent> list = new dictionary<string, iresourcefilecontent>();	
resourcetoolkit finding localized resource files defaultfilelocalizedresourcesfinder findlocalizedresourcefiles 

public static idictionary<string, iresourcefilecontent> findlocalizedresourcefiles(string filenamewithoutextension, string extension) {	dictionary<string, iresourcefilecontent> list = new dictionary<string, iresourcefilecontent>();	
filenamewithoutextension 

public static idictionary<string, iresourcefilecontent> findlocalizedresourcefiles(string filenamewithoutextension, string extension) {	dictionary<string, iresourcefilecontent> list = new dictionary<string, iresourcefilecontent>();	
extension 

public static idictionary<string, iresourcefilecontent> findlocalizedresourcefiles(string filenamewithoutextension, string extension) {	dictionary<string, iresourcefilecontent> list = new dictionary<string, iresourcefilecontent>();	#endif foreach (string filename in directory.getfiles(path.getdirectoryname(filenamewithoutextension), path.getfilename(filenamewithoutextension)+".*"+extension)) {	
possible file 

public static idictionary<string, iresourcefilecontent> findlocalizedresourcefiles(string filenamewithoutextension, string extension) {	dictionary<string, iresourcefilecontent> list = new dictionary<string, iresourcefilecontent>();	#endif foreach (string filename in directory.getfiles(path.getdirectoryname(filenamewithoutextension), path.getfilename(filenamewithoutextension)+".*"+extension)) {	#endif string culture = path.getextension(path.getfilenamewithoutextension(filename));	#if debug loggingservice.debug("    -> culture = '"+(culture ?? "<null>")+"'");	#endif if (!string.isnullorempty(culture)) {	try {	cultureinfo ci = cultureinfo.getcultureinfo(culture.substring(1));	iresourcefilecontent content = resourcefilecontentregistry.getresourcefilecontent(filename);	if (content != null) {	
culture name 

========================= sharpdevelop sample_1593 =========================

public codecompletionkeypressresult handlekeypress(itexteditor editor, char ch) {	if (ch == ':') {	if (editor.caret.offset >= 5 && editor.document.gettext(editor.caret.offset-5, 5) == "${res") {	iresourcefilecontent content = icsharpcodecoreresourceresolver.geticsharpcodecorelocalresourceset(editor.filename).resourcefilecontent;	#if debug if (content != null) {	
resourcetoolkit found local icsharpcode core resource file 

public codecompletionkeypressresult handlekeypress(itexteditor editor, char ch) {	if (ch == ':') {	if (editor.caret.offset >= 5 && editor.document.gettext(editor.caret.offset-5, 5) == "${res") {	iresourcefilecontent content = icsharpcodecoreresourceresolver.geticsharpcodecorelocalresourceset(editor.filename).resourcefilecontent;	#if debug if (content != null) {	}	#endif iresourcefilecontent hostcontent = icsharpcodecoreresourceresolver.geticsharpcodecorehostresourceset(editor.filename).resourcefilecontent;	if (hostcontent != null) {	
resourcetoolkit found host icsharpcode core resource file 

========================= sharpdevelop sample_1602 =========================

public override bool execute() {	if (monotoollocationhelper.ismonoinstalled) {	path = monotoollocationhelper.getpathtomonosdk();	log.logmessage(messageimportance.low, "monosdk: " + path);	return true;	}	
mono is not installed 

========================= sharpdevelop sample_271 =========================

if (e.item is idragdropitem) {	idragdropitem node = (idragdropitem)e.item;	node.selectthisitem();	if (node.isdragsource) {	designerhost.host.addingcontrols = true;	((control)_control).dodragdrop(node, dragdropeffects.copy);	designerhost.host.addingcontrols = false;	}	}	} catch (exception ex) {	
itemdragevent exception 

protected void dragenterevent(object sender, drageventargs e) {	try {	idragdropitem targetnode = null;	idragdropitem node = drageventcommon(sender, e, ref targetnode);	if (e.effect == dragdropeffects.none) {	idroptarget con = findancestordropcontrol(e);	if (con != null) con.dragenterevent(sender, e);	}	} catch (exception ex) {	
exception in event handler 

protected void dragoverevent(object sender, drageventargs e) {	try {	idragdropitem targetnode = null;	idragdropitem node = drageventcommon(sender, e, ref targetnode);	if (e.effect == dragdropeffects.none) {	idroptarget con = findancestordropcontrol(e);	if (con != null) con.dragoverevent(sender, e);	}	} catch (exception ex) {	
exception in event handler 

if (node != null) {	cursor save = cursor.current;	cursor.current = cursors.waitcursor;	node.dodrop(targetnode);	cursor.current = save;	} else {	idroptarget con = findancestordropcontrol(e);	if (con != null) con.dragdropevent(sender, e);	}	} catch (exception ex) {	
exception in event handler 

========================= sharpdevelop sample_113 =========================

var types = new list<type>();	if (basetype == null) {	basetype = typeof(object);	}	loggingservice.debug("typediscoveryservice.gettypes for " + basetype.fullname + "excludeglobaltypes=" + excludeglobaltypes.tostring());	foreach (assembly asm in typeresolutionservice.designerassemblies.toarray()) {	if (excludeglobaltypes) {	}	addderivedtypes(basetype, asm, types);	}	
typediscoveryservice returns types 

========================= sharpdevelop sample_1560 =========================

protected override object getservice(type servicetype) {	object service = base.getservice(servicetype);	if (service == null && serviceprovider != null) {	service = serviceprovider.getservice(servicetype);	}	#if idecontainer_log_service_requests if (service == null) {	
idecontainer request missing service 

protected override object getservice(type servicetype) {	object service = base.getservice(servicetype);	if (service == null && serviceprovider != null) {	service = serviceprovider.getservice(servicetype);	}	#if idecontainer_log_service_requests if (service == null) {	} else {	
idecontainer get service is 

========================= sharpdevelop sample_5169 =========================

if (automated) {	automationoutput = new streamwriter("benchmark.out");	}	stopwatch w = new stopwatch();	w.start();	test(swapandvirtualcalls);	test(badrecursion);	test(quicksort);	test(floatcalculation);	w.stop();	
total tests time 

if (automated) {	automationoutput = new streamwriter("benchmark.out");	}	stopwatch w = new stopwatch();	w.start();	test(swapandvirtualcalls);	test(badrecursion);	test(quicksort);	test(floatcalculation);	w.stop();	
total time 

========================= sharpdevelop sample_2047 =========================

public static bool openfilesinpreviousinstance(string[] filelist) {	
trying to pass arguments to previous instance 

========================= sharpdevelop sample_4629 =========================

string docname;	string docstring;	int helpcontext;	string helpfile;	utypeinfo.getdocumentation(-1, out docname, out docstring, out helpcontext, out helpfile);	if (docname.equals("guid")) docname = "system.guid";	if (!comtype) return typelib.resolvetypedef(docname, comtype);	return docname;	}	else {	
user x unknown 

if (!comtype) return typelib.resolvetypedef(docname, comtype);	return docname;	}	else {	return "(userdef unknown)";	}	}	return gettypestr(typedesc.vt, comtype);	}	catch (exception ex) {	
activex type conversion error 

========================= sharpdevelop sample_61 =========================

continue;	}	break;	}	if (!fileutility.isequalfilename(this.filename, this.membertofind.declaringtype.compilationunit.filename)) {	throw new invalidoperationexception("the propertyfieldassociationvisitor does currently not support the case that the field is declared in a different file than the property.");	}	memberresolveresult mrr = this.resolve(expr) as memberresolveresult;	if (mrr != null && mrr.resolvedmember is ifield) {	propertydeclaration pd;	
resourcetoolkit propertyfieldassociationvisitor inside propertygetregion resolved field 

}	break;	}	if (!fileutility.isequalfilename(this.filename, this.membertofind.declaringtype.compilationunit.filename)) {	throw new invalidoperationexception("the propertyfieldassociationvisitor does currently not support the case that the field is declared in a different file than the property.");	}	memberresolveresult mrr = this.resolve(expr) as memberresolveresult;	if (mrr != null && mrr.resolvedmember is ifield) {	propertydeclaration pd;	#endif if (data as bool? ?? false) {	
resourcetoolkit propertyfieldassociationvisitor inside propertygetregion this property seems to reference field 

}	memberresolveresult mrr = this.resolve(expr) as memberresolveresult;	if (mrr != null && mrr.resolvedmember is ifield) {	propertydeclaration pd;	#endif if (data as bool? ?? false) {	#endif this.associatedmember = mrr.resolvedmember;	} else if ((pd = (data as propertydeclaration)) != null) {	if (this.membertofind.compareto(mrr.resolvedmember) == 0) {	memberresolveresult prr = nrefactoryastcacheservice.resolvelowlevel(this.filename, this.filecontent, pd.startlocation.y, pd.startlocation.x+1, null, pd.name, expressioncontext.default) as memberresolveresult;	if (prr != null) {	
resourcetoolkit propertyfieldassociationvisitor inside propertygetregion resolved property 

memberresolveresult mrr = this.resolve(expr) as memberresolveresult;	if (mrr != null && mrr.resolvedmember is ifield) {	propertydeclaration pd;	#endif if (data as bool? ?? false) {	#endif this.associatedmember = mrr.resolvedmember;	} else if ((pd = (data as propertydeclaration)) != null) {	if (this.membertofind.compareto(mrr.resolvedmember) == 0) {	memberresolveresult prr = nrefactoryastcacheservice.resolvelowlevel(this.filename, this.filecontent, pd.startlocation.y, pd.startlocation.x+1, null, pd.name, expressioncontext.default) as memberresolveresult;	if (prr != null) {	#endif if (prr.resolvedmember is iproperty) {	
resourcetoolkit propertyfieldassociationvisitor inside propertygetregion property seems to reference field 

public override object trackedvisitassignmentexpression(assignmentexpression assignmentexpression, object data) {	if (this.associatedmember == null && this.currentcontext == visitorcontext.propertysetregion && assignmentexpression.op == assignmentoperatortype.assign && data != null) {	if (!fileutility.isequalfilename(this.filename, this.membertofind.declaringtype.compilationunit.filename)) {	throw new invalidoperationexception("the propertyfieldassociationvisitor does currently not support the case that the field is declared in a different file than the property.");	}	memberresolveresult mrr = this.resolve(assignmentexpression.left) as memberresolveresult;	if (mrr != null && mrr.resolvedmember is ifield && !((ifield)mrr.resolvedmember).islocalvariable) {	propertydeclaration pd;	
resourcetoolkit propertyfieldassociationvisitor inside propertysetregion resolved field 

public override object trackedvisitassignmentexpression(assignmentexpression assignmentexpression, object data) {	if (this.associatedmember == null && this.currentcontext == visitorcontext.propertysetregion && assignmentexpression.op == assignmentoperatortype.assign && data != null) {	if (!fileutility.isequalfilename(this.filename, this.membertofind.declaringtype.compilationunit.filename)) {	throw new invalidoperationexception("the propertyfieldassociationvisitor does currently not support the case that the field is declared in a different file than the property.");	}	memberresolveresult mrr = this.resolve(assignmentexpression.left) as memberresolveresult;	if (mrr != null && mrr.resolvedmember is ifield && !((ifield)mrr.resolvedmember).islocalvariable) {	propertydeclaration pd;	#endif if (data as bool? ?? false) {	
resourcetoolkit propertyfieldassociationvisitor inside propertysetregion this property seems to reference field 

}	memberresolveresult mrr = this.resolve(assignmentexpression.left) as memberresolveresult;	if (mrr != null && mrr.resolvedmember is ifield && !((ifield)mrr.resolvedmember).islocalvariable) {	propertydeclaration pd;	#endif if (data as bool? ?? false) {	#endif this.associatedmember = mrr.resolvedmember;	} else if ((pd = (data as propertydeclaration)) != null) {	if (this.membertofind.compareto(mrr.resolvedmember) == 0) {	memberresolveresult prr = nrefactoryastcacheservice.resolvelowlevel(this.filename, this.filecontent, pd.startlocation.y, pd.startlocation.x+1, null, pd.name, expressioncontext.default) as memberresolveresult;	if (prr != null) {	
resourcetoolkit propertyfieldassociationvisitor inside propertysetregion resolved property 

memberresolveresult mrr = this.resolve(assignmentexpression.left) as memberresolveresult;	if (mrr != null && mrr.resolvedmember is ifield && !((ifield)mrr.resolvedmember).islocalvariable) {	propertydeclaration pd;	#endif if (data as bool? ?? false) {	#endif this.associatedmember = mrr.resolvedmember;	} else if ((pd = (data as propertydeclaration)) != null) {	if (this.membertofind.compareto(mrr.resolvedmember) == 0) {	memberresolveresult prr = nrefactoryastcacheservice.resolvelowlevel(this.filename, this.filecontent, pd.startlocation.y, pd.startlocation.x+1, null, pd.name, expressioncontext.default) as memberresolveresult;	if (prr != null) {	#endif if (prr.resolvedmember is iproperty) {	
resourcetoolkit propertyfieldassociationvisitor inside propertysetregion property seems to reference field 

========================= sharpdevelop sample_1619 =========================

} else {	references.add(new reference(filename, keypos, keystring.length, keystring, rrr));	}	} else {	references.add(new reference(filename, pos, 0, null, rrr));	}	}	}	}	}	
resourcetoolkit findreferences finished in s 

referencedprefixes[filename].add(rprr.prefix);	}	}	} else {	if (monitor != null) monitor.showingdialog = true;	messageservice.showwarning("found a resource reference that could not be resolved."+environment.newline+(reference.filename ?? "<null>")+":"+reference.offset+environment.newline+"expression: "+(reference.expression ?? "<null>"));	if (monitor != null) monitor.showingdialog = false;	}	}	foreach (string filename in referencedkeys.keys) {	
resourcetoolkit findunusedkeys referenced resource file 

========================= sharpdevelop sample_1588 =========================

public virtual void notifycomponentrenamed(object component, string newname, string oldname) {	reparse();	
renaming form to 

public virtual void notifycomponentrenamed(object component, string newname, string oldname) {	reparse();	if (this.formclass == null) {	
cannot rename formclass not found 

static bool fieldchanged(ifield oldfield, codememberfield newfield) {	if (oldfield.returntype != null && newfield.type != null) {	if (aretypesdifferent(oldfield.returntype, newfield.type)) {	
fieldchanged type 

foreach (var utd in info.unresolvedfile.topleveltypedefinitions) {	var td = utd.resolve(new simpletyperesolvecontext(compilation.mainassembly)).getdefinition();	if (formsdesignersecondarydisplaybinding.baseclassisformorcontrol(td)) {	if (formsdesignersecondarydisplaybinding.getinitializecomponents(td) != null) {	this.currentclasspart = utd;	break;	}	}	}	if (this.currentclasspart == null) {	
abstractdesignergenerator reparse could not find designed class in primary file 

if (formsdesignersecondarydisplaybinding.baseclassisformorcontrol(td)) {	if (formsdesignersecondarydisplaybinding.getinitializecomponents(td) != null) {	this.currentclasspart = utd;	break;	}	}	}	if (this.currentclasspart == null) {	}	} else {	
abstractdesignergenerator reparse primary file is unavailable 

}	}	if (this.currentclasspart == null) {	}	} else {	}	itypedefinition completeclass = null;	this.formclass = null;	this.initializecomponents = null;	if (this.viewcontent.designercodefile == null || !parsings.trygetvalue(this.viewcontent.designercodefile, out info)) {	
abstractdesignergenerator reparse designer source code file is unavailable 

string line = r.readline();	tabs = getindentation(line);	}	completeclass = td;	this.formclass = this.initializecomponents.declaringtypedefinition;	break;	}	}	}	if (completeclass == null || this.formclass == null) {	
abstractdesignergenerator reparse could not find initializecomponents in designer source code file 

return false;	}	}	return true;	}	}	viewcontent.mergeformchanges();	completeclass = reparse();	file = currentclasspart.parsedfile.filename;	int line = geteventhandlerinsertionline(currentclasspart);	
inserting new event handler at line 

========================= sharpdevelop sample_2900 =========================

_progress.updateprogress(1);	registrykey key = _basekey.opensubkey(str);	object info = processchild(key, str);	if (info != null) {	_allchildren.add(getsortkey(info), info);	} else {	_progress.updateprogress(1);	}	} catch (exception ex) {	_progress.updateprogress(1);	
failure to read 

========================= sharpdevelop sample_159 =========================

public void dragenterevent(object sender, drageventargs e) {	try	{	if (candrop(e))	{	e.effect = dragdropeffects.copy;	}	} catch (exception ex){	
exception in event handler 

public void dragdropevent(object sender, drageventargs e) {	try	{	if (candrop(e)) {	string[] fileelements = (string[])e.data.getdata(dataformats.filedrop);	openfile(fileelements[0]);	}	} catch (exception ex) {	
exception in event handler 

return true;	} catch (exception ex) {	savedexception = ex;	}	try {	comsupport.openfile(filename);	return true;	} catch (exception ex) {	if (savedexception == null) savedexception = ex;	}	
error opening file 

========================= sharpdevelop sample_108 =========================

static memberreference findmember(moduledefinition module, string key, func<typedefinition, ienumerable<memberreference>> memberselector) {	
looking for member 

}	if (dotpos < 0) return null;	typedefinition type = findtype(module, key.substring(2, dotpos - 2));	if (type == null) return null;	string shortname;	if (parenpos > 0) {	shortname = key.substring(dotpos + 1, parenpos - (dotpos + 1));	} else {	shortname = key.substring(dotpos + 1);	}	
searching in type for 

========================= sharpdevelop sample_401 =========================

public static void main() {	system.diagnostics.debugger.break();	
main 

public static void main() {	system.diagnostics.debugger.break();	
main 

public static void main() {	system.diagnostics.debugger.break();	
main 

========================= sharpdevelop sample_3270 =========================

public static void userefboolincondition(ref bool x) {	if (x) {	
true 

========================= sharpdevelop sample_435 =========================

object processnode(xmlnode node, object parent) {	object ret=null;	if (node is xmlelement) {	string ns=node.prefix;	string cname=node.localname;	type t=gettypebyname(ns, cname);	try {	ret=activator.createinstance(t);	}	catch(exception) {	
mycroparser 

object processnode(xmlnode node, object parent) {	object ret=null;	if (node is xmlelement) {	string ns=node.prefix;	string cname=node.localname;	type t=gettypebyname(ns, cname);	try {	ret=activator.createinstance(t);	}	catch(exception) {	
not found 

protected void processchildproperties(xmlnode node, object parent) {	var t=parent.gettype();	foreach(xmlnode child in node.childnodes) {	if (!(child is xmlelement)) continue;	string pname=child.localname;	var pi=t.getproperty(pname);	if (pi==null) {	
unsupported property 

try {	if (tc.canconvertfrom(typeof(string))) {	object val=tc.convertfrominvariantstring(value);	pi.setvalue(obj, val, null);	} else if (pi.propertytype == typeof(type)) {	pi.setvalue(obj, type.gettype(value), null);	}	}	catch(exception e) {	var s = string.format(cultureinfo.currentculture,"property setter for {0} failed {1}\r\n",pi.name, e.message);	
mycroparser 

========================= sharpdevelop sample_1386 =========================

foreach (runtime runtime in runtimes) {	if (!runtime.ishostapplicationassembly) {	loaddependencies();	}	type t = runtime.findtype(classname);	if (t != null) {	return t;	}	}	if (hasshownerrormessage) {	
cannot find class 

========================= sharpdevelop sample_4511 =========================

if (offset.x >= _wnd.width) offset.x = _wnd.width / 2;	_wnd.left = point.x - offset.x;	_wnd.top = point.y - offset.y;	_wnd.show();	int surfacecount = 0;	restart: surfacecount = surfaces.count;	foreach (idropsurface surface in surfaces) {	if (surface.surfacerectangle.contains(point)) {	surfaceswithdragover.add(surface);	surface.ondragenter(point);	
enter 

========================= sharpdevelop sample_551 =========================

static eventwaithandle createnew(ref int eventname, bool initialvalue) {	if (rnd == null) rnd = new random();	eventwaithandle ev = null;	while (ev == null) {	eventname = rnd.next();	bool creatednew;	ev = new eventwaithandle(initialvalue, eventresetmode.autoreset, geteventname(eventname), out creatednew);	if (!creatednew) {	
collision on name creation 

========================= sharpdevelop sample_2078 =========================

public void validatexml() {	taskservice.clearexceptcommenttasks();	category.cleartext();	showoutputwindow();	
res mainwindow xmlvalidationmessages validationstarted 

category.cleartext();	showoutputwindow();	if (isschema) {	if (!validateschema()) {	return;	}	} else if (!validateagainstschema()) {	return;	}	outputwindowwriteline(string.empty);	
res mainwindow xmlvalidationmessages validationsuccess 

static void showvalidationfailedmessage() {	outputwindowwriteline(string.empty);	
res mainwindow xmlvalidationmessages validationfailed 

========================= sharpdevelop sample_2627 =========================

public projectresourceinfo getprojectresource(codepropertyreferenceexpression propref) {	codetypereferenceexpression typeref = propref.targetobject as codetypereferenceexpression;	if (typeref == null) {	
target of possible project resources property reference is not a type reference but 

index = code.indexof(this.stringliteraldelimiter, index + 1, stringcomparison.ordinal);	if (index == -1) {	throw new invalidoperationexception("no string delimiter ('" + this.stringliteraldelimiter + "') found in property getter of '" + prop.fullname + "'. code: '" + code + "'");	}	index += this.stringliteraldelimiter.length;	int endindex = code.lastindexof(this.stringliteraldelimiter, stringcomparison.ordinal);	if (endindex == -1) {	throw new invalidoperationexception("no string terminator ('" + this.stringliteraldelimiter + "') found in property getter of '" + prop.fullname + "'. code: '" + code + "'");	}	string resourcekey = code.substring(index, endindex - index);	
decoded resource in key 

========================= sharpdevelop sample_2924 =========================

public virtual void select() {	browsertree tree = (browsertree)treeview;	try {	tree.treemenuhelper.setupactionmenu(this, tree);	} catch (exception ex) {	
exception in menu processing 

public virtual void select() {	browsertree tree = (browsertree)treeview;	try {	tree.treemenuhelper.setupactionmenu(this, tree);	} catch (exception ex) {	tree.treemenuhelper.disableactionmenu();	}	try {	setupparampanel();	} catch (exception ex) {	
exception in setupparampanel 

public virtual void invalidatenode() {	
invalidating 

========================= sharpdevelop sample_149 =========================

public object visit(abstractprojectbrowsertreenode abstractprojectbrowsertreenode, object data) {	
warning visited default visit for 

========================= sharpdevelop sample_5191 =========================

protected override void loadinternal(openedfile file, stream stream) {	
loadinternal 

========================= sharpdevelop sample_2691 =========================

static bool projectcontainsreference(iproject project, assemblyname referencename) {	
checking project has reference 

static bool projectcontainsreference(iproject project, assemblyname referencename) {	bool isalreadyinreffolder = false;	foreach (projectitem projectitem in project.items) {	referenceprojectitem referenceitem = projectitem as referenceprojectitem;	if (referenceitem != null) {	if (referenceitem.itemtype == itemtype.reference) {	
checking project reference 

static bool projectcontainsreference(iproject project, assemblyname referencename) {	bool isalreadyinreffolder = false;	foreach (projectitem projectitem in project.items) {	referenceprojectitem referenceitem = projectitem as referenceprojectitem;	if (referenceitem != null) {	if (referenceitem.itemtype == itemtype.reference) {	if (referenceitem.hintpath.length > 0 && file.exists(referenceitem.filename)) {	
checking assembly reference 

referenceprojectitem referenceitem = projectitem as referenceprojectitem;	if (referenceitem != null) {	if (referenceitem.itemtype == itemtype.reference) {	if (referenceitem.hintpath.length > 0 && file.exists(referenceitem.filename)) {	assemblyname assemblyname = getassemblyname(referenceitem.filename);	if (assemblyname != null && assemblyname.fullname == referencename.fullname) {	isalreadyinreffolder = true;	break;	}	} else {	
checking gac reference 

if (referenceitem != null) {	if (referenceitem.itemtype == itemtype.reference) {	if (referenceitem.hintpath.length > 0 && file.exists(referenceitem.filename)) {	assemblyname assemblyname = getassemblyname(referenceitem.filename);	if (assemblyname != null && assemblyname.fullname == referencename.fullname) {	isalreadyinreffolder = true;	break;	}	} else {	if (referenceitem.include == referencename.fullname || referenceitem.include == referencename.name) {	
found existing gac reference 

static void addreferencetoproject(iproject project, assemblyname referencename) {	
adding reference to project 

static void addreferencetoproject(iproject project, assemblyname referencename) {	referenceprojectitem reference = new referenceprojectitem(project, "reference");	toolcomponent toolcomponent = toolboxprovider.componentlibraryloader.gettoolcomponent(referencename.fullname);	if (toolcomponent == null || toolcomponent.hintpath == null) {	reference.include = referencename.fullname;	
added gac reference to project 

static void addreferencetoproject(iproject project, assemblyname referencename) {	referenceprojectitem reference = new referenceprojectitem(project, "reference");	toolcomponent toolcomponent = toolboxprovider.componentlibraryloader.gettoolcomponent(referencename.fullname);	if (toolcomponent == null || toolcomponent.hintpath == null) {	reference.include = referencename.fullname;	} else {	reference.include = referencename.fullname;	reference.hintpath = fileutility.getrelativepath(project.directory, toolcomponent.filename);	
added assembly reference to project 

static void addprojectreferencetoproject(iproject project, iproject referenceto) {	
adding project reference to project 

========================= sharpdevelop sample_2883 =========================

l = new label();	l.dock = dockstyle.top;	l.text = name;	l.autosize = true;	l.font = new font(l.font, fontstyle.bold);	h += l.height;	panel.controls.add(l);	panel.height = h;	pi._controlpanel = panel;	_paraminfos.add(pi);	
param control 

========================= sharpdevelop sample_169 =========================

static ienumerable<itreenode<iclass>> findderivedclassestree(iclass baseclass, ienumerable<iprojectcontent> projectcontents, hashset<iclass> seenclasses) {	baseclass = baseclass.getcompoundclass();	
findderivedclasses tree for 

static void findderivedclasses(hashset<iclass> resultlist, iclass baseclass, ienumerable<iprojectcontent> projectcontents, bool directderivationonly) {	baseclass = baseclass.getcompoundclass();	
findderivedclasses for 

========================= sharpdevelop sample_5393 =========================

filenode filenode = node as filenode;	if (filenode != null) {	fileprojectitem fileitem = filenode.projectitem as fileprojectitem;	if (fileitem != null && string.equals(fileitem.dependentupon, path.getfilename(oldfilename), stringcomparison.ordinalignorecase)) {	fileitem.dependentupon = newname;	}	if (filenode.text.startswith(oldprefix)) {	filenode.afterlabeledit(newprefix + filenode.text.substring(oldprefix.length));	}	} else {	
filenode afterlabeledit child is not a filenode 

public override void dodragdrop(idataobject dataobject, dragdropeffects effect) {	if (dataobject.getdatapresent(typeof(filenode))) {	filenode other = (filenode)dataobject.getdata(typeof(filenode));	
projectbrowser dragging file onto file 

public override void dodragdrop(idataobject dataobject, dragdropeffects effect) {	if (dataobject.getdatapresent(typeof(filenode))) {	filenode other = (filenode)dataobject.getdata(typeof(filenode));	if (!fileutility.isequalfilename(path.getdirectoryname(this.filename), path.getdirectoryname(other.filename))) {	
source file is in different directory performing 

if (!fileutility.isequalfilename(path.getdirectoryname(this.filename), path.getdirectoryname(other.filename))) {	exttreenode p = this;	directorynode parentdirectory;	do {	p = (exttreenode)p.parent;	parentdirectory = p as directorynode;	} while (parentdirectory == null && p != null);	if (parentdirectory == null) {	throw new invalidoperationexception("file '" + this.filename + "' does not have a parent directory.");	}	
copying moving source file to parent directory of target 

}	string otherfilename = path.getfilename(other.filename);	parentdirectory.copyfilehere(other, effect == dragdropeffects.move);	other = parentdirectory.allnodes.oftype<filenode>().singleordefault(n => fileutility.isequalfilename(path.getfilename(n.filename), otherfilename));	}	if (other != null) {	other.remove();	((fileprojectitem)other.projectitem).dependentupon = path.getfilename(this.filename);	other.filenodestatus = filenodestatus.behindfile;	other.insertsorted(this);	
created new dependency saving solution 

parentdirectory.copyfilehere(other, effect == dragdropeffects.move);	other = parentdirectory.allnodes.oftype<filenode>().singleordefault(n => fileutility.isequalfilename(path.getfilename(n.filename), otherfilename));	}	if (other != null) {	other.remove();	((fileprojectitem)other.projectitem).dependentupon = path.getfilename(this.filename);	other.filenodestatus = filenodestatus.behindfile;	other.insertsorted(this);	projectservice.savesolution();	} else {	
could not find the copied or moved file node in the new parent directory 

========================= sharpdevelop sample_5185 =========================

public static mytypefinder create(openedfile file) {	mytypefinder f = new mytypefinder();	f.file = file;	f.importfrom(createwpftypefinder());	var compilation = sd.parserservice.getcompilationforfile(file.filename);	foreach (var referencedassembly in compilation.referencedassemblies) {	try {	var assembly = f.typeresolutionservice.loadassembly(referencedassembly);	if (assembly != null) f.registerassembly(assembly);	} catch (exception ex) {	
error loading assembly 

========================= sharpdevelop sample_2716 =========================

static void opendialog(string filename, string dialogid) {	iviewcontent viewcontent = fileservice.openfile(filename);	wixdialogdesigner designer = wixdialogdesigner.getdesigner(viewcontent);	if (designer != null) {	designer.opendialog(dialogid);	} else {	
could not open wix dialog designer for 

========================= sharpdevelop sample_4414 =========================

private static void accepttypedref(typedreference tr) {	
value is 

private static void accepttypedref(typedreference tr) {	
type is 

========================= sharpdevelop sample_444 =========================

public void formsreportcontains_4_sections() {	reportcreator.buildexportlist();	var x = reportcreator.pages[0].exporteditems;	var y = from s in x where s.gettype() == typeof(exportcontainer) select s;	assert.that(y.tolist().count,is.equalto(4));	
pagelayoutfixture showdebug 

========================= sharpdevelop sample_1355 =========================

public void storeconfiguration() {	try {	layoutconfiguration current = layoutconfiguration.currentlayout;	if (current != null && !current.readonly) {	string configpath = layoutconfiguration.configlayoutpath;	directory.createdirectory(configpath);	string filename = path.combine(configpath, current.filename);	
saving layout file 

========================= sharpdevelop sample_4626 =========================

public static void printnumberofunhandledopcodes() {	#if debug foreach (var pair in unhandledopcodes) {	
addmethodbodybuilder unhandled opcode x 

========================= sharpdevelop sample_483 =========================

public value getvalue() {	if (cachedvalue == null || cachedvalueprocess.debuggeestate != cachedvaluedebuggeestate) {	stopwatch watch = new stopwatch();	watch.start();	cachedvalue = this.getvalue().getpermanentreference(windowsdebugger.evalthread);	cachedvalueprocess = cachedvalue.process;	cachedvaluedebuggeestate = cachedvalue.process.debuggeestate;	
evaluated node in ms result cached 

========================= sharpdevelop sample_3375 =========================

public void createpad() {	if (sd.mainthread.invokerequired) {	throw new invalidoperationexception("this action could trigger pad creation and is only valid on the main thread!");	}	if (!padcontentcreated) {	padcontentcreated = true;	try {	if (addin != null) {	
creating pad 

========================= sharpdevelop sample_5077 =========================

protected override memberrelationship getrelationship(memberrelationship source) {	loggingservice.debug("memberrelationshipservice: getrelationship called, source=" + tostring(source));	var mrs = base.getrelationship(source);	
memberrelationshipservice returning 

========================= sharpdevelop sample_2914 =========================

public override void run() {	xmlview xmlview = xmlview.activexmlview;	if (xmlview != null) {	if (!string.isnullorempty(xmlview.file.filename)) {	xmlview assocfile = getassociatedxmlview(xmlview.file.filename);	if (assocfile != null) {	
using associated xml file 

========================= sharpdevelop sample_2617 =========================

public override object editvalue(itypedescriptorcontext context, iserviceprovider provider, object value) {	if (context == null || context.propertydescriptor == null || context.instance == null || provider == null) {	return value;	}	icomponent component = context.instance as icomponent;	if (component == null || component.site == null) {	
editing of image properties on objects not implementing icomponent and components without site is not supported by the imageresourceeditor 

========================= sharpdevelop sample_2920 =========================

config = configurationmanager.openmappedexeconfiguration(fm, configurationuserlevel.none);	}	if (config != null) {	appsettingssection section = (appsettingssection)config.getsection("appsettings");	string tmp = section.settings["helpmode"].value;	return (string.isnullorempty(tmp)) ? "offline":tmp;	}	}	}	catch (exception ex) {	
helpviewer 

static void sethelpmode() {	clientfilechanged.enableraisingevents = false;	
helpviewer trying to set help mode to 

config = configurationmanager.openmappedexeconfiguration(fm, configurationuserlevel.none);	}	if (config != null) {	appsettingssection section = (appsettingssection)config.getsection("appsettings");	section.settings["helpmode"].value = helpmode;	config.save();	}	}	}	catch (exception ex) {	
helpviewer 

========================= sharpdevelop sample_1728 =========================

xmldocument doc = new xmldocument();	doc.load(path.combine(propertyservice.configdirectory, "sidebarconfig.xml"));	if (doc.documentelement.getattribute("version") != "1.0") {	generatestandardsidebar();	} else {	loadsidebarconfig(doc.documentelement["sidebar"]);	}	} catch (filenotfoundexception) {	generatestandardsidebar();	} catch (exception ex) {	
error loading sidebarconfig xml 

========================= sharpdevelop sample_5221 =========================

static void loadcache() {	dict = new dictionary<string, usagestruct>();	sd.projectservice.solutionclosed += delegate { savecache(); };	string cachefilename = codecompletiondatausagecache.cachefilename;	if (string.isnullorempty(cachefilename) || !file.exists(cachefilename)) return;	using (filestream fs = new filestream(cachefilename, filemode.open, fileaccess.read)) {	using (binaryreader reader = new binaryreader(fs)) {	if (reader.readint64() != magic) {	
codecompletiondatausagecache wrong file magic 

dict = new dictionary<string, usagestruct>();	sd.projectservice.solutionclosed += delegate { savecache(); };	string cachefilename = codecompletiondatausagecache.cachefilename;	if (string.isnullorempty(cachefilename) || !file.exists(cachefilename)) return;	using (filestream fs = new filestream(cachefilename, filemode.open, fileaccess.read)) {	using (binaryreader reader = new binaryreader(fs)) {	if (reader.readint64() != magic) {	return;	}	if (reader.readint16() != version) {	
codecompletiondatausagecache unknown file version 

int uses = reader.readint32();	int showcount = reader.readint32();	if (showcount > 1000) {	showcount /= 3;	uses /= 3;	}	dict.add(key, new usagestruct(uses, showcount));	}	}	}	
loaded codecompletiondatausagecache items 

if (dict == null || string.isnullorempty(cachefilename)) {	return;	}	try {	int count;	using (filestream fs = new filestream(cachefilename, filemode.create, fileaccess.write)) {	using (binarywriter writer = new binarywriter(fs)) {	count = savecache(writer);	}	}	
saved codecompletiondatausagecache of items 

return;	}	try {	int count;	using (filestream fs = new filestream(cachefilename, filemode.create, fileaccess.write)) {	using (binarywriter writer = new binarywriter(fs)) {	count = savecache(writer);	}	}	} catch (ioexception ex) {	
error saving cc cache 

public static void resetcache() {	dict = new dictionary<string, usagestruct>();	try {	if (file.exists(cachefilename)) {	file.delete(cachefilename);	}	} catch (exception ex) {	
codecompletiondatausagecache resetcache 

========================= sharpdevelop sample_5066 =========================

public void runinitialization() {	addintree.load(addinfiles, disabledaddins);	var container = (iservicecontainer)servicesingleton.serviceprovider.getservice(typeof(iservicecontainer));	if (container != null) addintree.builditems<object>("/sharpdevelop/services", container, false);	
running autostart commands 

========================= sharpdevelop sample_4504 =========================

public static void main() {	
hello world 

========================= sharpdevelop sample_3275 =========================

static isettings loadsettings () {	try {	return settings.loaddefaultsettings(null, null, null);	} catch (exception ex) {	
unable to load nuget config 

========================= sharpdevelop sample_940 =========================

public override void writecomment(commenttype commenttype, string content) {	switch (commenttype) {	
output writeline content 

========================= sharpdevelop sample_482 =========================

}	toolloader.tool = newlist;	toolloader.savetools();	return true;	}	externaltool selectedtool;	public externaltool selectedtool {	get { return selectedtool; }	set {	selectedtool = value;	
selected 

========================= sharpdevelop sample_5254 =========================

protected static void addrunningobjs() {	
addrunningobjs 

public static void restorecomenvironment() {	if (_typelibs.count == 0) return;	progressdialog progressdialog = new progressdialog();	progressdialog.setup("loading remembered activex files", "please wait while i load the previously " + "opened activex files.", _typelibs.count, progressdialog.has_progress_text, progressdialog.final);	progressdialog.showifnotdone();	
activex restore start 

public static void restorecomenvironment() {	if (_typelibs.count == 0) return;	progressdialog progressdialog = new progressdialog();	progressdialog.setup("loading remembered activex files", "please wait while i load the previously " + "opened activex files.", _typelibs.count, progressdialog.has_progress_text, progressdialog.final);	progressdialog.showifnotdone();	try {	for (int i = _typelibs.count - 1; i >= 0; --i) {	previouslyopenedtypelibrary typelib = _typelibs[i];	try {	
restore assy 

progressdialog progressdialog = new progressdialog();	progressdialog.setup("loading remembered activex files", "please wait while i load the previously " + "opened activex files.", _typelibs.count, progressdialog.has_progress_text, progressdialog.final);	progressdialog.showifnotdone();	try {	for (int i = _typelibs.count - 1; i >= 0; --i) {	previouslyopenedtypelibrary typelib = _typelibs[i];	try {	progressdialog.updateprogresstext(typelib.filename);	guid guid = new guid(typelib.guid);	typelibrary.restoretypelib(typelib.filename, guid, typelib.version);	
loaded assy 

progressdialog.showifnotdone();	try {	for (int i = _typelibs.count - 1; i >= 0; --i) {	previouslyopenedtypelibrary typelib = _typelibs[i];	try {	progressdialog.updateprogresstext(typelib.filename);	guid guid = new guid(typelib.guid);	typelibrary.restoretypelib(typelib.filename, guid, typelib.version);	progressdialog.updateprogress(1);	} catch (exception ex) {	
assemblies deleting bad assemblies entry 

try {	progressdialog.updateprogresstext(typelib.filename);	guid guid = new guid(typelib.guid);	typelibrary.restoretypelib(typelib.filename, guid, typelib.version);	progressdialog.updateprogress(1);	} catch (exception ex) {	_typelibs.remove(typelib);	progressdialog.updateprogress(1);	}	}	
activex restore end 

progressdialog.updateprogresstext(typelib.filename);	guid guid = new guid(typelib.guid);	typelibrary.restoretypelib(typelib.filename, guid, typelib.version);	progressdialog.updateprogress(1);	} catch (exception ex) {	_typelibs.remove(typelib);	progressdialog.updateprogress(1);	}	}	} catch (exception ex) {	
unexpected exception restoring assemblies 

========================= sharpdevelop sample_129 =========================

public resolveresult resolve(expression expression, expressioncontext context) {	if (!this.positionavailable) {	
resourcetoolkit positiontrackingastvisitor resolve failed due to position information being unavailable expression 

public resolveresult resolve(expression expression, expressioncontext context) {	if (!this.positionavailable) {	return null;	}	
resourcetoolkit positiontrackingastvisitor using this parent node for resolve 

========================= sharpdevelop sample_1618 =========================

public void invoke(bool setmember, bool autoinvoke, bool ignoreexception) {	
invoke obj 

paramvalues = objectbrowser.parampanel. getparametervalues(ignoreexception, setmember, out fieldpropvalue);	if (paramvalues == null) return;	}	columndata[0] = null;	object prevvalue = obj;	cursor save = cursor.current;	cursor.current = cursors.waitcursor;	bool worked = _objinfo.invoke(parentobjectinfo, this, paramvalues, fieldpropvalue, setmember, autoinvoke, ignoreexception);	cursor.current = save;	if (!worked) {	
invoke failed obj 

public bool isautoinvoked(bool ignoreexception) {	if (traceutil.if(this, tracelevel.verbose)) {	
isautoinvoked 

protected override void addedtotree() {	try {	if (isautoinvoked(constants.ignore_exception)) {	invoke(false, true, constants.ignore_exception);	adddummy();	}	} catch (exception ex) {	
add autoinvoke exception 

public override void doselectinvoke() {	try {	if (isautoinvoked(!constants.ignore_exception)) invoke(false, true, !constants.ignore_exception);	} catch (exception ex) {	
select autoinvoke exception 

========================= sharpdevelop sample_158 =========================

protected override void loadinternal(openedfile file, system.io.stream stream) {	loggingservice.debug("forms designer: load " + file.filename + "; inmasterloadoperation=" + this.inmasterloadoperation);	if (this.typeresolutionservice != null) this.typeresolutionservice.clearcaches();	if (inmasterloadoperation) {	if (this.sourcecodestorage.containsfile(file)) {	
forms designer loading in source code storage 

protected override void loadinternal(openedfile file, system.io.stream stream) {	loggingservice.debug("forms designer: load " + file.filename + "; inmasterloadoperation=" + this.inmasterloadoperation);	if (this.typeresolutionservice != null) this.typeresolutionservice.clearcaches();	if (inmasterloadoperation) {	if (this.sourcecodestorage.containsfile(file)) {	this.sourcecodestorage.loadfile(file, stream);	} else {	
forms designer loading in resource store 

} else if (file == this.primaryfile || this.sourcecodestorage.containsfile(file)) {	if (this.loader != null && this.loader.loading) {	throw new invalidoperationexception("designer loading a source code file while designerloader is loading and the view is not in a master load operation. this must not happen.");	}	if (this.designsurface != null) {	this.unloaddesigner();	}	this.inmasterloadoperation = true;	try {	this.sourcecodestorage.loadfile(file, stream);	
forms designer determining designer source files for 

this.inmasterloadoperation = true;	try {	this.sourcecodestorage.loadfile(file, stream);	openedfile newdesignercodefile;	ireadonlylist<openedfile> sourcefiles = loaderprovider.getsourcefiles(this, out newdesignercodefile);	if (sourcefiles == null || newdesignercodefile == null) {	throw new formsdesignerloadexception("the designer source files could not be determined.");	}	foreach (openedfile f in this.files.except(sourcefiles).toarray()) {	if (this.sourcecodestorage.containsfile(f)) {	
forms designer unloading file because it no longer belongs to the designed form 

this.files.add(f);	}	this.sourcecodestorage.designercodefile = newdesignercodefile;	this.loadanddisplaydesigner();	} finally {	this.inmasterloadoperation = false;	}	} else {	bool mustreload;	if (this.loader != null && !this.loader.loading) {	
forms designer reloading designer because of loadinternal on resource file 

} else {	bool mustreload;	if (this.loader != null && !this.loader.loading) {	this.unloaddesigner();	mustreload = true;	this.inmasterloadoperation = true;	} else {	mustreload = false;	}	try {	
forms designer loading in resource store 

protected override void saveinternal(openedfile file, system.io.stream stream) {	
forms designer save 

public virtual void mergeformchanges() {	sd.analyticsmonitor.trackfeature(typeof(formsdesignerviewcontent), "save");	if (this.hasloaderror || this.designsurface == null) {	
forms designer cannot merge form changes because the designer is not loaded successfully or not loaded at all 

public virtual void mergeformchanges() {	sd.analyticsmonitor.trackfeature(typeof(formsdesignerviewcontent), "save");	if (this.hasloaderror || this.designsurface == null) {	return;	} else if (this.designercodefile == null) {	throw new invalidoperationexception("cannot merge form changes without a designer code file.");	}	bool isdirty = this.designercodefile.isdirty;	
merging form changes 

public virtual void mergeformchanges() {	sd.analyticsmonitor.trackfeature(typeof(formsdesignerviewcontent), "save");	if (this.hasloaderror || this.designsurface == null) {	return;	} else if (this.designercodefile == null) {	throw new invalidoperationexception("cannot merge form changes without a designer code file.");	}	bool isdirty = this.designercodefile.isdirty;	designsurface.flush();	this.resourcestore.commitallresourcechanges();	
finished merging form changes 

========================= sharpdevelop sample_2886 =========================

public static bool isdotnetexecutable(string exename) {	try {	using (filestream f = new filestream(exename, filemode.open, fileaccess.read)) {	binaryreader r = new binaryreader(f);	f.position = 0x3c;	int peheaderstart = r.readint32();	f.position = peheaderstart;	if (r.readint32() != 0x00004550) {	
net detection failed invalid pe signature 

return false;	}	int optionalheaderstart = peheaderstart + 4 + 20;	f.position = optionalheaderstart;	int dotnetheaderoffset;	switch (r.readint16()) {	case 0x10b: dotnetheaderoffset = 208;	break;	case 0x20b: dotnetheaderoffset = 224;	break;	
net detection failed invalid pe magic number 

switch (r.readint16()) {	case 0x10b: dotnetheaderoffset = 208;	break;	case 0x20b: dotnetheaderoffset = 224;	break;	return false;	}	f.position = peheaderstart + 4 + 16;	ushort sizeofoptionalheader = r.readuint16();	if (sizeofoptionalheader < dotnetheaderoffset + 8) {	
net detection failed optional header too short this can t be a net image 

}	f.position = peheaderstart + 4 + 16;	ushort sizeofoptionalheader = r.readuint16();	if (sizeofoptionalheader < dotnetheaderoffset + 8) {	return false;	}	f.position = optionalheaderstart + dotnetheaderoffset;	uint cliheaderrva = r.readuint32();	uint cliheadersize = r.readuint32();	if (cliheaderrva == 0 || cliheadersize == 0) {	
net detection failed image has no cli header 

}	f.position = optionalheaderstart + dotnetheaderoffset;	uint cliheaderrva = r.readuint32();	uint cliheadersize = r.readuint32();	if (cliheaderrva == 0 || cliheadersize == 0) {	return false;	}	return true;	}	} catch (ioexception ex) {	
net detection failed 

uint cliheaderrva = r.readuint32();	uint cliheadersize = r.readuint32();	if (cliheaderrva == 0 || cliheadersize == 0) {	return false;	}	return true;	}	} catch (ioexception ex) {	return false;	} catch (argumentexception ex) {	
net detection failed 

public static bool runsas64bit(string exename) {	if (!environment.is64bitoperatingsystem) {	return false;	}	
bit autodetection for 

if (!environment.is64bitoperatingsystem) {	return false;	}	try {	using (filestream f = new filestream(exename, filemode.open, fileaccess.read)) {	binaryreader r = new binaryreader(f);	f.position = 0x3c;	int peheaderstart = r.readint32();	f.position = peheaderstart;	if (r.readint32() != 0x00004550) {	
bit detection failed invalid pe signature 

f.position = 0x3c;	int peheaderstart = r.readint32();	f.position = peheaderstart;	if (r.readint32() != 0x00004550) {	return false;	}	int optionalheaderstart = peheaderstart + 4 + 20;	f.position = optionalheaderstart;	switch (r.readint16()) {	case 0x10b: break;	
detected bit image using magic number 

int peheaderstart = r.readint32();	f.position = peheaderstart;	if (r.readint32() != 0x00004550) {	return false;	}	int optionalheaderstart = peheaderstart + 4 + 20;	f.position = optionalheaderstart;	switch (r.readint16()) {	case 0x10b: break;	return true;	
bit detection failed invalid pe magic number 

int optionalheaderstart = peheaderstart + 4 + 20;	f.position = optionalheaderstart;	switch (r.readint16()) {	case 0x10b: break;	return true;	return false;	}	f.position = peheaderstart + 4 + 16;	ushort sizeofoptionalheader = r.readuint16();	if (sizeofoptionalheader < 216) {	
bit detection failed optional header too short this can t be a net image 

ushort sizeofoptionalheader = r.readuint16();	if (sizeofoptionalheader < 216) {	return false;	}	f.position = peheaderstart + 4 + 2;	ushort numberofsections = r.readuint16();	f.position = optionalheaderstart + 208;	uint cliheaderrva = r.readuint32();	uint cliheadersize = r.readuint32();	if (cliheaderrva == 0 || cliheadersize == 0) {	
bit detection failed image has no cli header 

for (int i = 0; i < numberofsections; i++) {	f.position = optionalheaderstart + sizeofoptionalheader + 40 * i + 8;	uint virtualsize = r.readuint32();	uint virtualaddress = r.readuint32();	if (cliheaderrva >= virtualaddress && cliheaderrva < virtualaddress + virtualsize) {	uint pointertorawdata = r.readuint32();	uint cliheaderstart = pointertorawdata + (cliheaderrva - virtualaddress);	f.position = cliheaderstart + 16;	int runtimeflags = r.readint32();	if ((runtimeflags & 2) == 2) {	
bit detection detected flag 

uint virtualsize = r.readuint32();	uint virtualaddress = r.readuint32();	if (cliheaderrva >= virtualaddress && cliheaderrva < virtualaddress + virtualsize) {	uint pointertorawdata = r.readuint32();	uint cliheaderstart = pointertorawdata + (cliheaderrva - virtualaddress);	f.position = cliheaderstart + 16;	int runtimeflags = r.readint32();	if ((runtimeflags & 2) == 2) {	return false;	} else {	
bit detection detected anycpu file will run as bit process 

uint cliheaderstart = pointertorawdata + (cliheaderrva - virtualaddress);	f.position = cliheaderstart + 16;	int runtimeflags = r.readint32();	if ((runtimeflags & 2) == 2) {	return false;	} else {	return true;	}	}	}	
bit detection failed could not find section containing cli header 

if ((runtimeflags & 2) == 2) {	return false;	} else {	return true;	}	}	}	return false;	}	} catch (ioexception ex) {	
bit detection failed 

} else {	return true;	}	}	}	return false;	}	} catch (ioexception ex) {	return false;	} catch (argumentexception ex) {	
bit detection failed 

========================= sharpdevelop sample_2069 =========================

static void dispatcher_unhandledexception(object sender, system.windows.threading.dispatcherunhandledexceptioneventargs e) {	
unhandled wpf exception 

static void showerrorbox(object sender, threadexceptioneventargs e) {	
threadexception caught 

static void showerrorbox(object sender, unhandledexceptioneventargs e) {	exception ex = e.exceptionobject as exception;	
unhandledexception caught 

static void showerrorbox(object sender, unhandledexceptioneventargs e) {	exception ex = e.exceptionobject as exception;	
runtime is terminating because of unhandled exception 

static void showerrorbox(exception exception, string message, bool mustterminate) {	if (showingbox) return;	showingbox = true;	try {	if (exception != null) {	try {	sd.analyticsmonitor.trackexception(exception);	} catch (exception ex) {	
error tracking exception 

}	}	using (exceptionbox box = new exceptionbox(exception, message, mustterminate)) {	if (sd.mainthread.invokerequired) {	box.showdialog();	} else {	box.showdialog(sd.winforms.mainwin32window);	}	}	} catch (exception ex) {	
error showing exceptionbox 

static void starturl(string url) {	try {	process.start(url);	} catch (exception e) {	
cannot start 

========================= sharpdevelop sample_4672 =========================

public async void simplevoidmethod() {	
before 

public async void simplevoidmethod() {	await task.delay(timespan.fromseconds(1.0));	
after 

public async void voidmethodwithoutawait() {	
no await 

public async task simplevoidtaskmethod() {	
before 

public async task simplevoidtaskmethod() {	await task.delay(timespan.fromseconds(1.0));	
after 

public async task taskmethodwithoutawait() {	
no await 

public async task<bool> simplebooltaskmethod() {	
before 

public async task<bool> simplebooltaskmethod() {	await task.delay(timespan.fromseconds(1.0));	
after 

public async void twoawaitswithdifferentawaitertypes() {	
before 

public async void twoawaitswithdifferentawaitertypes() {	if (await this.simplebooltaskmethod()) {	await task.delay(timespan.fromseconds(1.0));	}	
after 

public async void awaitinloopcondition() {	while (await this.simplebooltaskmethod()) {	
body 

public async task taskmethodwithoutawaitbutwithexceptionhandling() {	try {	using (new stringwriter()) {	
no await 

public async task taskmethodwithoutawaitbutwithexceptionhandling() {	try {	using (new stringwriter()) {	}	}	catch (exception) {	
crash 

public async task awaitwithstack(task<int> task) {	
a 

public async task awaitwithstack2(task<int> task) {	if (await this.simplebooltaskmethod()) {	
a 

public async task awaitwithstack2(task<int> task) {	if (await this.simplebooltaskmethod()) {	}	else {	int num = 1;	
a 

========================= sharpdevelop sample_424 =========================

static void startcommandline(string cmd, string workingdir) {	
externalprocessdisplaybinding 

========================= sharpdevelop sample_4945 =========================

public static ienumerable<int> yieldreturnwithtryfinally() {	yield return 0;	try {	yield return 1;	} finally {	
finally 

public static ienumerable<string> yieldreturnwithnestedtryfinally(bool breakinmiddle) {	
start of method 

public static ienumerable<string> yieldreturnwithnestedtryfinally(bool breakinmiddle) {	yield return "start of method";	
start of method 

public static ienumerable<string> yieldreturnwithnestedtryfinally(bool breakinmiddle) {	yield return "start of method";	try {	
within outer try 

public static ienumerable<string> yieldreturnwithnestedtryfinally(bool breakinmiddle) {	yield return "start of method";	try {	yield return "within outer try";	
within outer try 

public static ienumerable<string> yieldreturnwithnestedtryfinally(bool breakinmiddle) {	yield return "start of method";	try {	yield return "within outer try";	try {	
within inner try 

public static ienumerable<string> yieldreturnwithnestedtryfinally(bool breakinmiddle) {	yield return "start of method";	try {	yield return "within outer try";	try {	yield return "within inner try";	
within inner try 

public static ienumerable<string> yieldreturnwithnestedtryfinally(bool breakinmiddle) {	yield return "start of method";	try {	yield return "within outer try";	try {	yield return "within inner try";	if (breakinmiddle) yield break;	
end of inner try 

public static ienumerable<string> yieldreturnwithnestedtryfinally(bool breakinmiddle) {	yield return "start of method";	try {	yield return "within outer try";	try {	yield return "within inner try";	if (breakinmiddle) yield break;	yield return "end of inner try";	
end of inner try 

public static ienumerable<string> yieldreturnwithnestedtryfinally(bool breakinmiddle) {	yield return "start of method";	try {	yield return "within outer try";	try {	yield return "within inner try";	if (breakinmiddle) yield break;	yield return "end of inner try";	} finally {	
inner finally 

public static ienumerable<string> yieldreturnwithnestedtryfinally(bool breakinmiddle) {	yield return "start of method";	try {	yield return "within outer try";	try {	yield return "within inner try";	if (breakinmiddle) yield break;	yield return "end of inner try";	} finally {	}	
end of outer try 

yield return "start of method";	try {	yield return "within outer try";	try {	yield return "within inner try";	if (breakinmiddle) yield break;	yield return "end of inner try";	} finally {	}	yield return "end of outer try";	
end of outer try 

try {	yield return "within outer try";	try {	yield return "within inner try";	if (breakinmiddle) yield break;	yield return "end of inner try";	} finally {	}	yield return "end of outer try";	} finally {	
outer finally 

yield return "within outer try";	try {	yield return "within inner try";	if (breakinmiddle) yield break;	yield return "end of inner try";	} finally {	}	yield return "end of outer try";	} finally {	}	
end of method 

try {	yield return "within inner try";	if (breakinmiddle) yield break;	yield return "end of inner try";	} finally {	}	yield return "end of outer try";	} finally {	}	yield return "end of method";	
end of method 

public static ienumerable<string> yieldreturnwithtwononnestedfinallyblocks(ienumerable<string> input) {	foreach (string line in input) {	try {	yield return line;	} finally {	
processed 

========================= sharpdevelop sample_441 =========================

public override object getservice(type servicetype) {	object service = base.getservice(servicetype);	if (service == null) {	
request missing service from assembly is not available 

public override object getservice(type servicetype) {	object service = base.getservice(servicetype);	if (service == null) {	} else {	
get service from assembly 

========================= sharpdevelop sample_2925 =========================

xmldocument xml = new xmldocument();	xml.load(file.fullname);	xmlnodelist n = xml.selectnodes("/querymanifest[@version=\"1.0\"]/catalogs/catalog");	foreach (xmlnode node in n) {	catalogs.add( new help3catalog(node.attributes["productid"].innertext, node.attributes["productversion"].innertext, node.attributes["productlocale"].innertext, node.attributes["productdisplayname"].innertext, node.selectsinglenode("catalogpath").innertext, node.selectsinglenode("contentpath").innertext, node.selectsinglenode("brandingpackagefilename").innertext) );	}	}	loggingservice.debug(string.format("helpviewer: {0} {1} loaded", catalogs.count, (catalogs.count == 1)?"catalog":"catalogs"));	}	catch (exception ex) {	
helpviewer 

public static void loadhelpconfiguration() {	string configfile = system.io.path.combine(propertyservice.configdirectory, "mshelpsystem.xml");	if (!file.exists(configfile)) {	return;	}	try {	xmlserializer serialize = new xmlserializer(typeof(help3configuration));	textreader file = new streamreader(configfile);	config = (help3configuration)serialize.deserialize(file);	file.close();	
helpviewer configuration successfully loaded 

if (!file.exists(configfile)) {	return;	}	try {	xmlserializer serialize = new xmlserializer(typeof(help3configuration));	textreader file = new streamreader(configfile);	config = (help3configuration)serialize.deserialize(file);	file.close();	}	catch (exception ex) {	
helpviewer 

public static void savehelpconfiguration() {	string configfile = system.io.path.combine(propertyservice.configdirectory, "mshelpsystem.xml");	try {	xmlserializer serialize = new xmlserializer(typeof(help3configuration));	textwriter file = new streamwriter(configfile);	serialize.serialize(file, config);	file.close();	
helpviewer configuration successfully saved 

public static void savehelpconfiguration() {	string configfile = system.io.path.combine(propertyservice.configdirectory, "mshelpsystem.xml");	try {	xmlserializer serialize = new xmlserializer(typeof(help3configuration));	textwriter file = new streamwriter(configfile);	serialize.serialize(file, config);	file.close();	}	catch (exception ex) {	
helpviewer 

static void oncatalogsupdated(eventargs e) {	
helpviewer oncatalogsupdated event raised 

static void oncatalogchanged(eventargs e) {	
helpviewer oncatalogchanged event raised 

static void onconfigurationupdated(eventargs e) {	
helpviewer onconfigurationupdated event raised 

========================= sharpdevelop sample_1719 =========================

public bool canattachto(iviewcontent content) {	itexteditorprovider p = content as itexteditorprovider;	if (p != null) {	try {	using (xmltextreader r = new xmltextreader(p.texteditor.document.createreader())) {	r.xmlresolver = null;	while (r.read() && r.nodetype != xmlnodetype.element);	return r.namespaceuri == "http: }	} catch (xmlexception e) {	
workflowdisplaybinding got exception 

========================= sharpdevelop sample_2932 =========================

protected override void generateiterationstatement(codeiterationstatement e) {	
codeiterationstatement 

protected override void generatethrowexceptionstatement(codethrowexceptionstatement e) {	
codethrowexceptionstatement 

protected override void generatecomment(codecomment e) {	
codecomment 

protected override void generatemethodreturnstatement(codemethodreturnstatement e) {	
codemethodreturnstatement 

protected override void generateconditionstatement(codeconditionstatement e) {	
generateconditionstatement 

protected override void generatetrycatchfinallystatement(codetrycatchfinallystatement e) {	
codetrycatchfinallystatement 

protected override void generateattacheventstatement(codeattacheventstatement e) {	
codeattacheventstatement 

protected override void generateremoveeventstatement(coderemoveeventstatement e) {	
coderemoveeventstatement 

protected override void generategotostatement(codegotostatement e) {	
codegotostatement 

protected override void generatelabeledstatement(codelabeledstatement e) {	
codelabeledstatement 

protected override void generatevariabledeclarationstatement(codevariabledeclarationstatement e) {	
codevariabledeclarationstatement 

protected override void generatelinepragmastart(codelinepragma e) {	
codelinepragma 

protected override void generatelinepragmaend(codelinepragma e) {	
codelinepragma 

protected override void generateevent(codememberevent e, codetypedeclaration c) {	
codememberevent 

protected override void generatesnippetmember(codesnippettypemember e) {	
codesnippettypemember 

protected override void generateentrypointmethod(codeentrypointmethod e, codetypedeclaration c) {	
codeentrypointmethod 

protected override void generateproperty(codememberproperty e, codetypedeclaration c) {	
codememberproperty 

protected override void generateconstructor(codeconstructor e, codetypedeclaration c) {	
codeconstructor 

protected override void generatetypeconstructor(codetypeconstructor e) {	
codetypeconstructor 

protected override void generatetypestart(codetypedeclaration e) {	
codetypedeclaration 

protected override void generatetypeend(codetypedeclaration e) {	
codetypedeclaration 

protected override void generatenamespacestart(codenamespace e) {	
codenamespacestart 

protected override void generatenamespaceend(codenamespace e) {	
codenamespaceend 

protected override void generatenamespaceimport(codenamespaceimport e) {	
codenamespaceimport 

protected override void generateattributedeclarationsstart(codeattributedeclarationcollection attributes) {	
codeattributedeclarationcollection 

protected override void generateattributedeclarationsend(codeattributedeclarationcollection attributes) {	
codeattributedeclarationcollection 

protected override void generateprimitiveexpression(codeprimitiveexpression e) {	if (e.value == null) {	
codeprimitiveexpression null 

========================= sharpdevelop sample_2906 =========================

public void writewarningline_showwarningmessage_messagewrittentoconsole() {	createhostuserinterface();	hostui.writewarningline("test");	
test 

public void writeverboseline_showverbosemessage_messagewrittentoconsole() {	createhostuserinterface();	hostui.writeverboseline("test");	
test 

public void writeerrorline_showerrormessage_messagewrittentoconsole() {	createhostuserinterface();	hostui.writeerrorline("test");	
test 

public void writedebugline_showmessage_messagewrittentoconsole() {	createhostuserinterface();	hostui.writedebugline("test");	
test 

========================= sharpdevelop sample_700 =========================

static bool isgeneratedresourceclass(itypedefinition type) {	var generatedcodeattributetype = type.compilation.findtype(typeof(system.codedom.compiler.generatedcodeattribute));	if (generatedcodeattributetype.kind == typekind.unknown) {	
could not find the class for system codedom compiler generatedcodeattribute 

========================= sharpdevelop sample_3203 =========================

public virtual void showexception(exception ex, string message) {	loggingservice.error(message, ex);	
stack trace of last exception log 

========================= sharpdevelop sample_4701 =========================

static traceutil() {	try {	textwritertracelistener mywriter = new textwritertracelistener(system.console.out);	trace.listeners.add(mywriter);	} catch (exception ex) {	
traceutil exception 

========================= sharpdevelop sample_58 =========================

string compare = string.empty;	int i = 0;	foreach (var element in collectionsource.sortedlist) {	collectionsource.fill(ric,element);	assert.that(((basedataitem)ric[0]).dbvalue,is.greaterthanorequalto(compare));	compare = ((basedataitem)ric[0]).dbvalue;	i++;	}	do {	collectionsource.fill(ric);	
first last 

public void groupbyonecolumnandfill () {	var dataitemscollection = createdataitems();	var reportsettings = new reportsettings();	reportsettings.groupcolumnscollection.add( new groupcolumn("groupitem",1,listsortdirection.ascending));	var collectionsource = new collectiondatasource (list,reportsettings);	collectionsource.bind();	int i = 0;	foreach (var element in collectionsource.groupedlist) {	
key 

collectionsource.bind();	int i = 0;	foreach (var element in collectionsource.groupedlist) {	foreach (var l in element) {	collectionsource.fill(dataitemscollection,l);	i++;	}	}	do {	collectionsource.fill(dataitemscollection);	
first last group randomint 

========================= sharpdevelop sample_1332 =========================

public void instance_exceptionthrownbyscriptsfactory_errormessageloggedtoconsole() {	createrunner();	solutionhaspackageinitializationscripts();	fakeconsolehost.isrunning = true;	fakescriptsfactory.exceptiontothrow = new exception("error");	opensolution();	
error 

========================= sharpdevelop sample_710 =========================

protected override void onselectionchanged(system.windows.controls.selectionchangedeventargs e) {	base.onselectionchanged(e);	if (editinglayout) return;	
chooselayoutcommand run 

========================= sharpdevelop sample_4624 =========================

protected void findclick(object sender, eventargs e) {	setbuttons(true);	_cancelled = false;	searchinvalidate(null);	
looking for 

========================= sharpdevelop sample_188 =========================

string name = node.attributes["name"].innertext;	category newcategory = new category(name);	foreach (xmlnode componentnode in node.childnodes) {	toolcomponent newtoolcomponent = new toolcomponent(componentnode.attributes["class"].innertext, (componentassembly)assemblies[int32.parse(componentnode.attributes["assembly"].innertext)], isenabled(componentnode.attributes["enabled"]));	newcategory.toolcomponents.add(newtoolcomponent);	}	categories.add(newcategory);	}	}	} catch (exception e) {	
componentlibraryloader loadtoolcomponentlibrary 

}	}	if (b == null) {	try {	stream imagestream = asm.getmanifestresourcestream(component.fullname + ".bmp");	if (imagestream != null) {	b = new bitmap(image.fromstream(imagestream));	b.maketransparent(color.fuchsia);	}	} catch (exception e) {	
componentlibraryloader geticon 

========================= sharpdevelop sample_2891 =========================

public toolboxservice() {	
create tolboxservice 

public toolboxitem deserializetoolboxitem(object serializedobject) {	
deserializetoolboxitem throw exception 

public toolboxitemcollection gettoolboxitems(string category) {	
ddddd 

public bool istoolboxitem(object serializedobject) {	
gggggg 

public bool istoolboxitem(object serializedobject, idesignerhost host) {	
toolbox istoolboxitem 

public void refresh() {	
toolbox refresh 

public void removecreator(string format, idesignerhost host) {	
toolbox removecreator 

public void removetoolboxitem(toolboxitem toolboxitem, string category) {	
removetoolboxitem 

public object serializetoolboxitem(toolboxitem toolboxitem) {	
nnnn 

========================= sharpdevelop sample_1559 =========================

public static void setfocustorememberedchild(uielement element) {	iinputelement focusedchild = getfocusedchild(element);	
restoring focus for to 

========================= sharpdevelop sample_5150 =========================

public unusedresourcekeysviewcontent(icollection<resourceitem> unusedkeys) {	
resourcetoolkit creating new unusedresourcekeysviewcontent 

protected static void deleteresourcekey(string filename, string key) {	try {	iresourcefilecontent content = resourcefilecontentregistry.getresourcefilecontent(filename);	if (content != null) {	if (content.containskey(key)) {	
resourcetoolkit remove key from resource file 

messageservice.showwarningformatted("${res:hornung.resourcetoolkit.keynotfoundwarning}", key, filename);	}	} else {	messageservice.showwarning("resouretoolkit: could not get resourcefilecontent for '"+filename+"' key +'"+key+"'.");	}	} catch (exception ex) {	messageservice.showwarningformatted("${res:hornung.resourcetoolkit.errorprocessingresourcefile}" + environment.newline + ex.message, filename);	return;	}	foreach (keyvaluepair<string, iresourcefilecontent> entry in resourcefilecontentregistry.getlocalizedcontents(filename)) {	
resourcetoolkit looking in localized resource file 

} else {	messageservice.showwarning("resouretoolkit: could not get resourcefilecontent for '"+filename+"' key +'"+key+"'.");	}	} catch (exception ex) {	messageservice.showwarningformatted("${res:hornung.resourcetoolkit.errorprocessingresourcefile}" + environment.newline + ex.message, filename);	return;	}	foreach (keyvaluepair<string, iresourcefilecontent> entry in resourcefilecontentregistry.getlocalizedcontents(filename)) {	try {	if (entry.value.containskey(key)) {	
resourcetoolkit key found removing 

========================= sharpdevelop sample_1579 =========================

return true;	}	}	commandwrapper commandwrapper;	if (keytable.trygetvalue(keypressed, out commandwrapper)) {	if (commandwrapper.commandid == menucommands.delete) {	if (!formdesigner.enabledelete) {	return false;	}	}	
run menu command 

========================= sharpdevelop sample_2885 =========================

public static void installaddins(list<string> disabled) {	if (!directory.exists(addininstalltemp)) return;	
addinmanager installaddins started 

addinname = addinname.trim();	if (addinname.length == 0) continue;	string targetdir = path.combine(useraddinpath, addinname);	if (!uninstalladdin(disabled, addinname, targetdir)) {	notremoved.add(addinname);	allok = false;	}	}	}	if (notremoved.count == 0) {	
deleting remove txt 

string targetdir = path.combine(useraddinpath, addinname);	if (!uninstalladdin(disabled, addinname, targetdir)) {	notremoved.add(addinname);	allok = false;	}	}	}	if (notremoved.count == 0) {	file.delete(removefile);	} else {	
rewriting remove txt 

} else {	using (streamwriter w = new streamwriter(removefile)) {	notremoved.foreach(w.writeline);	}	}	}	foreach (string sourcedir in directory.getdirectories(addininstalltemp)) {	string addinname = path.getfilename(sourcedir);	string targetdir = path.combine(useraddinpath, addinname);	if (notremoved.contains(addinname)) {	
skipping installation of because deinstallation failed 

}	}	}	foreach (string sourcedir in directory.getdirectories(addininstalltemp)) {	string addinname = path.getfilename(sourcedir);	string targetdir = path.combine(useraddinpath, addinname);	if (notremoved.contains(addinname)) {	continue;	}	if (uninstalladdin(disabled, addinname, targetdir)) {	
installing 

if (uninstalladdin(disabled, addinname, targetdir)) {	directory.move(sourcedir, targetdir);	} else {	allok = false;	}	}	if (allok) {	try {	directory.delete(addininstalltemp, false);	} catch (exception ex) {	
error removing install temp 

} else {	allok = false;	}	}	if (allok) {	try {	directory.delete(addininstalltemp, false);	} catch (exception ex) {	}	}	
addinmanager installaddins finished 

static bool uninstalladdin(list<string> disabled, string addinname, string targetdir) {	if (directory.exists(targetdir)) {	
removing 

========================= sharpdevelop sample_4503 =========================

public idisposable subscribe(iobserver<searchedfile> observer) {	
parallel findall starting 

public idisposable subscribe(iobserver<searchedfile> observer) {	var task = task.factory.startnew( delegate {	var list = filelist.tolist();	throwifcancellationrequested();	searchparallel(list, observer);	}, taskcreationoptions.longrunning);	task.continuewith( t => {	
parallel findall finished with error successfully 

========================= sharpdevelop sample_615 =========================

public void load() {	string currentlanguage = service.currentlanguage;	string logmessage = "loading resources " + baseresourcename + "." + currentlanguage + ": ";	resourcemanager manager = null;	if (assembly.getmanifestresourceinfo(baseresourcename + "." + currentlanguage + ".resources") != null) {	
loading from main assembly 

public void load() {	string currentlanguage = service.currentlanguage;	string logmessage = "loading resources " + baseresourcename + "." + currentlanguage + ": ";	resourcemanager manager = null;	if (assembly.getmanifestresourceinfo(baseresourcename + "." + currentlanguage + ".resources") != null) {	manager = new resourcemanager(baseresourcename + "." + currentlanguage, assembly);	} else if (currentlanguage.indexof('-') > 0 && assembly.getmanifestresourceinfo(baseresourcename + "." + currentlanguage.split('-')[0] + ".resources") != null) {	
loading from main assembly no country match 

manager = new resourcemanager(baseresourcename + "." + currentlanguage, assembly);	} else if (currentlanguage.indexof('-') > 0 && assembly.getmanifestresourceinfo(baseresourcename + "." + currentlanguage.split('-')[0] + ".resources") != null) {	manager = new resourcemanager(baseresourcename + "." + currentlanguage.split('-')[0], assembly);	} else {	manager = trysatellite(currentlanguage);	if (manager == null && currentlanguage.indexof('-') > 0) {	manager = trysatellite(currentlanguage.split('-')[0]);	}	}	if (manager == null) {	
not found 

========================= sharpdevelop sample_4552 =========================

static void runapplication() {	#if debug try {	console.outputencoding = system.text.encoding.default;	} catch (ioexception) {	}	
starting sharpdevelop 

startup.addaddinsfromdirectory(path.combine(startup.applicationrootpath, "addins"));	foreach (string parameter in splashscreenform.getparameterlist()) {	if (parameter.startswith("addindir:", stringcomparison.ordinalignorecase)) {	startup.addaddinsfromdirectory(parameter.substring(9));	}	}	sharpdevelophost host = new sharpdevelophost(appdomain.currentdomain, startup);	string[] filelist = splashscreenform.getrequestedfilelist();	if (filelist.length > 0) {	if (loadfilesinpreviousinstance(filelist)) {	
aborting startup arguments will be handled by previous instance 

}	};	workbenchsettings workbenchsettings = new workbenchsettings();	workbenchsettings.runonnewthread = false;	for (int i = 0; i < filelist.length; i++) {	workbenchsettings.initialfilelist.add(filelist[i]);	}	sdtracelistener.install();	host.runworkbench(workbenchsettings);	} finally {	
leaving runapplication 

========================= sharpdevelop sample_4671 =========================

public static extern bool lockwindowupdate(intptr hwndlock);	#endregion private intptr hookhandler( intptr hwnd, int msg, intptr wparam, intptr lparam, ref bool handled ) {	handled = false;	switch (msg) {	case sc_move: case wm_windowposchanging: safefireevent<eventargs>(windowposchanging, eventargs.empty);	break;	case wm_mouseactivate: {	canceleventargs args = new canceleventargs();	safefireevent<canceleventargs>(windowactivating, args);	if (args.cancel) {	
cancelled 

}	break;	case wm_activate: {	if (((int)wparam & 0xffff) != wa_inactive) {	canceleventargs args = new canceleventargs();	safefireevent<canceleventargs>(windowactivating, args);	if (args.cancel) {	if (lparam != intptr.zero) {	setactivewindow(lparam);	}	
cancelled activation 

========================= sharpdevelop sample_536 =========================

protected static void checkautoinvoke(type type, arraylist outmembers, string starttype, string[] props) {	memberinfo[] memberstype = new memberinfo[props.length + 1];	if (type.name.equals(starttype)) {	memberinfo member = loadautoinvoketypes(outmembers, memberstype, props, 0);	if (member == null) return;	memberstype[memberstype.length - 1] = type;	_autoinvokehash.add(member, memberstype);	
classcache found match for 

========================= sharpdevelop sample_68 =========================

runner.verbose = addinoptions.verbose;	runner.workingdirectory = workingdirectory;	runner.quiet = addinoptions.quiet;	runner.showlogo = addinoptions.showlogo;	runner.debugmode = addinoptions.debugmode;	if (debug) {	runner.arguments = string.concat("-d:debug=true ", addinoptions.nantarguments, " ", args, " ", target);	} else {	runner.arguments = string.concat(addinoptions.nantarguments, " ", args, " ", target);	}	
running nant 

protected void stopbuild() {	if (isbuildrunning) {	if (messageservice.askquestion(stringparser.parse("this will terminate the nant process.  are you sure?"))) {	runner.stop();	
nant build stopped 

========================= sharpdevelop sample_39 =========================

public iviewcontent openfile(filename filename, bool switchtoopenedview) {	if (filename == null) throw new argumentnullexception("filename");	
open file 

if (defaultname == null) throw new argumentnullexception("defaultname");	if (content == null) throw new argumentnullexception("content");	var displaybindingservice = sd.displaybindingservice;	idisplaybinding binding = displaybindingservice.getbindingperfilename(filename.create(defaultname));	if (binding == null) {	binding = new errorfallbackbinding("can't create display binding for file " + defaultname);	}	openedfile file = createuntitledopenedfile(defaultname, content);	iviewcontent newcontent = binding.createcontentforfile(file);	if (newcontent == null) {	
created view content was null defaultname 

public iviewcontent jumptofileposition(filename filename, int line, int column) {	
fileservice jumping to file position x 

navigationservice.resumelogging();	loggingresumed = true;	positionable.jumpto(math.max(1, line), math.max(1, column));	} else {	navigationservice.resumelogging();	loggingresumed = true;	navigationservice.log(content);	}	return content;	} finally {	
fileservice jumped to file position x 

========================= sharpdevelop sample_4614 =========================

registerassembly(asm);	return asm;	}	} catch (notsupportedexception) {	}	}	string hash = gethash(filename);	lock (assemblydict) {	assembly asm;	if (assemblydict.trygetvalue(hash, out asm)) return asm;	
loading assembly hash 

}	}	string hash = gethash(filename);	lock (assemblydict) {	assembly asm;	if (assemblydict.trygetvalue(hash, out asm)) return asm;	try {	asm = assembly.load(file.readallbytes(filename));	} catch (badimageformatexception e) {	if (e.message.contains("hresult: 0x8013141d")) {	
get hresult loading netmodule 

asm = assembly.load(asm_data);	asm.loadmodule(path.getfilename(filename), file.readallbytes(filename));	}	} catch (exception ex) {	messageservice.showexception(ex, "error calling linker for netmodule");	}	try {	file.delete(temppath);	} catch {}	} else {	
error loading assembly 

try {	file.delete(temppath);	} catch {}	} else {	sd.workbench.getpad(typeof(compilermessageview)).bringpadtofront();	taskservice.buildmessageviewcategory.appendtext( stringparser.parse("${res:fileutilityservice.errorwhileloading}") + "\r\n" + filename + "\r\n" + e.message + "\r\n" );	return null;	}	} catch (fileloadexception e) {	if (e.message.contains("hresult: 0x80131402")) {	
get hresult loading mixed modes asm from disk 

try {	file.copy(pdbpath, newpdbpath);	markfiletodeleteonreboot(newpdbpath);	} catch {	}	}	asm = assembly.loadfile(temppath);	markfiletodeleteonreboot(temppath);	} else if (e.message.contains("hresult: 0x80131019")) {	loggingservice.debug(e.message);	
attempting to load unverifiable assembly ignoring 

}	if (ignorecase) {	type cachedtype;	if (typecacheignorecase.trygetvalue(name, out cachedtype)) return cachedtype;	} else {	type cachedtype;	if (typecache.trygetvalue(name, out cachedtype)) return cachedtype;	}	#if debug if (!name.startswith("system.", stringcomparison.ordinal)) {	count++;	
typeresolutionservice looking for 

public void referenceassembly(assemblyname name) {	
todo add assembly reference 

static assembly assemblyresolveeventhandler(object sender, resolveeventargs args) {	
typeresolutionservice assemblyresolveeventhandler 

return asm;	}	}	foreach (assembly asm in appdomain.currentdomain.getassemblies()) {	if (asm.fullname == args.name) {	lastassembly = asm;	}	}	if (lastassembly != null) {	typeresolutionservice.designerassemblies.add(lastassembly);	
icsharpassemblyresolver found 

========================= sharpdevelop sample_4946 =========================

public system.resources.iresourcewriter getresourcewriter(cultureinfo info) {	try {	
resourcewriter requested for culture 

public system.resources.iresourcereader getresourcereader(system.globalization.cultureinfo info) {	try {	
resourcereader requested for culture 

========================= sharpdevelop sample_2926 =========================

public static void copydirectory(string directoryname, directorynode node, bool includeinproject) {	directoryname = fileutility.normalizepath(directoryname);	string copiedfilename = path.combine(node.directory, path.getfilename(directoryname));	
copy to 

public static void copydirectory(string directoryname, directorynode node, bool includeinproject) {	directoryname = fileutility.normalizepath(directoryname);	string copiedfilename = path.combine(node.directory, path.getfilename(directoryname));	if (!fileutility.isequalfilename(directoryname, copiedfilename)) {	if (includeinproject && projectservice.opensolution != null) {	foreach (iproject project in projectservice.opensolution.projects) {	if (!fileutility.isbasedirectory(project.directory, directoryname)) continue;	
searching for child items in 

foreach (iproject project in projectservice.opensolution.projects) {	if (!fileutility.isbasedirectory(project.directory, directoryname)) continue;	foreach (projectitem item in project.items) {	fileprojectitem fileitem = item as fileprojectitem;	if (fileitem == null) continue;	string virtualfullname = path.combine(project.directory, fileitem.virtualname);	if (fileutility.isbasedirectory(directoryname, virtualfullname)) {	if (item.itemtype == itemtype.folder && fileutility.isequalfilename(directoryname, virtualfullname)) {	continue;	}	
found file 

========================= sharpdevelop sample_5202 =========================

public void handleerror(builderror error) {	
fxcoplogger got 

========================= sharpdevelop sample_1848 =========================

string outputname = path + '\\' + entry.key.tostring();	if (entry.value is icon) {	extension = ".ico";	if (!directory.exists(path)) directory.createdirectory(path);	((icon)entry.value).save(file.create(outputname + extension));	} else if (entry.value is image) {	extension = ".png";	if (!directory.exists(path)) directory.createdirectory(path);	((image)entry.value).save(outputname + extension, imageformat.png);	} else {	
can t save unknown format 

linenr++;	if (line == null) {	break;	}	line = line.trim();	if (line.length == 0 || line[0] == '#') {	continue;	}	int idx = line.indexof('=');	if (idx < 0) {	
error in file at line 

entryval = tmp.tostring();	} else {	entryval = loadresource(val);	}	rw.addresource(key, entryval);	}	rw.generate();	rw.close();	reader.close();	} catch (exception e) {	
error in line 

entryval = tmp.tostring();	} else {	entryval = loadresource(val);	}	rw.addresource(key, entryval);	}	rw.generate();	rw.close();	reader.close();	} catch (exception e) {	
error while processing 

static void showinfo() {	
this tool converts resource or resx files to an own format it helps to 

static void showinfo() {	
port these files to a new net version 

static void showinfo() {	
it can also be used as a resource assembler 

static void showinfo() {	
input format of the text file 

static void showinfo() {	
comment 

static void showinfo() {	console.writeline("               <key>=<value>\n");	
value can be 

static void showinfo() {	console.writeline("               <key>=<value>\n");	console.writeline("                     <value> = \"<stringvalue>\"");	
or 

static void showinfo() {	console.writeline("               <key>=<value>\n");	console.writeline("                     <value> = \"<stringvalue>\"");	console.writeline("                     <value> = <filename>\n");	
the file can be a bitmap icon cursor or serialized object otherwise 

static void showinfo() {	console.writeline("               <key>=<value>\n");	console.writeline("                     <value> = \"<stringvalue>\"");	console.writeline("                     <value> = <filename>\n");	
the file will be interpreted as an byte array 

static void showhelp() {	
net resource assembler version 

static void showhelp() {	
copyright c mike krueger released under gpl 

static void showhelp() {	
resource assembler options 

static void showhelp() {	
input files 

static void showhelp() {	
d wildcard disassembles the resource or resx files and generates 

static void showhelp() {	
res files 

static void showhelp() {	
help 

static void showhelp() {	
displays this help 

static void showhelp() {	
info gives additional information about resasm 

========================= sharpdevelop sample_369 =========================

public void addservicereference() {	compilermessageview.instance.bringtofront();	uri uri = getserviceuri();	if (uri == null) return;	try {	servicegenerator.options.servicename = defaultnamespace;	servicegenerator.options.url = uri.tostring();	servicegenerator.addservicereference();	} catch (exception ex) {	
failed to add service reference 

========================= sharpdevelop sample_5313 =========================

public virtual void convertcontentdefinition(codemembermethod method, textwriter writer) {	
generate code for 

public void convertcontentdefinition(codememberfield field, textwriter writer) {	
generate field declaration for 

========================= sharpdevelop sample_2903 =========================

public dockingmanager() {	
dockingmanager ctr 

========================= sharpdevelop sample_513 =========================

previous = node;	}	}	foreach (node node in allnodes) {	if (!string.isnullorempty(node.codon.insertbefore)) {	foreach (string beforereference in node.codon.insertbefore.split(',')) {	node referencednode;	if (nametonodedict.trygetvalue(beforereference, out referencednode)) {	referencednode.previous.add(node);	} else {	
codon specified in the insertbefore of the codon does not exist 

} else {	}	}	}	if (!string.isnullorempty(node.codon.insertafter)) {	foreach (string afterreference in node.codon.insertafter.split(',')) {	node referencednode;	if (nametonodedict.trygetvalue(afterreference, out referencednode)) {	node.previous.add(referencednode);	} else {	
codon specified in the insertafter of the codon does not exist 

========================= sharpdevelop sample_4502 =========================

public override bool saveoptions() {	try {	viewmodel.save();	return true;	} catch (exception ex) {	
unable to save nuget config changes 

========================= sharpdevelop sample_956 =========================

#if debug console.writeline(file.readalltext(reallogfile));	#endif xmldocument doc = new xmldocument();	doc.load(reallogfile);	foreach (xmlnode node in doc.documentelement.selectnodes(". xmlelement el = node as xmlelement;	if (el == null) continue;	result = false;	string checkid = el.getattribute("checkid");	string keyword = el.getattribute("keyword");	string message = el["exceptionmessage"].innertext;	if (checkid.length > 0) {	
category target 

========================= sharpdevelop sample_595 =========================

public void storememento(iviewcontent viewcontent) {	imementocapable mementocapable = viewcontent.getservice<imementocapable>();	if (mementocapable != null && loaddocumentproperties) {	if (viewcontent.primaryfilename == null) return;	string key = getmementokeyname(viewcontent);	
saving memento of to key 

========================= sharpdevelop sample_4615 =========================

static loadedassembly tryreadfromcache(string cachefilename, datetime lastwritetime) {	if (cachefilename == null || !file.exists(cachefilename)) return null;	try {	using (filestream fs = new filestream(cachefilename, filemode.open, fileaccess.read, fileshare.read | fileshare.delete, 4096, fileoptions.sequentialscan)) {	using (binaryreader reader = new binaryreaderwith7bitencodedints(fs)) {	if (reader.readint64() != lastwritetime.ticks) {	
timestamp mismatch deserialization aborted 

========================= sharpdevelop sample_4584 =========================

static string outputtypetoconfigurationtype(outputtype outputtype) {	switch (outputtype) {	case icsharpcode.sharpdevelop.project.outputtype.exe: return "application";	case icsharpcode.sharpdevelop.project.outputtype.library: return "dynamiclibrary";	
netmodule output not supported will produce a class library 

static outputtype configurationtypetooutputtype(string configurationtype, string subsystem) {	if ("application" == configurationtype && "windows" != subsystem) return icsharpcode.sharpdevelop.project.outputtype.exe;	else if ("application" == configurationtype && "windows" == subsystem) return icsharpcode.sharpdevelop.project.outputtype.winexe;	else if ("dynamiclibrary" == configurationtype) return icsharpcode.sharpdevelop.project.outputtype.library;	
configurationtype is not supported will use library output type 

========================= sharpdevelop sample_3978 =========================

public void addcreator(toolboxitemcreatorcallback creator, string format, idesignerhost host) {	
defaulttoolboxservice addcreator 

public toolboxitem deserializetoolboxitem(object serializedobject, idesignerhost host) {	
deserializetoolboxitem host 

loggingservice.warn(item.typename);	return item;	}	}	list = (arraylist)toolboxbyhost[all_hosts];	if (list != null && list.contains(item)) {	return item;	}	}	}	
deserializetoolboxitem host return null 

public toolboxitemcollection gettoolboxitems() {	
toolboxservice gettoolboxitems 

public toolboxitemcollection gettoolboxitems(string category) {	
toolboxservice gettoolboxitems category 

public toolboxitemcollection gettoolboxitems(string category, idesignerhost host) {	
toolboxservice gettoolboxitems category host 

========================= sharpdevelop sample_2927 =========================

protected override void logeventsfromtextoutput(string singleline, messageimportance messageimportance) {	compilererror error = parseline(singleline);	if (error != null) {	if (error.iswarning) {	log.logwarning("warning", error.errornumber, null, error.filename, error.line, error.column, error.line, error.column, error.errortext);	} else {	
error 

========================= sharpdevelop sample_279 =========================

public override void run() {	abstractprojectbrowsertreenode node = owner as abstractprojectbrowsertreenode;	iproject project = (node != null) ? node.project : projectservice.currentproject;	if (project == null) {	return;	}	
show add reference dialog for 

========================= sharpdevelop sample_5203 =========================

public virtual void generatecodefromcodedom(system.codedom.codecompileunit compileunit, textwriter writer) {	var provider = this.createcodedomprovider();	if (provider != null) {	var options = new system.codedom.compiler.codegeneratoroptions();	options.blanklinesbetweenmembers = ambienceservice.codegenerationproperties.get("blanklinesbetweenmembers", true);	options.bracingstyle             = ambienceservice.codegenerationproperties.get("startblockonsameline", true) ? "block" : "c";	options.elseonclosing            = ambienceservice.codegenerationproperties.get("elseonclosing", true);	options.indentstring = sd.editorcontrolservice.globaloptions.indentationstring;	provider.generatecodefromcompileunit(compileunit, writer, options);	} else {	
no codedom provider was found for this language 

========================= sharpdevelop sample_5110 =========================

smalllist.images.add(sd.resourceservice.getbitmap("icons.32x32.emptyprojecticon"));	imglist.images.add(sd.resourceservice.getbitmap("icons.32x32.emptyprojecticon"));	int i = 0;	foreach (iimage icon in icons.keys.toarray()) {	bitmap bitmap = icon.bitmap;	if (bitmap != null) {	smalllist.images.add(bitmap);	imglist.images.add(bitmap);	icons[icon] = ++i;	} else {	
newprojectdialog can t load bitmap using default 

========================= sharpdevelop sample_5246 =========================

public void trycatchfinally() {	try {	
try 

public void trycatchfinally() {	try {	}	catch (exception ex) {	console.writeline(ex.message);	}	finally {	
finally 

public void trycatchmultiplehandlers() {	try {	
try 

public void trycatchmultiplehandlers() {	try {	}	catch (invalidoperationexception ex) {	console.writeline(ex.message);	}	catch (exception ex2) {	console.writeline(ex2.message);	}	catch {	
other 

========================= sharpdevelop sample_432 =========================

public virtual void savetodisk() {	if (isuntitled) throw new invalidoperationexception("cannot save an untitled file to disk!");	
save 

========================= sharpdevelop sample_4936 =========================

public void writeformatheader(solutionformatversion version) {	writer.writeline();	
microsoft visual studio solution file format version 

public void writeformatheader(solutionformatversion version) {	writer.writeline();	switch (version) {	
visual studio 

public void writeformatheader(solutionformatversion version) {	writer.writeline();	switch (version) {	break;	
visual studio 

public void writeformatheader(solutionformatversion version) {	writer.writeline();	switch (version) {	break;	break;	
visual studio 

public void writeformatheader(solutionformatversion version) {	writer.writeline();	switch (version) {	break;	break;	break;	
visual studio 

public void writeformatheader(solutionformatversion version) {	writer.writeline();	switch (version) {	break;	break;	break;	break;	}	
sharpdevelop 

public void writeprojectsection(solutionsection section) {	if (section.count != 0) {	writer.writeline("\tprojectsection({0}) = {1}", section.sectionname, section.sectiontype);	writesectionentries(section);	
endprojectsection 

public void writeglobalsection(solutionsection section) {	if (section.count != 0) {	writer.writeline("\tglobalsection({0}) = {1}", section.sectionname, section.sectiontype);	writesectionentries(section);	
endglobalsection 

isolutionfolder folder = item as isolutionfolder;	iproject project = item as iproject;	if (folder != null) {	writeprojectheader(projecttypeguids.solutionfolder, folder.name, folder.name, folder.idguid);	solutionsection section = new solutionsection("solutionitems", "preproject");	foreach (var file in folder.items.oftype<isolutionfileitem>()) {	string location = fileutility.getrelativepath(basepath, file.filename);	section.add(location, location);	}	writeprojectsection(section);	
endproject 

string location = fileutility.getrelativepath(basepath, file.filename);	section.add(location, location);	}	writeprojectsection(section);	} else if (project != null) {	string location = fileutility.getrelativepath(basepath, project.filename);	writeprojectheader(project.typeguid, project.name, location, project.idguid);	foreach (var section in project.projectsections) {	writeprojectsection(section);	}	
endproject 

public void writeglobalsections(isolution solution) {	
global 

public void writeglobalsections(isolution solution) {	writeglobalsection(generatesolutionconfigurationsection(solution));	writeglobalsection(generateprojectconfigurationsection(solution));	foreach (var section in solution.globalsections) {	writeglobalsection(section);	}	writeglobalsection(generatenestingsection(solution));	
endglobal 

========================= sharpdevelop sample_4590 =========================

public override void onapplytemplate() {	var resizer = gettemplatechild("part_resizer") as resizer;	if (resizer != null) resizer.dragstarted += (s, e) => {	isresizing = true;	showresizeroverlaywindow(s as resizer);	
resizer dragstarted rect 

}	break;	case anchorstyle.top: case anchorstyle.bottom: {	double newtop = _initialstartpoint.y + e.verticalchange;	newtop = math.max(newtop, 0.0);	newtop = math.min(newtop, maxheight);	canvas.settop(_resizerghost, newtop);	}	break;	}	
resizer dragdelta rect 

double newheight = maxheight - canvas.gettop(_resizerghost);	top -= newheight - height;	height = newheight;	applyregion(new rect(0, 0, this.width, this.height));	}	break;	}	isresizing = false;	saveflyoutsizetocontent();	hideresizeroverlaywindow();	
resizer dragcompleted rect 

========================= sharpdevelop sample_546 =========================

public void initsharpdevelopcore(sharpdevelophost.callbackhelper callback, startupsettings properties) {	var container = new sharpdevelopservicecontainer();	container.addfallbackprovider(servicesingleton.fallbackserviceprovider);	container.addservice(typeof(imessageservice), new sdmessageservice());	container.addservice(typeof(iloggingservice), new log4netloggingservice());	servicesingleton.serviceprovider = container;	
initsharpdevelop 

var propertyservice = new propertyservice( directoryname.create(configdirectory), directoryname.create(datadirectory ?? path.combine(fileutility.applicationrootpath, "data")), propertiesname);	startup.startcoreservices(propertyservice);	assembly exe = assembly.load(properties.resourceassemblyname);	sd.resourceservice.registerneutralstrings(new resourcemanager("icsharpcode.sharpdevelop.resources.stringresources", exe));	sd.resourceservice.registerneutralimages(new resourcemanager("icsharpcode.sharpdevelop.resources.bitmapresources", exe));	commandwrapper.linkcommandcreator = (link => new linkcommand(link));	commandwrapper.wellknowncommandcreator = core.presentation.menuservice.getknowncommand;	commandwrapper.registerconditionrequerysuggestedhandler = (eh => commandmanager.requerysuggested += eh);	commandwrapper.unregisterconditionrequerysuggestedhandler = (eh => commandmanager.requerysuggested -= eh);	stringparser.registerstringtagprovider(new sharpdevelopstringtagprovider());	
looking for addins 

}	foreach (string dir in properties.addindirectories) {	startup.addaddinsfromdirectory(dir);	}	if (properties.allowaddinconfigurationandexternaladdins) {	startup.configureexternaladdins(path.combine(configdirectory, "addins.xml"));	}	if (properties.allowuseraddins) {	startup.configureuseraddins(path.combine(configdirectory, "addininstalltemp"), path.combine(configdirectory, "addins"));	}	
loading addintree 

startup.configureuseraddins(path.combine(configdirectory, "addininstalltemp"), path.combine(configdirectory, "addins"));	}	startup.runinitialization();	((assemblyparserservice)sd.assemblyparserservice).dompersistencepath = properties.dompersistencepath;	project.projectservice.buildstarted   += delegate { this.callback.startbuild(); };	project.projectservice.buildfinished  += delegate { this.callback.endbuild(); };	project.projectservice.solutionloaded += delegate { this.callback.solutionloaded(); };	project.projectservice.solutionclosed += delegate { this.callback.solutionclosed(); };	fileutility.fileloaded += delegate(object sender, filenameeventargs e) { this.callback.fileloaded(e.filename); };	fileutility.filesaved  += delegate(object sender, filenameeventargs e) { this.callback.filesaved(e.filename); };	
initsharpdevelop finished 

========================= sharpdevelop sample_4573 =========================

public void start(processstartinfo info) {	if (info == null) throw new argumentnullexception("info");	process.startinfo = info;	
workerprocess starting 

info.arguments += " " + hosttoworkerpipe.getclienthandleasstring() + " " + workertohostpipe.getclienthandleasstring();	if (!process.start()) throw new invalidoperationexception("process.start() failed");	} finally {	info.arguments = oldarguments;	hosttoworkerpipe.disposelocalcopyofclienthandle();	workertohostpipe.disposelocalcopyofclienthandle();	}	id = process.id;	readerthread.start();	this.writer = new binarywriter(hosttoworkerpipe);	
workerprocess started 

public void dispose() {	isdisposed = true;	
telling worker process to exit 

public void dispose() {	isdisposed = true;	hosttoworkerpipe.dispose();	if (thread.currentthread != readerthread) {	
waiting for thread join 

public void dispose() {	isdisposed = true;	hosttoworkerpipe.dispose();	if (thread.currentthread != readerthread) {	if (!readerthread.join(3000)) {	
thread join failed killing worker process 

public void dispose() {	isdisposed = true;	hosttoworkerpipe.dispose();	if (thread.currentthread != readerthread) {	if (!readerthread.join(3000)) {	kill();	
waiting for thread join 

public void dispose() {	isdisposed = true;	hosttoworkerpipe.dispose();	if (thread.currentthread != readerthread) {	if (!readerthread.join(3000)) {	kill();	readerthread.join();	}	
joined 

========================= sharpdevelop sample_4611 =========================

public override bool saveoptions() {	try {	var viewmodel = datacontext as packagemanagementoptionsviewmodel;	viewmodel.saveoptions();	return true;	} catch (exception ex) {	
unable to save nuget config changes 

========================= sharpdevelop sample_1051 =========================

public static system.drawing.rectangle validate(system.drawing.rectangle bounds) {	
number of screens 

public static system.drawing.rectangle validate(system.drawing.rectangle bounds) {	foreach (var screen in screen.allscreens) {	var rect = system.drawing.rectangle.intersect(bounds, screen.workingarea);	
screen validating intersection 

public static system.drawing.rectangle validate(system.drawing.rectangle bounds) {	foreach (var screen in screen.allscreens) {	var rect = system.drawing.rectangle.intersect(bounds, screen.workingarea);	if (rect.width > 10 && rect.height > 10) return bounds;	}	
validating center on screen 

========================= sharpdevelop sample_5151 =========================

public type gettype(string name, bool throwonerror, bool ignorecase) {	if (name == null || name.length == 0) {	return null;	}	#if debug if (!name.startswith("system.",stringcomparison.invariantcultureignorecase)) {	
typeresolutionservice looking for 

public void referenceassembly(assemblyname name) {	
todo add assembly reference 

========================= sharpdevelop sample_1558 =========================

public override void writeto(itextoutput output) {	
try 

public override void writeto(itextoutput output) {	output.indent();	tryblock.writeto(output);	output.unindent();	output.writeline("}");	foreach (catchblock block in catchblocks) {	block.writeto(output);	}	if (faultblock != null) {	
fault 

foreach (catchblock block in catchblocks) {	block.writeto(output);	}	if (faultblock != null) {	output.indent();	faultblock.writeto(output);	output.unindent();	output.writeline("}");	}	if (finallyblock != null) {	
finally 

public override void writeto(itextoutput output) {	output.write("if (");	condition.writeto(output);	output.writeline(") {");	output.indent();	trueblock.writeto(output);	output.unindent();	output.write("}");	if (falseblock != null) {	
else 

public override void writeto(itextoutput output) {	if (this.values != null) {	foreach (int i in this.values) {	
case 

public override void writeto(itextoutput output) {	if (this.values != null) {	foreach (int i in this.values) {	}	} else {	
default 

========================= sharpdevelop sample_468 =========================

static void main(string[] args) {	while (true) {	random r = new random();	
running 

static void main(string[] args) {	while (true) {	random r = new random();	thread.sleep(100);	for (int i = 0; i < r.next(1, 200); i++) {	
i 

========================= sharpdevelop sample_2064 =========================

static void run(object state) {	
git overlayiconmanager thread started 

static void run(object state) {	thread.sleep(100);	while (true) {	if (sd.parserservice.loadsolutionprojectsthread.isrunning) {	thread.sleep(100);	}	abstractprojectbrowsertreenode node;	lock (queue) {	if (queue.count == 0) {	
git overlayiconmanager thread finished 

========================= sharpdevelop sample_3248 =========================

public resourceresolveresult resolve(string filename, idocument document, int caretline, int caretcolumn, char? chartyped) {	if (filename == null || document == null) {	
resourcetoolkit resolve called with null filename or document argument 

public resourceresolveresult resolve(string filename, idocument document, int caretline, int caretcolumn, char? chartyped) {	if (filename == null || document == null) {	return null;	}	if (caretline < 0 || caretcolumn < 0 || caretline >= document.totalnumberoflines || caretcolumn >= document.getline(caretline + 1).totallength) {	
resourcetoolkit resolve called with invalid position arguments 

========================= sharpdevelop sample_1621 =========================

protected override void onmousemove(system.windows.input.mouseeventargs e) {	base.onmousemove(e);	var point = e.getposition(this);	
posiion 

========================= sharpdevelop sample_1980 =========================

public int run(string[] args) {	this.parsecommandline(args);	if (this.showlogo) {	assembly me = assembly.getexecutingassembly();	
help registration utility v 

public int run(string[] args) {	this.parsecommandline(args);	if (this.showlogo) {	assembly me = assembly.getexecutingassembly();	
copyright c mathias simmack all rights reserved 

public int run(string[] args) {	this.parsecommandline(args);	if (this.showlogo) {	assembly me = assembly.getexecutingassembly();	console.writeline();	}	if (this.showhelp || args.length == 0) {	assembly me = assembly.getexecutingassembly();	
registertoolcommandlineoptions 

}	if (this.showhelp || args.length == 0) {	assembly me = assembly.getexecutingassembly();	return (this.errorcodes)?1:0;	}	if (!applicationhelpers.isclassregistered("{31411198-a502-11d2-bbca-00c04f8ec294}")) {	if(!this.bequiet) console.writeline(resourceshelper.getstring("errornohelp2environment"));	return (this.errorcodes)?3:0;	}	if (!applicationhelpers.isthisuserprivileged()) {	
errorinvalidprivileges 

return (this.errorcodes)?1:0;	}	if (!applicationhelpers.isclassregistered("{31411198-a502-11d2-bbca-00c04f8ec294}")) {	if(!this.bequiet) console.writeline(resourceshelper.getstring("errornohelp2environment"));	return (this.errorcodes)?3:0;	}	if (!applicationhelpers.isthisuserprivileged()) {	return (this.errorcodes)?4:0;	}	if (this.actionparam != "/r" && this.actionparam != "/u" && this.actionparam != "+r" && this.actionparam != "-r" && this.actionparam != "+p" && this.actionparam != "-p") {	
errorinvalidcommandline 

if(!this.bequiet) console.writeline(resourceshelper.getstring("errornohelp2environment"));	return (this.errorcodes)?3:0;	}	if (!applicationhelpers.isthisuserprivileged()) {	return (this.errorcodes)?4:0;	}	if (this.actionparam != "/r" && this.actionparam != "/u" && this.actionparam != "+r" && this.actionparam != "-r" && this.actionparam != "+p" && this.actionparam != "-p") {	return (this.errorcodes)?5:0;	}	if (string.isnullorempty(this.xmlfilename) || !file.exists(this.xmlfilename)) {	
errorinvalidxmlfile 

if (!applicationhelpers.isthisuserprivileged()) {	return (this.errorcodes)?4:0;	}	if (this.actionparam != "/r" && this.actionparam != "/u" && this.actionparam != "+r" && this.actionparam != "-r" && this.actionparam != "+p" && this.actionparam != "-p") {	return (this.errorcodes)?5:0;	}	if (string.isnullorempty(this.xmlfilename) || !file.exists(this.xmlfilename)) {	return (this.errorcodes)?6:0;	}	if (!xmlvalidator.xsdfiledoesexist) {	
errorcannotvalidatexmlfile 

private void registerorremovenamespace(object sender, commonregistereventargs e) {	if (e.register) {	
registerhelpnamespace 

private void registerorremovenamespace(object sender, commonregistereventargs e) {	if (e.register) {	}	else {	
removehelpnamespace 

private void registerorremovehelpdocument(object sender, commonregistereventargs e) {	if (e.register) {	
registerhelpdocument 

private void registerorremovehelpdocument(object sender, commonregistereventargs e) {	if (e.register) {	}	else {	
removehelpdocument 

private void registerorremovefilter(object sender, commonregistereventargs e) {	if (e.register) {	
registerhelpfilter 

private void registerorremovefilter(object sender, commonregistereventargs e) {	if (e.register) {	}	else {	
removehelpfilter 

private void registerorremoveplugin(object sender, pluginregistereventargs e) {	if (e.register) {	
registerhelpplugin 

private void registerorremoveplugin(object sender, pluginregistereventargs e) {	if (e.register) {	}	else {	
removehelpplugin 

private void namespacemerge(object sender, mergenamespaceeventargs e) {	
mergehelpnamespace 

========================= sharpdevelop sample_377 =========================

}	if (((_usename && docompare(node.getsearchnamestring())) || (_usevalue && docompare(node.getsearchvaluestring()))) && !(node is intermediatetreenode)) _nodefound(this, node);	bool continuesearch = true;	if (node.hassearchchildren(this)) {	foreach (isearchnode childnode in node.getsearchchildren()) {	continuesearch = searchinternal(childnode, level + 1);	if (!continuesearch) break;	}	}	if (!continuesearch) {	
search cancelled 

========================= sharpdevelop sample_114 =========================

public void writeexceptions() {	console.writeline();	
unhandled exceptions 

public void suitestarted(testname testname) {	if ( level++ == 0 ) {	messages = new stringcollection();	testruncount = 0;	testignorecount = 0;	failurecount = 0;	
unit tests 

public void suitestarted(testname testname) {	if ( level++ == 0 ) {	messages = new stringcollection();	testruncount = 0;	testignorecount = 0;	failurecount = 0;	
running tests in 

public void suitefinished(testresult suiteresult) {	if ( --level == 0) {	trace.writeline( "############################################################################" );	if (messages.count == 0) {	
s u c c e s s 

public void suitefinished(testresult suiteresult) {	if ( --level == 0) {	trace.writeline( "############################################################################" );	if (messages.count == 0) {	}	else {	
f a i l u r e s 

if ( --level == 0) {	trace.writeline( "############################################################################" );	if (messages.count == 0) {	}	else {	foreach ( string s in messages ) {	trace.writeline(s);	}	}	trace.writeline( "############################################################################" );	
executed tests 

if ( --level == 0) {	trace.writeline( "############################################################################" );	if (messages.count == 0) {	}	else {	foreach ( string s in messages ) {	trace.writeline(s);	}	}	trace.writeline( "############################################################################" );	
ignored tests 

if ( --level == 0) {	trace.writeline( "############################################################################" );	if (messages.count == 0) {	}	else {	foreach ( string s in messages ) {	trace.writeline(s);	}	}	trace.writeline( "############################################################################" );	
failed tests 

if ( --level == 0) {	trace.writeline( "############################################################################" );	if (messages.count == 0) {	}	else {	foreach ( string s in messages ) {	trace.writeline(s);	}	}	trace.writeline( "############################################################################" );	
unhandled exceptions 

if ( --level == 0) {	trace.writeline( "############################################################################" );	if (messages.count == 0) {	}	else {	foreach ( string s in messages ) {	trace.writeline(s);	}	}	trace.writeline( "############################################################################" );	
total time seconds 

========================= sharpdevelop sample_367 =========================

public override bool execute() {	if (monotoollocationhelper.ismonoinstalled) {	
targetframeworkversion 

public override bool execute() {	if (monotoollocationhelper.ismonoinstalled) {	path = monotoollocationhelper.getpathtomonoframework(targetframeworkversion);	
monoframeworkpath 

public override bool execute() {	if (monotoollocationhelper.ismonoinstalled) {	path = monotoollocationhelper.getpathtomonoframework(targetframeworkversion);	return true;	}	
mono is not installed 

========================= sharpdevelop sample_276 =========================

static void rungetrulelist(object state) {	request request = (request)state;	
trying to find fxcop rules 

if (fxcoppath != null) {	try {	rules = getrulelistandsort(fxcoppath, request.ruleassemblies);	} catch (exception ex) {	loggingservice.warn(ex);	rules = new list<fxcopcategory>();	}	} else {	rules = new list<fxcopcategory>();	}	
finished getting fxcop rules invoking callback 

========================= sharpdevelop sample_1846 =========================

continue;	}	}	try {	addderivedtypes(basetype, asm, types);	} catch (filenotfoundexception) {	} catch (fileloadexception) {	} catch (badimageformatexception) {	}	}	
typediscoveryservice returns types 

========================= sharpdevelop sample_2928 =========================

objects.add(objnode);	}	else {	nodes.remove(node);	}	}	}	graphics g = cb.creategraphics();	int maxwidth = 0;	foreach (treenode node in nodes) {	
setobjectvalue looking node 

throw new exception("error converting value " + "for struct member " + field.name, ex);	}	}	else {	if (!fieldtype.equals(_type)) {	fieldvalue = getstructvalues (fieldtype, fieldtype.getfields (reflectionhelper.all_bindings), ref controlindex);	}	else continue;	}	if (traceutil.if(this, tracelevel.verbose)) {	
struct field val 

========================= sharpdevelop sample_171 =========================

static guid finduserid() {	string[] othersharpdevelopversions;	try {	othersharpdevelopversions = directory.getdirectories(path.combine(propertyservice.configdirectory, ".."));	} catch (ioexception) {	othersharpdevelopversions = new string[0];	} catch (unauthorizedaccessexception) {	othersharpdevelopversions = new string[0];	}	
looking for existing udc database in directories 

try {	othersharpdevelopversions = directory.getdirectories(path.combine(propertyservice.configdirectory, ".."));	} catch (ioexception) {	othersharpdevelopversions = new string[0];	} catch (unauthorizedaccessexception) {	othersharpdevelopversions = new string[0];	}	foreach (string path in othersharpdevelopversions) {	string dbfilename = path.combine(path, "usagedata.dat");	if (file.exists(dbfilename)) {	
found existing udc database 

} catch (ioexception) {	othersharpdevelopversions = new string[0];	} catch (unauthorizedaccessexception) {	othersharpdevelopversions = new string[0];	}	foreach (string path in othersharpdevelopversions) {	string dbfilename = path.combine(path, "usagedata.dat");	if (file.exists(dbfilename)) {	guid? guid = usagedatasessionwriter.retrieveuserid(dbfilename);	if (guid.hasvalue) {	
found guid in existing udc database 

}	foreach (string path in othersharpdevelopversions) {	string dbfilename = path.combine(path, "usagedata.dat");	if (file.exists(dbfilename)) {	guid? guid = usagedatasessionwriter.retrieveuserid(dbfilename);	if (guid.hasvalue) {	return guid.value;	}	}	}	
did not find existing udc database creating new guid 

public void opensession() {	ienumerable<usagedataenvironmentproperty> appenvironmentproperties = getappproperties();	bool sessionopened = false;	lock (lockobj) {	if (session == null) {	try {	session = new usagedatasessionwriter(dbfilename, finduserid);	} catch (incompatibledatabaseexception ex) {	if (ex.actualversion < ex.expectedversion) {	
analyticsmonitor removing old database 

if (session == null) {	try {	session = new usagedatasessionwriter(dbfilename, finduserid);	} catch (incompatibledatabaseexception ex) {	if (ex.actualversion < ex.expectedversion) {	guid? olduserid = usagedatasessionwriter.retrieveuserid(dbfilename);	trydeletedatabase();	try {	session = new usagedatasessionwriter(dbfilename, () => (olduserid ?? finduserid()));	} catch (incompatibledatabaseexception ex2) {	
analyticsmonitor could not upgrade database 

session = new usagedatasessionwriter(dbfilename, finduserid);	} catch (incompatibledatabaseexception ex) {	if (ex.actualversion < ex.expectedversion) {	guid? olduserid = usagedatasessionwriter.retrieveuserid(dbfilename);	trydeletedatabase();	try {	session = new usagedatasessionwriter(dbfilename, () => (olduserid ?? finduserid()));	} catch (incompatibledatabaseexception ex2) {	}	} else {	
analyticsmonitor 

========================= sharpdevelop sample_1631 =========================

public static ienumerable<calltreenode> withquerylog(this ienumerable<calltreenode> items, textwriter logoutput) {	if (items == null) throw new argumentnullexception("items");	if (logoutput == null) throw new argumentnullexception("logoutput");	iqueryable<calltreenode> query = items as iqueryable<calltreenode>;	if (query != null) return query.withquerylog(logoutput);	
the query did not use linq to profiler 

========================= sharpdevelop sample_2074 =========================

public void disassemble(methodbody body, methoddebugsymbols debugsymbols) {	methoddefinition method = body.method;	
output writeline maxstack 

========================= sharpdevelop sample_478 =========================

public nantpadcontent() {	
nantpadcontent ctor 

========================= sharpdevelop sample_23 =========================

public override void getdetailtext() {	if (_container == null && _typelibstring != null && _typelibversion != null) {	try {	_container = typelibrary.gettypelib (new guid(_typelibstring), _typelibversion);	_typelib = (typelibrary)_container;	}	catch (exception ex) {	
error getting typelib for ex 

========================= sharpdevelop sample_72 =========================

public void read() {	var document = new xmldocument();	try {	document.load(filename);	}	catch (xmlexception ex) {	
error reading machine specifications test results 

public void dispose() {	join();	try {	file.delete(filename);	} catch (exception ex) {	
could delete temporary file 

========================= sharpdevelop sample_1852 =========================

public void setmemento(properties memento) {	
workbench setmemento not implemented 

========================= sharpdevelop sample_322 =========================

if ((resolveresult = nrefactoryastcacheservice.resolvenextouterexpression(ref expressionresult, caretline, caretcolumn, filename, filecontent, expressionfinder)) != null) {	return resolveresource(resolveresult, expr);	} else {	return null;	}	}	}	} else {	languageproperties lp = nrefactoryresourceresolver.getlanguagepropertiesforfile(filename);	if (lp != null && !string.isnullorempty(lp.indexerexpressionstarttoken) && lp.indexerexpressionstarttoken[0] == chartyped) {	
resourcetoolkit bclnrefactoryresourceresolver indexer expression start typed resolveresult 

if ((resolveresult = nrefactoryastcacheservice.resolvenextouterexpression(ref expressionresult, caretline, caretcolumn, filename, filecontent, expressionfinder)) != null) {	return resolveresource(resolveresult, expr);	} else {	return null;	}	}	}	} else {	languageproperties lp = nrefactoryresourceresolver.getlanguagepropertiesforfile(filename);	if (lp != null && !string.isnullorempty(lp.indexerexpressionstarttoken) && lp.indexerexpressionstarttoken[0] == chartyped) {	
resourcetoolkit bclnrefactoryresourceresolver expression 

public override object trackedvisitvariabledeclaration(variabledeclaration variabledeclaration, object data) {	if (variabledeclaration.initializer.isnull) {	return base.trackedvisitvariabledeclaration(variabledeclaration, data);	}	localvariabledeclaration localvariabledeclaration = data as localvariabledeclaration;	if (this.islocalvariable && localvariabledeclaration != null) {	if (variabledeclaration.name == this.resourcemanagermember.name) {	if (localvariabledeclaration.startlocation.x == this.resourcemanagermember.region.begincolumn && localvariabledeclaration.startlocation.y == this.resourcemanagermember.region.beginline) {	
resourcetoolkit bclnrefactoryresourceresolver found local variable declaration at 

if (this.islocalvariable && localvariabledeclaration != null) {	if (variabledeclaration.name == this.resourcemanagermember.name) {	if (localvariabledeclaration.startlocation.x == this.resourcemanagermember.region.begincolumn && localvariabledeclaration.startlocation.y == this.resourcemanagermember.region.beginline) {	#endif data = true;	}	}	}	fielddeclaration fielddeclaration = data as fielddeclaration;	if (!this.islocalvariable && fielddeclaration != null) {	if (variabledeclaration.name == this.resourcemanagermember.name && fielddeclaration.startlocation.x == this.resourcemanagermember.region.begincolumn && fielddeclaration.startlocation.y == this.resourcemanagermember.region.beginline) {	
resourcetoolkit bclnrefactoryresourceresolver found field declaration at 

}	}	}	fielddeclaration fielddeclaration = data as fielddeclaration;	if (!this.islocalvariable && fielddeclaration != null) {	if (variabledeclaration.name == this.resourcemanagermember.name && fielddeclaration.startlocation.x == this.resourcemanagermember.region.begincolumn && fielddeclaration.startlocation.y == this.resourcemanagermember.region.beginline) {	#endif data = true;	} else {	this.tryresolveresourcemanagerproperty();	if (this.resourcemanagerfieldaccessedbyproperty != null && fielddeclaration.startlocation.x == this.resourcemanagerfieldaccessedbyproperty.region.begincolumn && fielddeclaration.startlocation.y == this.resourcemanagerfieldaccessedbyproperty.region.beginline) {	
resourcetoolkit bclnrefactoryresourceresolver found field declaration via associated property at 

if (mrr != null) {	resolvedmember = mrr.resolvedmember;	} else {	localresolveresult lrr = rr as localresolveresult;	if (lrr != null) {	resolvedmember = lrr.field;	}	}	}	if (resolvedmember != null) {	
resourcetoolkit bclnrefactoryresourceresolver resolved member 

resolvedmember = mrr.resolvedmember;	} else {	localresolveresult lrr = rr as localresolveresult;	if (lrr != null) {	resolvedmember = lrr.field;	}	}	}	if (resolvedmember != null) {	#endif if (resolvedmember.gettype().equals(this.resourcemanagermember.gettype()) && resolvedmember.compareto(this.resourcemanagermember) == 0) {	
resourcetoolkit bclnrefactoryresourceresolver found assignment to field 

}	}	}	if (resolvedmember != null) {	#endif if (resolvedmember.gettype().equals(this.resourcemanagermember.gettype()) && resolvedmember.compareto(this.resourcemanagermember) == 0) {	#endif data = true;	} else if (this.compilationunit != null && !this.islocalvariable && istyperelationshippossible(resolvedmember, this.resourcemanagermember)) {	if (this.resourcemanagermember is iproperty && resolvedmember is ifield) {	this.tryresolveresourcemanagerproperty();	if (this.resourcemanagerfieldaccessedbyproperty != null && this.resourcemanagerfieldaccessedbyproperty.compareto(resolvedmember) == 0) {	
resourcetoolkit bclnrefactoryresourceresolver found assignment to field 

} else if (this.compilationunit != null && !this.islocalvariable && istyperelationshippossible(resolvedmember, this.resourcemanagermember)) {	if (this.resourcemanagermember is iproperty && resolvedmember is ifield) {	this.tryresolveresourcemanagerproperty();	if (this.resourcemanagerfieldaccessedbyproperty != null && this.resourcemanagerfieldaccessedbyproperty.compareto(resolvedmember) == 0) {	#endif data = true;	}	} else if (this.resourcemanagermember is ifield && resolvedmember is iproperty) {	propertyfieldassociationvisitor visitor = new propertyfieldassociationvisitor((ifield)this.resourcemanagermember, this.filename, this.filecontent);	this.compilationunit.acceptvisitor(visitor, null);	if (visitor.associatedproperty != null && visitor.associatedproperty.compareto(resolvedmember) == 0) {	
resourcetoolkit bclnrefactoryresourceresolver found assignment to property 

public override object trackedvisitobjectcreateexpression(objectcreateexpression objectcreateexpression, object data) {	if (data as bool? ?? false) {	
resourcetoolkit bclnrefactoryresourceresolver found object initialization 

public override object trackedvisitobjectcreateexpression(objectcreateexpression objectcreateexpression, object data) {	if (data as bool? ?? false) {	#endif memberresolveresult mrr = this.resolve(objectcreateexpression) as memberresolveresult;	#if debug if (mrr != null) {	
resourcetoolkit bclnrefactoryresourceresolver resolved constructor 

public override object trackedvisitobjectcreateexpression(objectcreateexpression objectcreateexpression, object data) {	if (data as bool? ?? false) {	#endif memberresolveresult mrr = this.resolve(objectcreateexpression) as memberresolveresult;	#if debug if (mrr != null) {	}	#endif if (mrr != null && mrr.resolvedmember is imethod && (mrr.resolvedmember.declaringtype.compareto(this.resourcemanagermember.returntype.getunderlyingclass()) == 0 || mrr.resolvedmember.declaringtype.istypeininheritancetree(this.resourcemanagermember.returntype.getunderlyingclass())) ) {	
resourcetoolkit bclnrefactoryresourceresolver this is the correct constructor 

if (data as bool? ?? false) {	#endif memberresolveresult mrr = this.resolve(objectcreateexpression) as memberresolveresult;	#if debug if (mrr != null) {	}	#endif if (mrr != null && mrr.resolvedmember is imethod && (mrr.resolvedmember.declaringtype.compareto(this.resourcemanagermember.returntype.getunderlyingclass()) == 0 || mrr.resolvedmember.declaringtype.istypeininheritancetree(this.resourcemanagermember.returntype.getunderlyingclass())) ) {	#endif foreach (expression param in objectcreateexpression.parameters) {	primitiveexpression p = param as primitiveexpression;	if (p != null) {	string pvalue = p.value as string;	if (!string.isnullorempty(pvalue)) {	
resourcetoolkit bclnrefactoryresourceresolver found string parameter 

#if debug if (mrr != null) {	}	#endif if (mrr != null && mrr.resolvedmember is imethod && (mrr.resolvedmember.declaringtype.compareto(this.resourcemanagermember.returntype.getunderlyingclass()) == 0 || mrr.resolvedmember.declaringtype.istypeininheritancetree(this.resourcemanagermember.returntype.getunderlyingclass())) ) {	#endif foreach (expression param in objectcreateexpression.parameters) {	primitiveexpression p = param as primitiveexpression;	if (p != null) {	string pvalue = p.value as string;	if (!string.isnullorempty(pvalue)) {	#endif this.foundresourceset = nrefactoryresourceresolver.getresourcesetreference(this.resourcemanagermember.declaringtype.compilationunit.filename, pvalue);	#if debug if (this.foundresourceset.filename != null) {	
resourcetoolkit bclnrefactoryresourceresolver found resource file 

if (!string.isnullorempty(pvalue)) {	#endif this.foundresourceset = nrefactoryresourceresolver.getresourcesetreference(this.resourcemanagermember.declaringtype.compilationunit.filename, pvalue);	#if debug if (this.foundresourceset.filename != null) {	}	#endif break;	}	continue;	}	typeofexpression t = param as typeofexpression;	if (t != null && this.positionavailable) {	
resourcetoolkit bclnrefactoryresourceresolver found typeofexpression in constructor call 

#if debug if (this.foundresourceset.filename != null) {	}	#endif break;	}	continue;	}	typeofexpression t = param as typeofexpression;	if (t != null && this.positionavailable) {	#endif resolveresult rr = this.resolve(new typereferenceexpression(t.typereference), expressioncontext.type);	#if debug if (rr == null) {	
resourcetoolkit bclnrefactoryresourceresolver the typereference of the typeofexpression could not be resolved 

}	#endif break;	}	continue;	}	typeofexpression t = param as typeofexpression;	if (t != null && this.positionavailable) {	#endif resolveresult rr = this.resolve(new typereferenceexpression(t.typereference), expressioncontext.type);	#if debug if (rr == null) {	} else {	
resourcetoolkit bclnrefactoryresourceresolver the typereference resolved to 

}	continue;	}	typeofexpression t = param as typeofexpression;	if (t != null && this.positionavailable) {	#endif resolveresult rr = this.resolve(new typereferenceexpression(t.typereference), expressioncontext.type);	#if debug if (rr == null) {	} else {	}	#endif if (rr != null) {	
resourcetoolkit bclnrefactoryresourceresolver found typeof parameter type 

}	typeofexpression t = param as typeofexpression;	if (t != null && this.positionavailable) {	#endif resolveresult rr = this.resolve(new typereferenceexpression(t.typereference), expressioncontext.type);	#if debug if (rr == null) {	} else {	}	#endif if (rr != null) {	#endif this.foundresourceset = nrefactoryresourceresolver.getresourcesetreference(this.resourcemanagermember.declaringtype.compilationunit.filename, rr.resolvedtype.fullyqualifiedname);	#if debug if (this.foundresourceset.filename != null) {	
resourcetoolkit bclnrefactoryresourceresolver found resource file 

static string getkeyfromexpression(expression expr, out bool isprefixonly) {	isprefixonly = false;	
resourcetoolkit bclnrefactoryresourceresolver trying to get key from expression 

static string getkeyfromexpression(expression expr, out bool isprefixonly) {	isprefixonly = false;	#endif indexerexpression indexer = expr as indexerexpression;	if (indexer != null) {	foreach (expression index in indexer.indexes) {	primitiveexpression p = index as primitiveexpression;	if (p != null) {	string key = p.value as string;	if (key != null) {	
resourcetoolkit bclnrefactoryresourceresolver found key 

invocationexpression invocation = expr as invocationexpression;	if (invocation != null) {	memberreferenceexpression fre = invocation.targetobject as memberreferenceexpression;	if (fre != null) {	if (fre.membername == "getstring" || fre.membername == "getobject" || fre.membername == "getstream") {	if (invocation.arguments.count > 0) {	primitiveexpression p = invocation.arguments[0] as primitiveexpression;	if (p != null) {	string key = p.value as string;	if (key != null) {	
resourcetoolkit bclnrefactoryresourceresolver found key 

#endif return key;	}	}	}	} else if (fre.membername == "applyresources") {	if (invocation.arguments.count >= 2) {	primitiveexpression p = invocation.arguments[1] as primitiveexpression;	if (p != null) {	string key = p.value as string;	if (key != null) {	
resourcetoolkit bclnrefactoryresourceresolver found key prefix 

========================= sharpdevelop sample_1611 =========================

protected override codecompileunit parse() {	
nrefactorydesignerloader parse 

}	}	codedomvisitor visitor = new codedomvisitor();	visitor.environmentinformationprovider = new icsharpcode.sharpdevelop.dom.nrefactoryresolver.nrefactoryinformationprovider(formclass.projectcontent);	visitor.visitcompilationunit(combinedcu, null);	#if debug if ((control.modifierkeys & keys.control) == keys.control) {	codedomverboseoutputgenerator outputgenerator = new codedomverboseoutputgenerator();	outputgenerator.generatecodefrommember(visitor.codecompileunit.namespaces[0].types[0], console.out, null);	this.codedomprovider.generatecodefromcompileunit(visitor.codecompileunit, console.out, null);	}	
nrefactorydesignerloader parse finished 

protected override void write(codecompileunit unit) {	
designerloader write called 

========================= sharpdevelop sample_2908 =========================

public override void visitspan(span span) {	
span kind 

public override void visitspan(span span) {	
span gettype 

public override void visitspan(span span) {	
span content 

========================= sharpdevelop sample_3872 =========================

}	}	} else if (operand is fieldreference) {	var fd = ((fieldreference)operand).resolve();	if (fd != null && assemblies.contains(fd.declaringtype.module.assembly) && mappings.cecilmappings.containskey(fd)) {	var fieldnode = mappings.fieldmappings[(ifield)mappings.cecilmappings[fd]];	mappings.addedge(fieldnode);	}	}	} catch (assemblyresolutionexception are) {	
cqa skipping operand reference exception 

========================= sharpdevelop sample_1984 =========================

public override void beginload(idesignerloaderhost host){	
reportdesignerloader beginload 

protected override void performload(idesignerserializationmanager serializationmanager){	
reportdesignerloader performload 

protected override void performflush(idesignerserializationmanager designerserializationmanager){	
reportdesignerloader performflush 

========================= sharpdevelop sample_1547 =========================

static void processfolder(xelement folder, ziparchive thezip, string folderrelativepath) {	string targetdirectory = (string)folder.attribute("name");	string currentrelativepath = appendrelativepath(folderrelativepath, targetdirectory);	
processing folder 

========================= sharpdevelop sample_357 =========================

static int main(string[] args) {	try {	mainclass m = new mainclass();	int count;	if (args.length == 0) {	environment.currentdirectory = path.getfullpath(@"..\..\..\..\..");	
checking files in src 

static int main(string[] args) {	try {	mainclass m = new mainclass();	int count;	if (args.length == 0) {	environment.currentdirectory = path.getfullpath(@"..\..\..\..\..");	count = m.run("src");	} else {	environment.currentdirectory = path.getfullpath(args[0]);	
checking files in 

try {	mainclass m = new mainclass();	int count;	if (args.length == 0) {	environment.currentdirectory = path.getfullpath(@"..\..\..\..\..");	count = m.run("src");	} else {	environment.currentdirectory = path.getfullpath(args[0]);	count = m.run(".");	}	
finished checked files changed files ignored files 

========================= sharpdevelop sample_363 =========================

public static void stop(string desc) {	stopwatch watch = stopwatches.pop();	watch.stop();	
desc took ms 

public static idisposable time(string text) {	#if debug stopwatch watch = stopwatch.startnew();	return new callbackondispose( delegate {	watch.stop();	
text took ms 

========================= sharpdevelop sample_4838 =========================

task task = iotaskscheduler.factory.startnew( delegate {	pc = pc.removeassemblyreferences(pc.assemblyreferences);	int serializablefilecount = 0;	list<string> nonserializableunresolvedfiles = new list<string>();	foreach (var unresolvedfile in pc.files) {	if (isserializable(unresolvedfile)) serializablefilecount++;	else nonserializableunresolvedfiles.add(unresolvedfile.filename);	}	if (nonserializableunresolvedfiles.count > 0) pc = pc.removefiles(nonserializableunresolvedfiles);	if (serializablefilecount > 3) {	
serializing files to 

static iprojectcontent tryreadfromcache(string cachefilename) {	if (cachefilename == null || !file.exists(cachefilename)) return null;	
deserializing 

static iprojectcontent tryreadfromcache(string cachefilename) {	if (cachefilename == null || !file.exists(cachefilename)) return null;	try {	using (filestream fs = new filestream(cachefilename, filemode.open, fileaccess.read, fileshare.read | fileshare.delete, 4096, fileoptions.sequentialscan)) {	using (binaryreader reader = new binaryreaderwith7bitencodedints(fs)) {	if (reader.readint32() != cachemagicnumber) {	
incorrect magic number 

========================= sharpdevelop sample_4869 =========================

for (int i = 0; i < array.length; i++) {	array[i] = (t)deserialize(serializedarray[i], typeof(t));	}	return array;	} catch (xamlobjectwriterexception ex) {	loggingservice.warn(ex);	} catch (notsupportedexception ex) {	loggingservice.warn(ex);	}	} else {	
properties getlist this entry is not a list 

========================= sharpdevelop sample_4548 =========================

public printtimes(string text): base(text + " - end") {	
start 

public void dispose() {	stopwatch.stop();	
ms 

========================= sharpdevelop sample_3379 =========================

static void run(object state) {	
svn overlayiconmanager thread started 

thread.sleep(2);	while (true) {	if (sd.parserservice.loadsolutionprojectsthread.isrunning) {	thread.sleep(100);	}	abstractprojectbrowsertreenode node;	lock (queue) {	if (queue.count == 0) {	threadrunning = false;	clearstatuscache();	
svn overlayiconmanager thread finished 

========================= sharpdevelop sample_3239 =========================

public static void formatoutput (iexporttext textcolumn) {	if (string.isnullorwhitespace(textcolumn.text)) {	return;	}	if (textcolumn.name == "xy") {	
stop 

}	if (textcolumn.name == "xy") {	}	if (!string.isnullorempty(textcolumn.formatstring)) {	if (textcolumn.datatype.tolower().contains("timespan")) {	textcolumn.text = handletimespan(textcolumn.text,textcolumn.formatstring);	} else {	var typecode = typehelper.typecodefromstring(textcolumn.datatype);	textcolumn.text = formatitem(textcolumn.text,textcolumn.formatstring,typecode);	if (textcolumn.name == "xy") {	
stop 

static string formatdecimal(string toformat, string format){	string str = string.empty;	if (checkvalue (toformat)) {	try {	decimal number =	decimal.parse(toformat, numberstyles.any, cultureinfo.currentculture.numberformat);	str = number.tostring (format,cultureinfo.currentculture);	} catch (formatexception) {	
standardformatter incorrectformat 

========================= sharpdevelop sample_1359 =========================

protected void setobject(object obj) {	
setobject 

protected void setobjectname() {	propertyinfo nameprop;	nameprop = namepropcache.getnameprop(_objtype);	if (nameprop != null && _obj != null) {	try {	_objname = (string)nameprop.getvalue(_obj, null);	} catch (exception ex) {	
exception invoking name property 

protected void invokeinternal(objectinfo parent, iobjectnode objectnode, object[] parametervalues, object fieldpropvalue, bool setmember) {	if (traceutil.if(this, tracelevel.verbose)) {	
start invoke 

protected void invokeinternal(objectinfo parent, iobjectnode objectnode, object[] parametervalues, object fieldpropvalue, bool setmember) {	if (traceutil.if(this, tracelevel.verbose)) {	if (fieldpropvalue != null) trace.writeline("  fieldpropval: " + fieldpropvalue);	if (parametervalues != null) {	
param 

if (traceutil.if(this, tracelevel.verbose)) {	if (fieldpropvalue != null) trace.writeline("  fieldpropval: " + fieldpropvalue);	if (parametervalues != null) {	}	}	switch (_objmemberinfo.membertype) {	case membertypes.method: {	methodinfo m = (methodinfo)_objmemberinfo;	setobject(m.invoke(parent._obj, parametervalues));	if (traceutil.if(this, tracelevel.verbose)) {	
called on return 

if (setmember) {	p.setvalue(parent._obj, fieldpropvalue, parametervalues);	}	if (p.canread){	setobject(p.getvalue(parent._obj, parametervalues));	} else {	if (setmember) setobject(fieldpropvalue);	}	objectnode.currentpropindexvalues = parametervalues;	if (traceutil.if(this, tracelevel.verbose)) {	
property of value 

if (parent._objtype.isvaluetype) {	if (setmember) {	structaccessor.setvalue(objectnode, fieldpropvalue);	}	setobject(structaccessor.getvalue(objectnode));	} else {	if (setmember) f.setvalue(parent._obj, fieldpropvalue);	setobject(f.getvalue(parent._obj));	}	if (traceutil.if(this, tracelevel.verbose)) {	
field of value 

while (true) {	iobjectnode parentobjnode;	parentobjnode = objectnode.parentobjectnode;	if (parentobjnode == null) break;	if (parentobjnode.objectinfo.objmemberinfo == null) break;	if (!(parentobjnode.objectinfo.objmemberinfo is propertyinfo)) break;	propertyinfo propinfo = (propertyinfo)parentobjnode.objectinfo.objmemberinfo;	try {	propinfo.setvalue(parentobjnode.parentobjectnode.obj, parentobjnode.obj, parentobjnode.currentpropindexvalues);	} catch (exception ex) {	
exception in setvalue in property propagation for prop ex 

========================= sharpdevelop sample_80 =========================

static void 한글test() {	
could write 한글 

========================= sharpdevelop sample_2055 =========================

}	var codenamespace = new codenamespace(designerclass.namespace);	codenamespace.types.add(codeclass);	var codeunit = new codecompileunit();	codeunit.namespaces.add(codenamespace);	#if debug if ((control.modifierkeys & keys.control) == keys.control) {	codedomverboseoutputgenerator outputgenerator = new codedomverboseoutputgenerator();	outputgenerator.generatecodefrommember(codemethod, console.out, null);	this.codedomprovider.generatecodefromcompileunit(codeunit, console.out, null);	}	
nrefactorydesignerloader parse finished 

protected override void write(codecompileunit unit) {	
designerloader write called 

========================= sharpdevelop sample_4035 =========================

public static void enablecache() {	if (cacheenabled) {	throw new invalidoperationexception("the ast cache is already enabled.");	}	cacheenabled = true;	
resourcetoolkit nrefactoryastcacheservice cache enabled 

public static void disablecache() {	if (cacheenabled) {	cacheenabled = false;	cachedastinfo.clear();	cachedmembermappings.clear();	
resourcetoolkit nrefactoryastcacheservice cache disabled and cleared 

static compilationunit parse(supportedlanguage language, string filename, string filecontent) {	using(icsharpcode.nrefactory.iparser parser = parserfactory.createparser(language, new stringreader(filecontent))) {	if (parser != null) {	
resourcetoolkit nrefactoryastcacheservice parsing file 

throw new argumentnullexception("filename");	}	if (filecontent == null) {	throw new argumentnullexception("filename");	}	if (expression == null) {	throw new argumentnullexception("expression");	}	iproject p = projectfiledictionaryservice.getprojectforfile(filename);	if (p == null) {	
resourcetoolkit nrefactoryastcacheservice resolvelowlevel failed project is null for file 

}	if (expression == null) {	throw new argumentnullexception("expression");	}	iproject p = projectfiledictionaryservice.getprojectforfile(filename);	if (p == null) {	return null;	}	iprojectcontent pc = resourceresolverservice.getprojectcontent(p);	if (pc == null) {	
resourcetoolkit nrefactoryastcacheservice resolvelowlevel failed projectcontent is null for project 

return null;	}	nrefactoryresolver resolver = resourceresolverservice.createresolver(filename) as nrefactoryresolver;	if (resolver == null) {	resolver = new nrefactoryresolver(languageproperties.csharp);	}	if (compilationunit == null) {	compilationunit = getfullast(resolver.language, filename, filecontent);	}	if (compilationunit == null) {	
resourcetoolkit nrefactoryastcacheservice resolvelowlevel failed due to the compilation unit being unavailable 

if (resolver == null) {	resolver = new nrefactoryresolver(languageproperties.csharp);	}	if (compilationunit == null) {	compilationunit = getfullast(resolver.language, filename, filecontent);	}	if (compilationunit == null) {	return null;	}	if (!resolver.initialize(parserservice.getparseinformation(filename), caretline, caretcolumn)) {	
resourcetoolkit nrefactoryastcacheservice resolvelowlevel failed nrefactoryresolver initialize returned false 

inode membernode;	if (!cacheenabled || !cachedmembermappings.trygetvalue(resolver.callingmember, out membernode)) {	memberfindastvisitor visitor = new memberfindastvisitor(resolver.callingmember);	compilationunit.acceptvisitor(visitor, null);	membernode = visitor.membernode;	if (cacheenabled && membernode != null) {	cachedmembermappings.add(resolver.callingmember, membernode);	}	}	if (membernode == null) {	
resourcetoolkit nrefactoryastcacheservice could not find member in ast 

========================= sharpdevelop sample_1610 =========================

public override void dispose() {	try {	icomponentchangeservice componentchangeservice = (icomponentchangeservice)this.getservice(typeof(icomponentchangeservice));	if (componentchangeservice != null) {	
forms designer removing componentadded handler for nested container setup 

public override void dispose() {	try {	icomponentchangeservice componentchangeservice = (icomponentchangeservice)this.getservice(typeof(icomponentchangeservice));	if (componentchangeservice != null) {	componentchangeservice.componentadded -= componentcontainersetup;	} else {	
forms designer could not remove componentadding handler because icomponentchangeservice is no longer available 

static void componentcontainersetup(object sender, componenteventargs e) {	inestedcontainer nestedcontainer = e.component.site.getservice(typeof(inestedcontainer)) as inestedcontainer;	if (nestedcontainer != null) {	methodinfo getservicemethod = nestedcontainer.gettype().getmethod("getservice", bindingflags.instance | bindingflags.nonpublic, null, new [] {typeof(type)}, null);	if (getservicemethod != null) {	
forms designer initializing nested service container of using reflection 

protected override void initialize() {	codedomlocalizationmodel model = formsdesigner.gui.optionpanels.localizationmodeloptionspanel.defaultlocalizationmodel;	if (formsdesigner.gui.optionpanels.localizationmodeloptionspanel.keeplocalizationmodel) {	codedomlocalizationmodel existingmodel = this.getcurrentlocalizationmodelfromdesignedfile();	if (existingmodel != codedomlocalizationmodel.none) {	
determined existing localization model using that 

protected override void initialize() {	codedomlocalizationmodel model = formsdesigner.gui.optionpanels.localizationmodeloptionspanel.defaultlocalizationmodel;	if (formsdesigner.gui.optionpanels.localizationmodeloptionspanel.keeplocalizationmodel) {	codedomlocalizationmodel existingmodel = this.getcurrentlocalizationmodelfromdesignedfile();	if (existingmodel != codedomlocalizationmodel.none) {	model = existingmodel;	} else {	
could not determine existing localization model using default 

protected override void initialize() {	codedomlocalizationmodel model = formsdesigner.gui.optionpanels.localizationmodeloptionspanel.defaultlocalizationmodel;	if (formsdesigner.gui.optionpanels.localizationmodeloptionspanel.keeplocalizationmodel) {	codedomlocalizationmodel existingmodel = this.getcurrentlocalizationmodelfromdesignedfile();	if (existingmodel != codedomlocalizationmodel.none) {	model = existingmodel;	} else {	}	} else {	
using default localization model 

}	} else {	}	codedomlocalizationprovider localizationprovider = new codedomlocalizationprovider(designerloaderhost, model);	idesignerserializationmanager manager = (idesignerserializationmanager)designerloaderhost.getservice(typeof(idesignerserializationmanager));	manager.addserializationprovider(new sharpdevelopserializationprovider());	manager.addserializationprovider(localizationprovider);	base.initialize();	icomponentchangeservice componentchangeservice = (icomponentchangeservice)this.getservice(typeof(icomponentchangeservice));	if (componentchangeservice != null) {	
forms designer adding componentadded handler for nested container setup 

}	codedomlocalizationprovider localizationprovider = new codedomlocalizationprovider(designerloaderhost, model);	idesignerserializationmanager manager = (idesignerserializationmanager)designerloaderhost.getservice(typeof(idesignerserializationmanager));	manager.addserializationprovider(new sharpdevelopserializationprovider());	manager.addserializationprovider(localizationprovider);	base.initialize();	icomponentchangeservice componentchangeservice = (icomponentchangeservice)this.getservice(typeof(icomponentchangeservice));	if (componentchangeservice != null) {	componentchangeservice.componentadded += componentcontainersetup;	} else {	
forms designer cannot add componentadded handler for nested container setup because icomponentchangeservice is unavailable 

protected override void onendload(bool successful, icollection errors) {	this.loading = false;	try {	base.onendload(successful, errors);	} catch(exceptioncollection e) {	
designerloader onendload error 

protected override void onendload(bool successful, icollection errors) {	this.loading = false;	try {	base.onendload(successful, errors);	} catch(exceptioncollection e) {	foreach(exception ine in e.exceptions) {	
designerloader onendload error 

protected override void onendload(bool successful, icollection errors) {	this.loading = false;	try {	base.onendload(successful, errors);	} catch(exceptioncollection e) {	foreach(exception ine in e.exceptions) {	}	throw;	} catch(exception e) {	
designerloader onendload error 

========================= sharpdevelop sample_2909 =========================

this.componentchangeservice.componentchanging += new componentchangingeventhandler(oncomponentchanging);	}	menucommandservice = (menucommandservice)getservice(typeof(menucommandservice));	if (menucommandservice != null) {	m_menucommands = new menucommand[]	{	new menucommand(new eventhandler(onmenucut), standardcommands.cut), new menucommand(new eventhandler(onmenucopy), standardcommands.copy), new menucommand(new eventhandler(onmenudelete), standardcommands.delete) };	foreach(menucommand mc in m_menucommands) {	m_menucommandservice.addcommand(mc);	}	
rootdesigner menuservice set 

========================= sharpdevelop sample_1523 =========================

public void extendselection() {	astnode selectednode = null;	ilist<astnode> commentsblanklines;	var parsedcu = parsedocument(editor, out commentsblanklines);	if (parsedcu == null)	return;	isegment oldselection = new textsegment { startoffset = editor.selectionstart, length = editor.selectionlength };	selection extendedselection = extendselection(editor, parsedcu, commentsblanklines, out selectednode, new type[] { typeof(astnode) });	selecttext(extendedselection, editor);	if (previousselections.count == 0 || !(previousselections.peek().offset == oldselection.offset && previousselections.peek().endoffset == oldselection.endoffset)) {	previousselections.push(oldselection);	
pushed 

astnode selectednode = null;	ilist<astnode> commentsblanklines;	var parsedcu = parsedocument(editor, out commentsblanklines);	if (parsedcu == null)	return;	isegment oldselection = new textsegment { startoffset = editor.selectionstart, length = editor.selectionlength };	selection extendedselection = extendselection(editor, parsedcu, commentsblanklines, out selectednode, new type[] { typeof(astnode) });	selecttext(extendedselection, editor);	if (previousselections.count == 0 || !(previousselections.peek().offset == oldselection.offset && previousselections.peek().endoffset == oldselection.endoffset)) {	previousselections.push(oldselection);	} else {	
not accepted 

public void shrinkselection() {	if (previousselections.count < 1) return;	var selection = previousselections.pop();	editor.select(selection.offset, selection.length);	
popped 

========================= sharpdevelop sample_4001 =========================

public void initialize(icorprofilerinfo picorprofilerinfounk) {	
profiling initialized 

========================= sharpdevelop sample_197 =========================

}	else {	getpackageoperations();	if (caninstallpackage()) {	installpackage(_packageoperations);	}	}	}	catch (exception ex) {	reporterror(ex);	
error when trying to install package 

private void tryuninstallingpackage() {	try {	uninstallpackage();	}	catch (exception ex) {	reporterror(ex);	
error when trying to uninstall package 

========================= sharpdevelop sample_1675 =========================

public static void addviewcontent(iviewcontent viewcontent){	if (viewcontent == null) throw new argumentnullexception("viewcontent");	if (!initialised) initialise();	if (standardsidetab == null) {	
creating reporting sidetab 

========================= sharpdevelop sample_1517 =========================

public  defaultservicecontainer () {	servicecontainer = new servicecontainer();	
init servicecontaier 

========================= sharpdevelop sample_1556 =========================

public static void adddependentitemstoproject(func<ienumerable<fileprojectitem>> itemadder) {	directorynode dir = projectbrowserpad.instance.projectbrowsercontrol.selecteddirectorynode;	if (dir == null) return;	filenode filenode = projectbrowserpad.instance.projectbrowsercontrol.selectednode as filenode;	if (filenode == null) {	
projectbrowser addnewdependentitemstoproject called on node that is not a filenode but 

public static void adddependentitemstoproject(func<ienumerable<fileprojectitem>> itemadder) {	directorynode dir = projectbrowserpad.instance.projectbrowsercontrol.selecteddirectorynode;	if (dir == null) return;	filenode filenode = projectbrowserpad.instance.projectbrowsercontrol.selectednode as filenode;	if (filenode == null) {	return;	}	
projectbrowser addnewdependentitemstoproject on 

filenode filenode = projectbrowserpad.instance.projectbrowsercontrol.selectednode as filenode;	if (filenode == null) {	return;	}	var addeditems = itemadder();	if (addeditems == null) return;	filenode = dir.allnodes.oftype<filenode>().single(node => fileutility.isequalfilename(node.filename, filenode.filename));	var dict = addeditems .where(fpi => string.isnullorempty(fpi.dependentupon)) .todictionary( fpi => dir.allnodes.oftype<filenode>().single( node => node.projectitem == fpi ) );	if (dict.count == 0) return;	foreach (keyvaluepair<filenode, fileprojectitem> pair in dict) {	
projectbrowser addnewdependentitemstoproject creating dependency for upon 

========================= sharpdevelop sample_5198 =========================

}	return 0;	}	if (!file.exists("sharpdevelop.sln")) {	string maindir = path.getfullpath(path.combine(exedir, "../../../../.."));	if (file.exists(maindir + "\\sharpdevelop.sln")) {	directory.setcurrentdirectory(maindir);	}	}	if (!file.exists("sharpdevelop.sln")) {	
working directory must be sharpdevelop 

static void retrieverevisionnumber() {	if (revisionnumber == null) {	if (directory.exists(".git")) {	try {	readrevisionnumberfromgit();	readbranchnamefromgit();	} catch (exception ex) {	console.writeline(ex.tostring());	}	} else {	
there s no git working copy in 

static void readrevisionfromfile() {	try {	xdocument doc = xdocument.load("revision");	revisionnumber = (string)doc.root.element("revision");	gitcommithash = (string)doc.root.element("commithash");	gitbranchname = (string)doc.root.element("branchname");	} catch (exception e) {	console.writeline(e.message);	console.writeline();	
the revision number of the sharpdevelop version being compiled could not be retrieved 

static void readrevisionfromfile() {	try {	xdocument doc = xdocument.load("revision");	revisionnumber = (string)doc.root.element("revision");	gitcommithash = (string)doc.root.element("commithash");	gitbranchname = (string)doc.root.element("branchname");	} catch (exception e) {	console.writeline(e.message);	console.writeline();	console.writeline();	
build continues with revision number 

========================= sharpdevelop sample_362 =========================

public static void main(string[] args) {	list<int> allocationsizes = new list<int>();	
functioninfo bit 

public static void main(string[] args) {	list<int> allocationsizes = new list<int>();	allocationsizes.clear();	for (int i = 1; i < 27; i++) {	allocationsizes.add(4 * (1<<i) + 24);	}	console.writeline(findperfecthash(allocationsizes.toarray(), 32));	
functioninfo bit 

allocationsizes.clear();	for (int i = 1; i < 27; i++) {	allocationsizes.add(4 * (1<<i) + 24);	}	console.writeline(findperfecthash(allocationsizes.toarray(), 32));	allocationsizes.clear();	for (int i = 1; i < 27; i++) {	allocationsizes.add(8 * (1<<i) + 24);	}	console.writeline(findperfecthash(allocationsizes.toarray(), 32));	
stack bit 

for (int i = 1; i < 27; i++) {	allocationsizes.add(8 * (1<<i) + 24);	}	console.writeline(findperfecthash(allocationsizes.toarray(), 32));	allocationsizes.clear();	allocationsizes.add(3 * 4 + 4);	for (int i = 64; i <= 1024 * 1024; i *= 2) {	allocationsizes.add(12 * i);	}	console.writeline(findperfecthash(allocationsizes, 16));	
stack bit 

========================= sharpdevelop sample_2045 =========================

public static void set(string value, string setting) {	if (value.tolower().equals("t")) {	traceutil.level = (tracelevel)convert.toint32(setting);	
trace level set to 

========================= sharpdevelop sample_57 =========================

protected virtual void ondragmousedown(object sender, mousebuttoneventargs e) {	
ondragmousedown 

protected virtual void ondragmouseup(object sender, mousebuttoneventargs e) {	ismousedown = false;	
ondragmouseup 

protected virtual void focuscontent() {	if (isactivecontent && !iskeyboardfocused) {	#region focus on winforms content if (this.content is windowsformshost) {	}	#endregion dispatcher.begininvoke(dispatcherpriority.input, new threadstart(delegate {	if (isactivecontent && !iskeyboardfocused) {	if (defaultelement != null) {	
try to set kb focus to 

protected virtual void focuscontent() {	if (isactivecontent && !iskeyboardfocused) {	#region focus on winforms content if (this.content is windowsformshost) {	}	#endregion dispatcher.begininvoke(dispatcherpriority.input, new threadstart(delegate {	if (isactivecontent && !iskeyboardfocused) {	if (defaultelement != null) {	iinputelement kbfocused = keyboard.focus(defaultelement);	if (kbfocused != null) debug.writeline("focused element " + kbfocused);	
no focused element 

if (isactivecontent && !iskeyboardfocused) {	#region focus on winforms content if (this.content is windowsformshost) {	}	#endregion dispatcher.begininvoke(dispatcherpriority.input, new threadstart(delegate {	if (isactivecontent && !iskeyboardfocused) {	if (defaultelement != null) {	iinputelement kbfocused = keyboard.focus(defaultelement);	if (kbfocused != null) debug.writeline("focused element " + kbfocused);	}	else if (content is uielement && content is dependencyobject) {	
try to set kb focus to 

#endregion dispatcher.begininvoke(dispatcherpriority.input, new threadstart(delegate {	if (isactivecontent && !iskeyboardfocused) {	if (defaultelement != null) {	iinputelement kbfocused = keyboard.focus(defaultelement);	if (kbfocused != null) debug.writeline("focused element " + kbfocused);	}	else if (content is uielement && content is dependencyobject) {	(content as uielement).focus();	iinputelement kbfocused = keyboard.focus(this.content as iinputelement);	if (kbfocused != null) debug.writeline("focused element " + kbfocused);	
no focused element 

========================= sharpdevelop sample_558 =========================

public isettings loadsettings() {	try {	return loadsettings(getsolutiondirectory());	} catch (exception ex) {	
unable to load nuget config file 

========================= sharpdevelop sample_939 =========================

public override bool hassearchchildren(isearcher searcher) {	searcher.reportstatus("reading: ", getname(prefer_description));	try {	_searchmode = true;	readtypelibinfo();	_searchmode = false;	} catch (exception ex) {	
exception reading typelib info during find ex 

typelibrary convlib = (typelibrary)_openedtypelibs[key];	if (convlib == null) {	lib = new typelibrary();	lib.key = key;	lib.populatefromregistry(versionkey);	} else {	lib = convlib;	}	_registeredtypelibs.add(lib, lib);	} catch (exception ex) {	
typelib failure to read 

protected void createassynames() {	if (_assyinfo._name == null) {	string dir = componentinspectorproperties.convertedassemblydirectory;	
createassynames using name typelibkey 

protected void createassynames() {	if (_assyinfo._name == null) {	string dir = componentinspectorproperties.convertedassemblydirectory;	string basename = _name + "_" + _typelibkey._version.replace(".", "_");	basename = basename.replace(":", "_");	basename = basename.replace(".", "_");	basename = basename.replace("\\", "_");	
createassynames basename 

protected void generatesource() {	string filename = _assyinfo._name + ".cs";	try {	file.openread(filename);	return;	} catch (filenotfoundexception) {	}	createassynames();	readtypelibinfo();	filestream outstr = file.create(filename);	
generating source file 

protected void markconverted() {	lock (typeof(typelibrary)) {	if (!_converted) {	
typelib markconverted 

public void reportevent(importereventkind eventkind, int eventcode, string eventmsg) {	
typelib convert warning 

public string resolveactivexreference(ucomitypelib typelib) {	
typelib resolveactivexref 

public string resolvecomreference(assemblyname assyname) {	string refstr = assyname.name + ".dll";	typelibrary typelib = (typelibrary)_primaryinteroptypelibs[assyname.tostring()];	if (typelib != null) refstr = typelib._assy.location;	
typelib resolvecomref name ret 

public string resolvecomreference(ucomitypelib typelib) {	string refstr = resolveref(typelib)._assyinfo._filename;	
typelib resolvecomref typelib ret 

public string resolvemanagedreference(string assyname) {	string refstr = assyname + ".dll";	
typelib resolvemanagedref ret 

protected typelibrary resolveref(ucomitypelib itypelib) {	
typelib resolving 

protected typelibrary resolveref(ucomitypelib itypelib) {	typelibrary lib = gettypelib(itypelib);	
typelib resolved assy 

protected void populatefromregistry(typelibkey typelibkey) {	
typelib populatefromregistry 

========================= sharpdevelop sample_63 =========================

public void notifynodeexpandedchanged(t changednode) {	
hierarchylist start notifynodeexpandedchanged 

if (changednode.isexpanded) {	foreach (t node in getvisiblechildren(changednode.children)) {	base.insert(index++, node);	}	} else {	int visiblechildren = changednode.children.sum(c => c.visibleelementcount);	for (int i = visiblechildren - 1; i >= 0; i--) {	base.removeat(index + i);	}	}	
hierarchylist end notifynodeexpandedchanged 

========================= sharpdevelop sample_2020 =========================

for (int i = disposabletypes.length - 1; i >= 0; i--) {	idisposable disposable = null;	lock (services) {	object serviceinstance;	if (services.trygetvalue(disposabletypes[i], out serviceinstance)) {	disposable = serviceinstance as idisposable;	if (disposable != null) services.remove(disposabletypes[i]);	}	}	if (disposable != null) {	
service shutdown 

========================= sharpdevelop sample_4848 =========================

public designerview (openedfile openedfile,idesignergenerator generator) : base(openedfile){	if (openedfile == null) {	throw new argumentnullexception("openedfile");	}	
designerview load from 

defaultservicecontainer.addservice(typeof(ambientproperties), ambientproperties);	defaultservicecontainer.addservice(typeof(ityperesolutionservice), new typeresolutionservice());	defaultservicecontainer.addservice(typeof(itypediscoveryservice),new typediscoveryservice());	defaultservicecontainer.addservice(typeof(imenucommandservice), new icsharpcode.reporting.addin.services.menucommandservice(panel, designsurface));	defaultservicecontainer.addservice(typeof(memberrelationshipservice),new defaultmemberrelationshipservice());	defaultservicecontainer.addservice(typeof(openedfile),base.primaryfile);	
load designeroptionservice 

defaultservicecontainer.addservice(typeof(ambientproperties), ambientproperties);	defaultservicecontainer.addservice(typeof(ityperesolutionservice), new typeresolutionservice());	defaultservicecontainer.addservice(typeof(itypediscoveryservice),new typediscoveryservice());	defaultservicecontainer.addservice(typeof(imenucommandservice), new icsharpcode.reporting.addin.services.menucommandservice(panel, designsurface));	defaultservicecontainer.addservice(typeof(memberrelationshipservice),new defaultmemberrelationshipservice());	defaultservicecontainer.addservice(typeof(openedfile),base.primaryfile);	var designeroptionservice = createdesigneroptions();	defaultservicecontainer.addservice( typeof( designeroptionservice ), designeroptionservice );	
create reportdesignerloader 

defaultservicecontainer.addservice(typeof(ityperesolutionservice), new typeresolutionservice());	defaultservicecontainer.addservice(typeof(itypediscoveryservice),new typediscoveryservice());	defaultservicecontainer.addservice(typeof(imenucommandservice), new icsharpcode.reporting.addin.services.menucommandservice(panel, designsurface));	defaultservicecontainer.addservice(typeof(memberrelationshipservice),new defaultmemberrelationshipservice());	defaultservicecontainer.addservice(typeof(openedfile),base.primaryfile);	var designeroptionservice = createdesigneroptions();	defaultservicecontainer.addservice( typeof( designeroptionservice ), designeroptionservice );	loader = new reportdesignerloader(generator, stream);	designsurface.beginload(this.loader);	if (!designsurface.isloaded) {	
designer not loaded 

selectionservice.selectionchanged  += selectionchangedhandler;	undoengine = new reportdesignerundoengine(host);	var componentchangeservice = (icomponentchangeservice)this.designsurface.getservice(typeof(icomponentchangeservice));	componentchangeservice.componentchanged += oncomponentchanged;	componentchangeservice.componentadded   += oncomponentlistchanged;	componentchangeservice.componentremoved += oncomponentlistchanged;	componentchangeservice.componentrename  += oncomponentlistchanged;	this.host.transactionclosed += transactionclose;	updatepropertypad();	hasunmergedchanges = false;	
reportdesigner loaddesigner end 

static defaultservicecontainer createandinitservicecontainer() {	
reportdesigner createandinitservicecontainer 

static windowsformsdesigneroptionservice createdesigneroptions() {	
reportdesigner createdesigneroptions 

public override void load(openedfile file, stream stream) {	
reportdesigner load from 

========================= sharpdevelop sample_1542 =========================

return null;	} else if ((pe = expr as primitiveexpression) != null) {	if (pe.value is string) {	if (foundstringliteral) {	return null;	}	if (!result.region.isempty) {	caretoffset = document.positiontooffset(result.region.beginline, result.region.begincolumn) - 2;	if (caretoffset < 0) return null;	} else {	
resourcetoolkit nrefactoryresourceresolver found string literal but result region is empty trying to infer position from text 

if (pe.value is string) {	if (foundstringliteral) {	return null;	}	if (!result.region.isempty) {	caretoffset = document.positiontooffset(result.region.beginline, result.region.begincolumn) - 2;	if (caretoffset < 0) return null;	} else {	int newcaretoffset = document.gettext(0, math.min(document.textlength, caretoffset + result.expression.length)).lastindexof(result.expression);	if (newcaretoffset == -1) {	
resourcetoolkit nrefactoryresourceresolver could not find resolved expression in text 

return new resourcesetreference(resourcename, filename);	}	list<string> possiblesourcefiles = new list<string>();	iprojectcontent pc = resourceresolverservice.getprojectcontent(p);	if (pc != null) {	iclass resourceclass = pc.getclass(resourcename, 0);	if (resourceclass != null) {	compoundclass cc = resourceclass.getcompoundclass() as compoundclass;	foreach (iclass c in (cc == null ? (ilist<iclass>)new iclass[] { resourceclass } : cc.parts)) {	if (c.compilationunit != null && c.compilationunit.filename != null) {	
resourcetoolkit nrefactoryresourceresolver found file to contain the type 

}	}	}	}	foreach (string possiblesourcefile in possiblesourcefiles) {	string possiblesourcefilename = path.getfilename(possiblesourcefile);	foreach (projectitem pi in p.items) {	fileprojectitem fpi = pi as fileprojectitem;	if (fpi != null) {	if (fpi.dependentupon != null && (fpi.itemtype == itemtype.embeddedresource || fpi.itemtype == itemtype.resource || fpi.itemtype == itemtype.none) && fileutility.isequalfilename(fpi.dependentupon, possiblesourcefilename)) {	
resourcetoolkit nrefactoryresourceresolver trying to use dependent file as resource file 

}	}	if (filename != null) {	return new resourcesetreference(resourcename, filename);	}	if ((filename = findresourcefilename(possiblesourcefile)) != null) {	return new resourcesetreference(resourcename, filename);	}	}	} else {	
resourcetoolkit nrefactoryresourceresolver getresourcesetreference could not determine the project for the source file null 

if ((filename = findresourcefilename(possiblesourcefile)) != null) {	return new resourcesetreference(resourcename, filename);	}	}	} else {	#endif if (sourcefilename != null) {	string directory = path.getdirectoryname(sourcefilename);	string resourcepart = resourcename;	string filename;	while (true) {	
resourcetoolkit nrefactoryresourceresolver getresourcesetreference looking for a resource file like 

return new resourcesetreference(resourcename, filename);	}	if (resourcepart.contains(".")) {	resourcepart = resourcepart.substring(resourcepart.indexof('.')+1);	} else {	break;	}	}	}	}	
resourcetoolkit nrefactoryresourceresolver getresourcesetreference is unable to find a suitable resource file for 

========================= sharpdevelop sample_1614 =========================

string srcdir = @"..\..\..\..\";	debug.writeline(path.getfullpath(srcdir));	list<xmlelement> doozers = new list<xmlelement>();	list<xmlelement> conditions = new list<xmlelement>();	if (!readxmldocu(srcdir + "main\\base\\project\\icsharpcode.sharpdevelop.csproj", doozers, conditions)) return;	processstartinfo info = new processstartinfo("cmd", "/c debugbuild.bat");	info.workingdirectory = path.getfullpath(path.combine(srcdir, ".."));	debug.writeline(info.workingdirectory + ">" + info.filename + " " + info.arguments);	process p = process.start(info);	if (!p.waitforexit(60000)) {	
msbuild did not exit 

list<xmlelement> conditions = new list<xmlelement>();	if (!readxmldocu(srcdir + "main\\base\\project\\icsharpcode.sharpdevelop.csproj", doozers, conditions)) return;	processstartinfo info = new processstartinfo("cmd", "/c debugbuild.bat");	info.workingdirectory = path.getfullpath(path.combine(srcdir, ".."));	debug.writeline(info.workingdirectory + ">" + info.filename + " " + info.arguments);	process p = process.start(info);	if (!p.waitforexit(60000)) {	return;	}	if (p.exitcode != 0) {	
msbuild exit code 

xmldocument coredoc = new xmldocument();	coredoc.load(srcdir + "..\\bin\\icsharpcode.core.xml");	readxmldocu(coredoc, doozers, conditions);	comparison<xmlelement> comparison = delegate(xmlelement a, xmlelement b) {	string shortnamea = a.getattribute("name").substring(a.getattribute("name").lastindexof('.') + 1);	string shortnameb = b.getattribute("name").substring(b.getattribute("name").lastindexof('.') + 1);	return shortnamea.compareto(shortnameb);	};	doozers.sort(comparison);	conditions.sort(comparison);	
writing doozer list 

string shortnameb = b.getattribute("name").substring(b.getattribute("name").lastindexof('.') + 1);	return shortnamea.compareto(shortnameb);	};	doozers.sort(comparison);	conditions.sort(comparison);	using (streamwriter html = new streamwriter(path.combine(srcdir, "..\\doc\\technotes\\doozerlist.html"))) {	writeheader(html, "doozer list");	writelist(html, doozers, true);	writefooter(html);	}	
writing condition list 

using (streamwriter html = new streamwriter(path.combine(srcdir, "..\\doc\\technotes\\doozerlist.html"))) {	writeheader(html, "doozer list");	writelist(html, doozers, true);	writefooter(html);	}	using (streamwriter html = new streamwriter(path.combine(srcdir, "..\\doc\\technotes\\conditionlist.html"))) {	writeheader(html, "condition list");	writelist(html, conditions, false);	writefooter(html);	}	
building addin schema 

int errors = 0;	validationeventhandler validation = (sender, e) => { debug.writeline(e.message); errors++; };	xmlschema.read(new xmlnodereader(doc.documentelement), validation).compile(validation);	if (errors == 0) {	using (xmltextwriter writer = new xmltextwriter(path.combine(srcdir, "..\\data\\schemas\\addin.xsd"), system.text.encoding.utf8)) {	writer.formatting = formatting.indented;	writer.indentchar = '\t';	writer.indentation = 1;	doc.save(writer);	}	
finished 

validationeventhandler validation = (sender, e) => { debug.writeline(e.message); errors++; };	xmlschema.read(new xmlnodereader(doc.documentelement), validation).compile(validation);	if (errors == 0) {	using (xmltextwriter writer = new xmltextwriter(path.combine(srcdir, "..\\data\\schemas\\addin.xsd"), system.text.encoding.utf8)) {	writer.formatting = formatting.indented;	writer.indentchar = '\t';	writer.indentation = 1;	doc.save(writer);	}	} else {	
finished with errors 

static void writelist(streamwriter html, list<xmlelement> elementlist, bool isdoozer) {	
ul 

}	if (isdoozer) shortname = shortname.substring(0, shortname.length - "doozer".length);	else shortname = shortname.substring(0, shortname.length - "conditionevaluator".length);	if (shortname == "i") {	elementlist.removeat(i--);	continue;	}	e.setattribute("shortname", shortname);	html.writeline("  <li><a href=\"#" + shortname + "\">" + shortname + "</a>");	}	
ul 

if (shortname == "i") {	elementlist.removeat(i--);	continue;	}	e.setattribute("shortname", shortname);	html.writeline("  <li><a href=\"#" + shortname + "\">" + shortname + "</a>");	}	foreach (xmlelement e in elementlist) {	string fullname = e.getattribute("name").substring(2);	string shortname = e.getattribute("shortname");	
div 

elementlist.removeat(i--);	continue;	}	e.setattribute("shortname", shortname);	html.writeline("  <li><a href=\"#" + shortname + "\">" + shortname + "</a>");	}	foreach (xmlelement e in elementlist) {	string fullname = e.getattribute("name").substring(2);	string shortname = e.getattribute("shortname");	html.writeline("  <h2><a name=\"" + shortname + "\">" + shortname + "</a></h2>");	
p summary p 

elementlist.removeat(i--);	continue;	}	e.setattribute("shortname", shortname);	html.writeline("  <li><a href=\"#" + shortname + "\">" + shortname + "</a>");	}	foreach (xmlelement e in elementlist) {	string fullname = e.getattribute("name").substring(2);	string shortname = e.getattribute("shortname");	html.writeline("  <h2><a name=\"" + shortname + "\">" + shortname + "</a></h2>");	
table 

elementlist.removeat(i--);	continue;	}	e.setattribute("shortname", shortname);	html.writeline("  <li><a href=\"#" + shortname + "\">" + shortname + "</a>");	}	foreach (xmlelement e in elementlist) {	string fullname = e.getattribute("name").substring(2);	string shortname = e.getattribute("shortname");	html.writeline("  <h2><a name=\"" + shortname + "\">" + shortname + "</a></h2>");	
tr 

}	e.setattribute("shortname", shortname);	html.writeline("  <li><a href=\"#" + shortname + "\">" + shortname + "</a>");	}	foreach (xmlelement e in elementlist) {	string fullname = e.getattribute("name").substring(2);	string shortname = e.getattribute("shortname");	html.writeline("  <h2><a name=\"" + shortname + "\">" + shortname + "</a></h2>");	if (isdoozer) html.writeline("       <th colspan=2>doozer name:</td>");	else html.writeline("       <th colspan=2>condition name:</td>");	
td td 

}	e.setattribute("shortname", shortname);	html.writeline("  <li><a href=\"#" + shortname + "\">" + shortname + "</a>");	}	foreach (xmlelement e in elementlist) {	string fullname = e.getattribute("name").substring(2);	string shortname = e.getattribute("shortname");	html.writeline("  <h2><a name=\"" + shortname + "\">" + shortname + "</a></h2>");	if (isdoozer) html.writeline("       <th colspan=2>doozer name:</td>");	else html.writeline("       <th colspan=2>condition name:</td>");	
tr 

if (isdoozer) html.writeline("       <th colspan=2>doozer name:</td>");	else html.writeline("       <th colspan=2>condition name:</td>");	bool lastwasattribute = false;	foreach (xmlelement sub in e) {	switch (sub.name) {	case "summary": case "example": break;	case "attribute": if (!lastwasattribute) {	lastwasattribute = true;	html.writeline("    <tr><td colspan=3><hr><h3>attributes:</h3></td></tr>");	}	
tr 

else html.writeline("       <th colspan=2>condition name:</td>");	bool lastwasattribute = false;	foreach (xmlelement sub in e) {	switch (sub.name) {	case "summary": case "example": break;	case "attribute": if (!lastwasattribute) {	lastwasattribute = true;	html.writeline("    <tr><td colspan=3><hr><h3>attributes:</h3></td></tr>");	}	if (sub.hasattribute("use")) {	
th name td 

case "summary": case "example": break;	case "attribute": if (!lastwasattribute) {	lastwasattribute = true;	html.writeline("    <tr><td colspan=3><hr><h3>attributes:</h3></td></tr>");	}	if (sub.hasattribute("use")) {	html.writeline("       <td class=\"userequired\">" + sub.getattribute("use") + "</td>");	} else {	html.writeline("       <th colspan=2>" + sub.getattribute("name") + ":</td>");	}	
td td 

case "summary": case "example": break;	case "attribute": if (!lastwasattribute) {	lastwasattribute = true;	html.writeline("    <tr><td colspan=3><hr><h3>attributes:</h3></td></tr>");	}	if (sub.hasattribute("use")) {	html.writeline("       <td class=\"userequired\">" + sub.getattribute("use") + "</td>");	} else {	html.writeline("       <th colspan=2>" + sub.getattribute("name") + ":</td>");	}	
tr 

if (sub.hasattribute("use")) {	html.writeline("       <td class=\"userequired\">" + sub.getattribute("use") + "</td>");	} else {	html.writeline("       <th colspan=2>" + sub.getattribute("name") + ":</td>");	}	break;	default: if (lastwasattribute) {	lastwasattribute = false;	html.writeline("    <tr><td colspan=3><hr></td></tr>");	}	
tr 

html.writeline("       <td class=\"userequired\">" + sub.getattribute("use") + "</td>");	} else {	html.writeline("       <th colspan=2>" + sub.getattribute("name") + ":</td>");	}	break;	default: if (lastwasattribute) {	lastwasattribute = false;	html.writeline("    <tr><td colspan=3><hr></td></tr>");	}	html.writeline("       <th colspan=2>" + char.toupper(sub.name[0]) + sub.name.substring(1) + ":</td>");	
td td 

html.writeline("       <td class=\"userequired\">" + sub.getattribute("use") + "</td>");	} else {	html.writeline("       <th colspan=2>" + sub.getattribute("name") + ":</td>");	}	break;	default: if (lastwasattribute) {	lastwasattribute = false;	html.writeline("    <tr><td colspan=3><hr></td></tr>");	}	html.writeline("       <th colspan=2>" + char.toupper(sub.name[0]) + sub.name.substring(1) + ":</td>");	
tr 

}	break;	default: if (lastwasattribute) {	lastwasattribute = false;	html.writeline("    <tr><td colspan=3><hr></td></tr>");	}	html.writeline("       <th colspan=2>" + char.toupper(sub.name[0]) + sub.name.substring(1) + ":</td>");	break;	}	}	
table 

lastwasattribute = false;	html.writeline("    <tr><td colspan=3><hr></td></tr>");	}	html.writeline("       <th colspan=2>" + char.toupper(sub.name[0]) + sub.name.substring(1) + ":</td>");	break;	}	}	foreach (xmlelement sub in e) {	if (sub.name == "example") {	html.writeline("  <p><span class=\"exampletitle\">example: " + xmltohtml(sub.getattribute("title")) + "</span>");	
br pre pre p 

}	html.writeline("       <th colspan=2>" + char.toupper(sub.name[0]) + sub.name.substring(1) + ":</td>");	break;	}	}	foreach (xmlelement sub in e) {	if (sub.name == "example") {	html.writeline("  <p><span class=\"exampletitle\">example: " + xmltohtml(sub.getattribute("title")) + "</span>");	}	}	
div 

static void writeheader(streamwriter html, string title) {	
html head 

static void writeheader(streamwriter html, string title) {	
title title 

static void writeheader(streamwriter html, string title) {	html.writeline("  <link rel=\"stylesheet\" type=\"text/css\" href=\"listing.css\">");	html.writeline("  <meta name=\"generator\" value=\"buildaddindocumentation\">");	
head body 

static void writeheader(streamwriter html, string title) {	html.writeline("  <link rel=\"stylesheet\" type=\"text/css\" href=\"listing.css\">");	html.writeline("  <meta name=\"generator\" value=\"buildaddindocumentation\">");	html.writeline("<h1>" + title + "</h1>");	html.writeline("<p class=\"notice\">this file was generated by the tool 'buildaddindocumentation'.");	
it is based on sharpdevelop p 

static void writefooter(streamwriter html) {	
body html 

static xmldocument getxmldocu(string projectfilename) {	string docfile = path.getfullpath("doc.xml");	if (file.exists(docfile)) file.delete(docfile);	string args = path.getfilename(projectfilename) + " \"/p:documentationfile=" + docfile +  "\" \"/p:nowarn=1591 1573 1574 1572 419\"";	string msbuild = path.combine(path.getdirectoryname(typeof(object).assembly.location), "msbuild.exe");	processstartinfo info = new processstartinfo(msbuild, args);	info.workingdirectory = path.getdirectoryname(projectfilename);	debug.writeline(info.workingdirectory + ">" + info.filename + " " + info.arguments);	process p = process.start(info);	if (!p.waitforexit(60000)) {	
msbuild did not exit 

string args = path.getfilename(projectfilename) + " \"/p:documentationfile=" + docfile +  "\" \"/p:nowarn=1591 1573 1574 1572 419\"";	string msbuild = path.combine(path.getdirectoryname(typeof(object).assembly.location), "msbuild.exe");	processstartinfo info = new processstartinfo(msbuild, args);	info.workingdirectory = path.getdirectoryname(projectfilename);	debug.writeline(info.workingdirectory + ">" + info.filename + " " + info.arguments);	process p = process.start(info);	if (!p.waitforexit(60000)) {	return null;	}	if (p.exitcode != 0) {	
msbuild exit code 

========================= sharpdevelop sample_376 =========================

output.write(">");	if (showlinenumbers) {	output.write("<span");	writestyle(output, linenumberstyle);	output.write('>');	output.write(linenumber.tostring().padleft(longestnumberlength));	output.write(":  ");	output.write("</span>");	}	printwords(output, line);	
pre 

if (showlinenumbers) {	output.write("<span");	writestyle(output, linenumberstyle);	output.write('>');	output.write(linenumber.tostring().padleft(longestnumberlength));	output.write(":  ");	output.write("</span>");	}	printwords(output, line);	}	
div 

}	} else {	output.write("<pre");	writestyle(output, mymainstyle + linestyle);	output.writeline(">");	for (int linenumber = 1; linenumber <= document.linecount; linenumber++) {	highlightedline line = highlighter.highlightline(linenumber);	printwords(output, line);	output.writeline();	}	
pre 

========================= sharpdevelop sample_294 =========================

public override void execute(object parameter) {	if (parameter == null) throw new argumentnullexception("parameter");	filetemplateresult result = (filetemplateresult)parameter;	var openedfile = result.newopenedfiles.single();	var wizardviewmodel = new reportwizardcontext();	var reportwizard = new icsharpcode.reporting.addin.reportwizard.dialog.reportwizard(wizardviewmodel);	reportwizard.showdialog();	if (reportwizard.dialogresult.hasvalue && reportwizard.dialogresult.value){	
reportwizard createreport 

var wizardviewmodel = new reportwizardcontext();	var reportwizard = new icsharpcode.reporting.addin.reportwizard.dialog.reportwizard(wizardviewmodel);	reportwizard.showdialog();	if (reportwizard.dialogresult.hasvalue && reportwizard.dialogresult.value){	var rg = new reportgenerator();	rg.generate(wizardviewmodel);	string xml = createformsheetfrommodel.toxml(rg.reportmodel).tostring();	openedfile.setdata(encoding.utf8.getbytes(xml));	if (!openedfile.isuntitled) openedfile.savetodisk();	} else {	
reportwizard canceled 

========================= sharpdevelop sample_1477 =========================

internaltrace.initialize("nunit-console_%p.log", level);	log.info("nunit-console.exe starting");	if(!options.nologo) writecopyright();	if(options.help) {	options.help();	return consoleui.ok;	}	if (options.cleanup) {	log.info("performing cleanup of shadow copy cache");	domainmanager.deleteshadowcopypath();	
shadow copy cache emptied 

if(options.help) {	options.help();	return consoleui.ok;	}	if (options.cleanup) {	log.info("performing cleanup of shadow copy cache");	domainmanager.deleteshadowcopypath();	return consoleui.ok;	}	if (options.noargs) {	
fatal error no inputs specified 

if (options.cleanup) {	log.info("performing cleanup of shadow copy cache");	domainmanager.deleteshadowcopypath();	return consoleui.ok;	}	if (options.noargs) {	options.help();	return consoleui.ok;	}	if(!options.validate()) {	
fatal error invalid argument 

}	servicemanager.services.addservice( settingsservice );	servicemanager.services.addservice( new domainmanager() );	servicemanager.services.addservice( new projectservice() );	servicemanager.services.addservice( new addinregistry() );	servicemanager.services.addservice( new addinmanager() );	servicemanager.services.addservice( new testagency() );	servicemanager.services.initializeservices();	foreach (string parm in options.parameters) {	if (!services.projectservice.canloadproject(parm) && !pathutils.isassemblyfiletype(parm)) {	
file type not known 

}	try {	extendedconsoleui consoleui = new extendedconsoleui();	return consoleui.execute( options );	}	catch( filenotfoundexception ex ) {	console.writeline( ex.message );	return consoleui.file_not_found;	}	catch( exception ex ) {	
unhandled exception 

}	catch( filenotfoundexception ex ) {	console.writeline( ex.message );	return consoleui.file_not_found;	}	catch( exception ex ) {	return consoleui.unexpected_error;	}	finally {	if(options.wait) {	
hit enter key to continue 

#elif clr_1_1 string productname = "nunit-console (.net 1.1)";	#else string productname = "nunit-console";	#endif string copyrighttext = "copyright (c) 2002-2012 charlie poole.\r\ncopyright (c) 2002-2004 james w. newkirk, michael c. two, alexei a. vorontsov.\r\ncopyright (c) 2000-2002 philip craig.\r\nall rights reserved.";	object[] objectattrs = executingassembly.getcustomattributes(typeof(assemblycopyrightattribute), false);	if ( objectattrs.length > 0 ) copyrighttext = ((assemblycopyrightattribute)objectattrs[0]).copyright;	objectattrs = executingassembly.getcustomattributes(typeof(assemblyconfigurationattribute), false);	if (objectattrs.length > 0) {	string configtext = ((assemblyconfigurationattribute)objectattrs[0]).configuration;	if (configtext != "") versiontext += string.format(" ({0})", configtext);	}	
version 

#endif string copyrighttext = "copyright (c) 2002-2012 charlie poole.\r\ncopyright (c) 2002-2004 james w. newkirk, michael c. two, alexei a. vorontsov.\r\ncopyright (c) 2000-2002 philip craig.\r\nall rights reserved.";	object[] objectattrs = executingassembly.getcustomattributes(typeof(assemblycopyrightattribute), false);	if ( objectattrs.length > 0 ) copyrighttext = ((assemblycopyrightattribute)objectattrs[0]).copyright;	objectattrs = executingassembly.getcustomattributes(typeof(assemblyconfigurationattribute), false);	if (objectattrs.length > 0) {	string configtext = ((assemblyconfigurationattribute)objectattrs[0]).configuration;	if (configtext != "") versiontext += string.format(" ({0})", configtext);	}	console.writeline(copyrighttext);	console.writeline();	
runtime environment 

object[] objectattrs = executingassembly.getcustomattributes(typeof(assemblycopyrightattribute), false);	if ( objectattrs.length > 0 ) copyrighttext = ((assemblycopyrightattribute)objectattrs[0]).copyright;	objectattrs = executingassembly.getcustomattributes(typeof(assemblyconfigurationattribute), false);	if (objectattrs.length > 0) {	string configtext = ((assemblyconfigurationattribute)objectattrs[0]).configuration;	if (configtext != "") versiontext += string.format(" ({0})", configtext);	}	console.writeline(copyrighttext);	console.writeline();	runtimeframework framework = runtimeframework.currentframework;	
os version 

object[] objectattrs = executingassembly.getcustomattributes(typeof(assemblycopyrightattribute), false);	if ( objectattrs.length > 0 ) copyrighttext = ((assemblycopyrightattribute)objectattrs[0]).copyright;	objectattrs = executingassembly.getcustomattributes(typeof(assemblyconfigurationattribute), false);	if (objectattrs.length > 0) {	string configtext = ((assemblyconfigurationattribute)objectattrs[0]).configuration;	if (configtext != "") versiontext += string.format(" ({0})", configtext);	}	console.writeline(copyrighttext);	console.writeline();	runtimeframework framework = runtimeframework.currentframework;	
clr version 

========================= sharpdevelop sample_366 =========================

public override bool tryshowhelp(string fulltypename) {	if (string.isnullorempty(fulltypename)) {	throw new argumentnullexception("fulltypename");	}	
helpviewer tryshowhelp calls 

public override bool tryshowhelpbykeyword(string keyword) {	if (string.isnullorempty(keyword)) {	throw new argumentnullexception("keyword");	}	
helpviewer tryshowhelpbykeyword calls 

========================= sharpdevelop sample_1715 =========================

string cultureext = path.getextension(path.getfilenamewithoutextension(filename));	if (!string.isnullorempty(cultureext)) {	try {	this.culture = cultureinfo.getcultureinfo(cultureext.substring(1));	} catch (argumentexception) {	this.culture = cultureinfo.invariantculture;	}	} else {	this.culture = cultureinfo.invariantculture;	}	
resourcetoolkit created resourcefilecontent file culture name 

========================= sharpdevelop sample_1595 =========================

protected override string generatefullpathtotool() {	string path = toollocationhelper.getpathtodotnetframeworkfile(toolname, targetdotnetframeworkversion.versionlatest);	if (path == null) {	
general frameworksfilenotfound 

========================= sharpdevelop sample_337 =========================

protected void processchildproperties(xmlnode node, object parent) {	type t=parent.gettype();	foreach(xmlnode child in node.childnodes){	if (child is xmlelement) {	string pname=child.localname;	if (string.equals(pname,"items")) {	pname = "controls";	}	propertyinfo pi=t.getproperty(pname);	if (pi==null) {	
unsupported property 

try {	if (tc.canconvertfrom(typeof(string))) {	object val=tc.convertfrominvariantstring(value);	pi.setvalue(obj, val, null);	} else if (pi.propertytype == typeof(type)) {	pi.setvalue(obj, type.gettype(value), null);	}	}	catch(exception e) {	var s = string.format(cultureinfo.currentculture,"property setter for {0} failed {1}\r\n",pi.name, e.message);	
mycroparser 

========================= sharpdevelop sample_1503 =========================

public resolveresult resolve(filename filename, textlocation location, itextsource filecontent, icompilation compilation, cancellationtoken cancellationtoken) {	var entry = getfileentry(filename, true);	if (entry.parser == null || location.isempty) return errorresolveresult.unknownerror;	iproject project = compilation != null ? compilation.getproject() : null;	var parseinfo = entry.parse(filecontent, project, cancellationtoken);	if (parseinfo == null) return errorresolveresult.unknownerror;	if (compilation == null) compilation = getcompilationforfile(filename);	resolveresult rr = entry.parser.resolve(parseinfo, location, compilation, cancellationtoken);	
resolved to 

public resolveresult resolvesnippet(filename filename, textlocation filelocation, string codesnippet, itextsource filecontent, icompilation compilation, cancellationtoken cancellationtoken) {	var entry = getfileentry(filename, true);	if (entry.parser == null) return errorresolveresult.unknownerror;	iproject project = compilation != null ? compilation.getproject() : null;	var parseinfo = entry.parse(filecontent, project, cancellationtoken);	if (parseinfo == null) return errorresolveresult.unknownerror;	if (compilation == null) compilation = getcompilationforfile(filename);	resolveresult rr = entry.parser.resolvesnippet(parseinfo, filelocation, codesnippet, compilation, cancellationtoken);	
resolved to 

public task<resolveresult> resolveasync(filename filename, textlocation location, itextsource filecontent, icompilation compilation, cancellationtoken cancellationtoken) {	var entry = getfileentry(filename, true);	if (entry.parser == null || location.isempty) return task.fromresult<resolveresult>(errorresolveresult.unknownerror);	iproject project = compilation != null ? compilation.getproject() : null;	return entry.parseasync(filecontent, project, cancellationtoken).continuewith( delegate (task<parseinformation> parseinfotask) {	var parseinfo = parseinfotask.result;	if (parseinfo == null) return errorresolveresult.unknownerror;	if (compilation == null) compilation = getcompilationforfile(filename);	resolveresult rr = entry.parser.resolve(parseinfo, location, compilation, cancellationtoken);	
resolved to 

========================= sharpdevelop sample_4579 =========================

output.writeline();	output.unindent();	}	output.writeline("{");	output.indent();	bool oldisintype = isintype;	isintype = true;	writeattributes(type.customattributes);	writesecuritydeclarations(type);	if (type.haslayoutinfo) {	
pack 

output.writeline();	output.unindent();	}	output.writeline("{");	output.indent();	bool oldisintype = isintype;	isintype = true;	writeattributes(type.customattributes);	writesecuritydeclarations(type);	if (type.haslayoutinfo) {	
size 

output.writeline("{");	output.indent();	bool oldisintype = isintype;	isintype = true;	writeattributes(type.customattributes);	writesecuritydeclarations(type);	if (type.haslayoutinfo) {	output.writeline();	}	if (type.hasnestedtypes) {	
foreach var nestedtype in type nestedtypes 

output.writeline();	}	if (type.hasnestedtypes) {	cancellationtoken.throwifcancellationrequested();	disassembletype(nestedtype);	output.writeline();	}	output.writeline();	}	if (type.hasfields) {	
foreach var field in type fields 

}	output.writeline();	}	if (type.hasfields) {	cancellationtoken.throwifcancellationrequested();	disassemblefield(field);	}	output.writeline();	}	if (type.hasmethods) {	
foreach var m in type methods 

}	output.writeline();	}	if (type.hasmethods) {	cancellationtoken.throwifcancellationrequested();	disassemblemethod(m);	output.writeline();	}	}	if (type.hasevents) {	
foreach var ev in type events 

}	}	if (type.hasevents) {	cancellationtoken.throwifcancellationrequested();	disassembleevent(ev);	output.writeline();	}	output.writeline();	}	if (type.hasproperties) {	
foreach var prop in type properties 

output.write(".publickey = ");	writeblob(asm.name.publickey);	output.writeline();	}	if (asm.name.hashalgorithm != assemblyhashalgorithm.none) {	output.write(".hash algorithm 0x{0:x8}", (int)asm.name.hashalgorithm);	if (asm.name.hashalgorithm == assemblyhashalgorithm.sha1) output.write(" output.writeline();	}	version v = asm.name.version;	if (v != null) {	
ver 

output.write(".hash algorithm 0x{0:x8}", (int)asm.name.hashalgorithm);	if (asm.name.hashalgorithm == assemblyhashalgorithm.sha1) output.write(" output.writeline();	}	version v = asm.name.version;	if (v != null) {	}	closeblock();	}	public void writeassemblyreferences(moduledefinition module) {	foreach (var mref in module.modulereferences) {	
module extern 

output.write(".assembly extern ");	if (aref.iswindowsruntime) output.write("windowsruntime ");	output.write(disassemblerhelpers.escape(aref.name));	openblock(false);	if (aref.publickeytoken != null) {	output.write(".publickeytoken = ");	writeblob(aref.publickeytoken);	output.writeline();	}	if (aref.version != null) {	
ver 

}	}	public void writemoduleheader(moduledefinition module) {	if (module.hasexportedtypes) {	foreach (exportedtype exportedtype in module.exportedtypes) {	output.write(".class extern ");	if (exportedtype.isforwarder) output.write("forwarder ");	output.write(exportedtype.declaringtype != null ? exportedtype.name : exportedtype.fullname);	openblock(false);	if (exportedtype.declaringtype != null) output.writeline(".class extern {0}", disassemblerhelpers.escape(exportedtype.declaringtype.fullname));	
assembly extern 

if (module.hasexportedtypes) {	foreach (exportedtype exportedtype in module.exportedtypes) {	output.write(".class extern ");	if (exportedtype.isforwarder) output.write("forwarder ");	output.write(exportedtype.declaringtype != null ? exportedtype.name : exportedtype.fullname);	openblock(false);	if (exportedtype.declaringtype != null) output.writeline(".class extern {0}", disassemblerhelpers.escape(exportedtype.declaringtype.fullname));	closeblock();	}	}	
module 

if (module.hasexportedtypes) {	foreach (exportedtype exportedtype in module.exportedtypes) {	output.write(".class extern ");	if (exportedtype.isforwarder) output.write("forwarder ");	output.write(exportedtype.declaringtype != null ? exportedtype.name : exportedtype.fullname);	openblock(false);	if (exportedtype.declaringtype != null) output.writeline(".class extern {0}", disassemblerhelpers.escape(exportedtype.declaringtype.fullname));	closeblock();	}	}	
output writeline 

========================= sharpdevelop sample_479 =========================

